/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
import { Pipe } from '@angular/core';
import { applyPrecision, isNumberFinite, isUndefined } from '../helpers/helpers';
export class BytesPipe {
    constructor() {
        this.dictionary = [
            { max: 1024, type: 'B' },
            { max: 1048576, type: 'KB' },
            { max: 1073741824, type: 'MB' },
            { max: 1.0995116e12, type: 'GB' },
        ];
    }
    /**
     * @param {?} value
     * @param {?=} precision
     * @return {?}
     */
    transform(value, precision) {
        if (!isNumberFinite(value)) {
            return NaN;
        }
        const /** @type {?} */ format = this.dictionary.find(d => value < d.max) || this.dictionary[this.dictionary.length - 1];
        const /** @type {?} */ calc = value / (format.max / 1024);
        const /** @type {?} */ num = isUndefined(precision) ? calc : applyPrecision(calc, precision);
        return `${num} ${format.type}`;
    }
}
BytesPipe.decorators = [
    { type: Pipe, args: [{ name: 'bytes' },] },
];
function BytesPipe_tsickle_Closure_declarations() {
    /** @type {?} */
    BytesPipe.prototype.dictionary;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnl0ZXMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtcGlwZXMvIiwic291cmNlcyI6WyJzcmMvcGlwZXMvbWF0aC9ieXRlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsV0FBVyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFHakYsTUFBTTs7MEJBQ3VEO1lBQ3pELEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFO1lBQ3hCLEVBQUUsR0FBRyxFQUFFLE9BQU8sRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFO1lBQzVCLEVBQUUsR0FBRyxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFO1lBQy9CLEVBQUUsR0FBRyxFQUFFLFlBQVksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFO1NBQ2xDOzs7Ozs7O0lBRUQsU0FBUyxDQUFDLEtBQWEsRUFBRSxTQUE4QjtRQUNyRCxFQUFFLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDM0IsTUFBTSxDQUFDLEdBQUcsQ0FBQztTQUNaO1FBRUQsdUJBQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3ZHLHVCQUFNLElBQUksR0FBRyxLQUFLLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxDQUFDO1FBQ3pDLHVCQUFNLEdBQUcsR0FBRyxXQUFXLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztRQUU1RSxNQUFNLENBQUMsR0FBRyxHQUFHLElBQUksTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDO0tBQ2hDOzs7WUFuQkYsSUFBSSxTQUFDLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGFwcGx5UHJlY2lzaW9uLCBpc051bWJlckZpbml0ZSwgaXNVbmRlZmluZWQgfSBmcm9tICcuLi9oZWxwZXJzL2hlbHBlcnMnO1xuXG5AUGlwZSh7IG5hbWU6ICdieXRlcycgfSlcbmV4cG9ydCBjbGFzcyBCeXRlc1BpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgcHJpdmF0ZSBkaWN0aW9uYXJ5OiBBcnJheTx7IG1heDogbnVtYmVyOyB0eXBlOiBzdHJpbmcgfT4gPSBbXG4gICAgeyBtYXg6IDEwMjQsIHR5cGU6ICdCJyB9LFxuICAgIHsgbWF4OiAxMDQ4NTc2LCB0eXBlOiAnS0InIH0sXG4gICAgeyBtYXg6IDEwNzM3NDE4MjQsIHR5cGU6ICdNQicgfSxcbiAgICB7IG1heDogMS4wOTk1MTE2ZTEyLCB0eXBlOiAnR0InIH0sXG4gIF07XG5cbiAgdHJhbnNmb3JtKHZhbHVlOiBudW1iZXIsIHByZWNpc2lvbj86IG51bWJlciB8IHVuZGVmaW5lZCk6IHN0cmluZyB8IG51bWJlciB7XG4gICAgaWYgKCFpc051bWJlckZpbml0ZSh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBOYU47XG4gICAgfVxuXG4gICAgY29uc3QgZm9ybWF0ID0gdGhpcy5kaWN0aW9uYXJ5LmZpbmQoZCA9PiB2YWx1ZSA8IGQubWF4KSB8fCB0aGlzLmRpY3Rpb25hcnlbdGhpcy5kaWN0aW9uYXJ5Lmxlbmd0aCAtIDFdO1xuICAgIGNvbnN0IGNhbGMgPSB2YWx1ZSAvIChmb3JtYXQubWF4IC8gMTAyNCk7XG4gICAgY29uc3QgbnVtID0gaXNVbmRlZmluZWQocHJlY2lzaW9uKSA/IGNhbGMgOiBhcHBseVByZWNpc2lvbihjYWxjLCBwcmVjaXNpb24pO1xuXG4gICAgcmV0dXJuIGAke251bX0gJHtmb3JtYXQudHlwZX1gO1xuICB9XG59XG4iXX0=