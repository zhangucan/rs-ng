/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { BaseComponent } from '../../bases/component';
import { HTTP_STATE$, HTTP_TAG_STATE$ } from '../../states/all';
export class HttpStatusComponent extends BaseComponent {
    constructor() {
        super(...arguments);
        this.loadingClass = 'loading-circle';
    }
    /**
     * @return {?}
     */
    get httpState$() {
        /** @type {?} */
        let subject;
        if (!this.tag) {
            subject = HTTP_STATE$;
        }
        else {
            subject = HTTP_TAG_STATE$(this.tag);
        }
        return subject;
    }
}
HttpStatusComponent.decorators = [
    { type: Component, args: [{
                selector: 'er-http-status',
                template: `    
      <ng-container *ngIf="httpState$|async">
        <ng-container *ngTemplateOutlet="template('_',default)"></ng-container>
        <ng-template #default>
          <div [ngClass]="loadingClass"></div>
        </ng-template>
      </ng-container>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush
            }] }
];
HttpStatusComponent.propDecorators = {
    tag: [{ type: Input }],
    loadingClass: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    HttpStatusComponent.prototype.tag;
    /** @type {?} */
    HttpStatusComponent.prototype.loadingClass;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL2NvcmUvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9odHRwLXN0YXR1cy9jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hFLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUNwRCxPQUFPLEVBQUMsV0FBVyxFQUFFLGVBQWUsRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBZTlELE1BQU0sT0FBTyxtQkFBb0IsU0FBUSxhQUFhO0lBWnREOztRQWdCVyxpQkFBWSxHQUFHLGdCQUFnQixDQUFDO0lBWTNDLENBQUM7Ozs7SUFWQyxJQUFJLFVBQVU7O1lBQ1IsT0FBTztRQUNYLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ2IsT0FBTyxHQUFHLFdBQVcsQ0FBQztTQUN2QjthQUFNO1lBQ0wsT0FBTyxHQUFHLGVBQWUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDckM7UUFDRCxPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDOzs7WUExQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxnQkFBZ0I7Z0JBQzFCLFFBQVEsRUFBRTs7Ozs7OztHQU9UO2dCQUNELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2FBQ2hEOzs7a0JBR0UsS0FBSzsyQkFFTCxLQUFLOzs7O0lBRk4sa0NBQWE7O0lBRWIsMkNBQXlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Jhc2VDb21wb25lbnR9IGZyb20gJy4uLy4uL2Jhc2VzL2NvbXBvbmVudCc7XG5pbXBvcnQge0hUVFBfU1RBVEUkLCBIVFRQX1RBR19TVEFURSR9IGZyb20gJy4uLy4uL3N0YXRlcy9hbGwnO1xuXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2VyLWh0dHAtc3RhdHVzJyxcbiAgdGVtcGxhdGU6IGAgICAgXG4gICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiaHR0cFN0YXRlJHxhc3luY1wiPlxuICAgICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwidGVtcGxhdGUoJ18nLGRlZmF1bHQpXCI+PC9uZy1jb250YWluZXI+XG4gICAgICAgIDxuZy10ZW1wbGF0ZSAjZGVmYXVsdD5cbiAgICAgICAgICA8ZGl2IFtuZ0NsYXNzXT1cImxvYWRpbmdDbGFzc1wiPjwvZGl2PlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgPC9uZy1jb250YWluZXI+XG4gIGAsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBIdHRwU3RhdHVzQ29tcG9uZW50IGV4dGVuZHMgQmFzZUNvbXBvbmVudCB7XG5cbiAgQElucHV0KCkgdGFnO1xuXG4gIEBJbnB1dCgpIGxvYWRpbmdDbGFzcyA9ICdsb2FkaW5nLWNpcmNsZSc7XG5cbiAgZ2V0IGh0dHBTdGF0ZSQoKSB7XG4gICAgbGV0IHN1YmplY3Q7XG4gICAgaWYgKCF0aGlzLnRhZykge1xuICAgICAgc3ViamVjdCA9IEhUVFBfU1RBVEUkO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdWJqZWN0ID0gSFRUUF9UQUdfU1RBVEUkKHRoaXMudGFnKTtcbiAgICB9XG4gICAgcmV0dXJuIHN1YmplY3Q7XG4gIH1cblxufVxuIl19