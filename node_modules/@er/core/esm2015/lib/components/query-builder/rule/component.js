/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import { BaseComponent } from '../../../bases/component';
import { QueryBuilderComponent } from '../component';
export class QueryBuilderRuleComponent extends BaseComponent {
    /**
     * @param {?} qb
     */
    constructor(qb) {
        super();
        this.qb = qb;
        this.ruleChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    get rule() {
        return this._rule;
    }
    /**
     * @param {?} rule
     * @return {?}
     */
    set rule(rule) {
        this._rule = rule;
        this.ruleChange.emit(this._rule);
    }
}
QueryBuilderRuleComponent.decorators = [
    { type: Component, args: [{
                selector: 'er-query-builder-rule',
                template: "<div class=\"d-flex justify-content-between align-items-center rule\">\n\n  <div class=\"badge badge-info rounded-circle\">{{ruleIndex+1}}</div>\n\n  <ng-container *ngIf=\"qb.templates[qb.templateNames.removeButton] as custumer; else defaultRemoveButton\">\n    <div [ngClass]=\"qb.getClassNames('buttonGroup', 'rightAlign')\">\n      <ng-container *ngTemplateOutlet=\"custumer; context: qb.context({$implicit:rule})\"></ng-container>\n    </div>\n  </ng-container>\n\n  <div *ngIf=\"qb.config.entities?.length > 0\" class=\"q-inline-block-display\">\n    <ng-container *ngIf=\"qb.templates[qb.templateNames.entity] as customer; else defaultEntity\">\n      <ng-container *ngTemplateOutlet=\"customer; context: qb.context({$implicit:rule})\"></ng-container>\n    </ng-container>\n  </div>\n\n  <ng-container *ngIf=\"qb.templates[qb.templateNames.field] as customer; else defaultField\">\n    <ng-container *ngTemplateOutlet=\"customer; context: qb.context({$implicit:rule})\"></ng-container>\n  </ng-container>\n\n  <ng-container *ngIf=\"qb.templates[qb.templateNames.operator] as customer; else defaultOperator\">\n    <ng-container *ngTemplateOutlet=\"customer; context: qb.context({$implicit:rule})\"></ng-container>\n  </ng-container>\n\n  <div [ngClass]=\"qb.getClassNames('inputControlSize')\">\n    <ng-container\n      *ngTemplateOutlet=\"qb.templates[qb.templateNames.input]; context: qb.context({$implicit:rule})\"></ng-container>\n  </div>\n\n</div>\n\n<ng-template #defaultRemoveButton>\n  <div [ngClass]=\"qb.getClassNames('removeButtonSize', 'rightAlign')\">\n    <button [ngClass]=\"qb.getClassNames('button', 'removeButton')\" (click)=\"qb.removeRule(rule)\"\n            [disabled]=qb.disabled>\n      <i [ngClass]=\"qb.getClassNames('removeIcon')\"></i>\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #defaultEntity>\n  <div [ngClass]=\"qb.getClassNames('entityControlSize')\">\n    <select [ngClass]=\"qb.getClassNames('entityControl')\" [(ngModel)]=\"rule.entity\"\n            (change)=\"qb.changeEntity($event, rule)\" [disabled]=\"qb.disabled\">\n      <option *ngFor=\"let entity of qb.config.entities\" [ngValue]=\"entity.key\">\n        {{entity.label}}\n      </option>\n    </select>\n  </div>\n</ng-template>\n\n<ng-template #defaultField>\n  <div [ngClass]=\"qb.getClassNames('fieldControlSize')\">\n    <select [ngClass]=\"qb.getClassNames('fieldControl')\" [(ngModel)]=\"rule.field\"\n            (change)=\"qb.changeField($event, rule)\" [disabled]=\"qb.disabled\">\n      <option *ngFor=\"let field of qb.getFields(rule.entity)\" [value]=\"field.key\">\n        {{field.label}}\n      </option>\n    </select>\n  </div>\n</ng-template>\n\n<ng-template #defaultOperator>\n  <div [ngClass]=\"qb.getClassNames('operatorControlSize')\">\n    <select [ngClass]=\"qb.getClassNames('operatorControl')\" [(ngModel)]=\"rule.operator\"\n            [disabled]=\"qb.disabled\">\n      <option *ngFor=\"let operator of qb.getOperators(rule.field)\" [value]=\"operator.value\">\n        {{operator.label}}\n      </option>\n    </select>\n  </div>\n</ng-template>\n",
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [".rule:hover{background-color:green}"]
            }] }
];
/** @nocollapse */
QueryBuilderRuleComponent.ctorParameters = () => [
    { type: QueryBuilderComponent }
];
QueryBuilderRuleComponent.propDecorators = {
    ruleIndex: [{ type: Input }],
    ruleChange: [{ type: Output }],
    rule: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    QueryBuilderRuleComponent.prototype.ruleIndex;
    /** @type {?} */
    QueryBuilderRuleComponent.prototype.ruleChange;
    /**
     * @type {?}
     * @private
     */
    QueryBuilderRuleComponent.prototype._rule;
    /** @type {?} */
    QueryBuilderRuleComponent.prototype.qb;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL2NvcmUvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9xdWVyeS1idWlsZGVyL3J1bGUvY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTlGLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUN2RCxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFTbkQsTUFBTSxPQUFPLHlCQUEwQixTQUFRLGFBQWE7Ozs7SUFNMUQsWUFBbUIsRUFBeUI7UUFDMUMsS0FBSyxFQUFFLENBQUM7UUFEUyxPQUFFLEdBQUYsRUFBRSxDQUF1QjtRQUZsQyxlQUFVLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUkxQyxDQUFDOzs7O0lBSUQsSUFDSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7Ozs7O0lBRUQsSUFBSSxJQUFJLENBQUMsSUFBSTtRQUNYLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNuQyxDQUFDOzs7WUExQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx1QkFBdUI7Z0JBQ2pDLG9pR0FBdUI7Z0JBRXZCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOzthQUNoRDs7OztZQVJPLHFCQUFxQjs7O3dCQVcxQixLQUFLO3lCQUVMLE1BQU07bUJBUU4sS0FBSzs7OztJQVZOLDhDQUEyQjs7SUFFM0IsK0NBQTBDOzs7OztJQU0xQywwQ0FBeUI7O0lBSmIsdUNBQWdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtRdWVyeVJ1bGV9IGZyb20gJ0Blci90eXBlcyc7XG5pbXBvcnQge0Jhc2VDb21wb25lbnR9IGZyb20gJy4uLy4uLy4uL2Jhc2VzL2NvbXBvbmVudCc7XG5pbXBvcnQge1F1ZXJ5QnVpbGRlckNvbXBvbmVudH0gZnJvbSAnLi4vY29tcG9uZW50JztcblxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdlci1xdWVyeS1idWlsZGVyLXJ1bGUnLFxuICB0ZW1wbGF0ZVVybDogJ3RwbC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJ3N0eWxlcy5zY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFF1ZXJ5QnVpbGRlclJ1bGVDb21wb25lbnQgZXh0ZW5kcyBCYXNlQ29tcG9uZW50IHtcblxuICBASW5wdXQoKSBydWxlSW5kZXg6IG51bWJlcjtcblxuICBAT3V0cHV0KCkgcnVsZUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgcWI6IFF1ZXJ5QnVpbGRlckNvbXBvbmVudCkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBwcml2YXRlIF9ydWxlOiBRdWVyeVJ1bGU7XG5cbiAgQElucHV0KClcbiAgZ2V0IHJ1bGUoKTogUXVlcnlSdWxlIHtcbiAgICByZXR1cm4gdGhpcy5fcnVsZTtcbiAgfVxuXG4gIHNldCBydWxlKHJ1bGUpIHtcbiAgICB0aGlzLl9ydWxlID0gcnVsZTtcbiAgICB0aGlzLnJ1bGVDaGFuZ2UuZW1pdCh0aGlzLl9ydWxlKTtcbiAgfVxufVxuIl19