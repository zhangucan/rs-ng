/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, HostListener, Input } from '@angular/core';
import { BaseDirective } from '../../bases/directive';
export class FocusHighlightDirective extends BaseDirective {
    /**
     * @param {?} el
     */
    constructor(el) {
        super();
        this.el = el;
        this.defaultBgColor = 'yellow';
    }
    /**
     * @return {?}
     */
    onMouseEnter() {
        this.highlight(this.bgColor || this.defaultBgColor);
    }
    /**
     * @return {?}
     */
    onMouseLeave() {
        this.highlight(null);
    }
    /**
     * @private
     * @param {?} color
     * @return {?}
     */
    highlight(color) {
        this.el.nativeElement.style.backgroundColor = color;
    }
}
FocusHighlightDirective.decorators = [
    { type: Directive, args: [{ selector: '[erFocusHighlight]' },] }
];
/** @nocollapse */
FocusHighlightDirective.ctorParameters = () => [
    { type: ElementRef }
];
FocusHighlightDirective.propDecorators = {
    bgColor: [{ type: Input }],
    onMouseEnter: [{ type: HostListener, args: ['mouseenter',] }],
    onMouseLeave: [{ type: HostListener, args: ['mouseleave',] }]
};
if (false) {
    /** @type {?} */
    FocusHighlightDirective.prototype.bgColor;
    /** @type {?} */
    FocusHighlightDirective.prototype.defaultBgColor;
    /**
     * @type {?}
     * @private
     */
    FocusHighlightDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL2NvcmUvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9mb2N1cy1oaWdoLWxpZ2h0L2RpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN6RSxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sdUJBQXVCLENBQUM7QUFHcEQsTUFBTSxPQUFPLHVCQUF3QixTQUFRLGFBQWE7Ozs7SUFNeEQsWUFBb0IsRUFBYztRQUNoQyxLQUFLLEVBQUUsQ0FBQztRQURVLE9BQUUsR0FBRixFQUFFLENBQVk7UUFGbEMsbUJBQWMsR0FBRyxRQUFRLENBQUM7SUFJMUIsQ0FBQzs7OztJQUdELFlBQVk7UUFDVixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLElBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3RELENBQUM7Ozs7SUFHRCxZQUFZO1FBQ1YsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUN2QixDQUFDOzs7Ozs7SUFFTyxTQUFTLENBQUMsS0FBYTtRQUM3QixJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQztJQUN0RCxDQUFDOzs7WUF2QkYsU0FBUyxTQUFDLEVBQUMsUUFBUSxFQUFFLG9CQUFvQixFQUFDOzs7O1lBSHhCLFVBQVU7OztzQkFNMUIsS0FBSzsyQkFRTCxZQUFZLFNBQUMsWUFBWTsyQkFLekIsWUFBWSxTQUFDLFlBQVk7Ozs7SUFiMUIsMENBQXlCOztJQUV6QixpREFBMEI7Ozs7O0lBRWQscUNBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEhvc3RMaXN0ZW5lciwgSW5wdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtCYXNlRGlyZWN0aXZlfSBmcm9tICcuLi8uLi9iYXNlcy9kaXJlY3RpdmUnO1xuXG5ARGlyZWN0aXZlKHtzZWxlY3RvcjogJ1tlckZvY3VzSGlnaGxpZ2h0XSd9KVxuZXhwb3J0IGNsYXNzIEZvY3VzSGlnaGxpZ2h0RGlyZWN0aXZlIGV4dGVuZHMgQmFzZURpcmVjdGl2ZSB7XG5cbiAgQElucHV0KCkgYmdDb2xvcjogc3RyaW5nO1xuXG4gIGRlZmF1bHRCZ0NvbG9yID0gJ3llbGxvdyc7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbDogRWxlbWVudFJlZikge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdtb3VzZWVudGVyJylcbiAgb25Nb3VzZUVudGVyKCkge1xuICAgIHRoaXMuaGlnaGxpZ2h0KHRoaXMuYmdDb2xvciB8fCB0aGlzLmRlZmF1bHRCZ0NvbG9yKTtcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ21vdXNlbGVhdmUnKVxuICBvbk1vdXNlTGVhdmUoKSB7XG4gICAgdGhpcy5oaWdobGlnaHQobnVsbCk7XG4gIH1cblxuICBwcml2YXRlIGhpZ2hsaWdodChjb2xvcjogc3RyaW5nKSB7XG4gICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LnN0eWxlLmJhY2tncm91bmRDb2xvciA9IGNvbG9yO1xuICB9XG59XG4iXX0=