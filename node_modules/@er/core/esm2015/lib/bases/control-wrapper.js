/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HostBinding, Input } from '@angular/core';
import { NO_OP } from '@er/types';
import { CommonsUtils } from '@er/utils';
import { WrapperComponent } from './wrappe';
/**
 * @template T
 */
export class ControlWrapperComponent extends WrapperComponent {
    constructor() {
        super(...arguments);
        this.resettable = true;
        this.disabled = false;
        this.onTouched = NO_OP;
        this.onChange = NO_OP;
    }
    /**
     * @return {?}
     */
    get opacity() {
        return this.disabled ? 0.25 : 1;
    }
    /**
     * @return {?}
     */
    get cursor() {
        return this.disabled ? 'not-allowed' : 'default';
    }
    /**
     * @return {?}
     */
    get value() {
        return this.innerValue;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set value(value) {
        /** @type {?} */
        const v = this.valueParser ? this.valueParser(value) : value;
        if (!CommonsUtils.isEqual(v, this.innerValue)) {
            this.innerValue = v;
            this.onChange(v);
        }
    }
    /**
     * @return {?}
     */
    updateTouch() {
        this.onTouched();
    }
    /**
     * @param {?} model
     * @return {?}
     */
    writeValue(model) {
        /** @type {?} */
        const v = this.modelFormatter ? this.modelFormatter(model) : model;
        if (v !== this.innerValue) {
            this.innerValue = v;
        }
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this.onChange = fn;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    /**
     * @param {?} isDisabled
     * @return {?}
     */
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
    /**
     * @return {?}
     */
    onPropsInit() {
        if (this.disabled) {
            this.$props['disabled'] = this.disabled;
        }
    }
    /**
     * @return {?}
     */
    reset() {
        this.value = null;
    }
}
ControlWrapperComponent.propDecorators = {
    valueParser: [{ type: Input }],
    modelFormatter: [{ type: Input }],
    resettable: [{ type: Input }],
    disabled: [{ type: Input }],
    opacity: [{ type: HostBinding, args: ['style.opacity',] }],
    cursor: [{ type: HostBinding, args: ['style.cursor',] }]
};
if (false) {
    /** @type {?} */
    ControlWrapperComponent.prototype.valueParser;
    /** @type {?} */
    ControlWrapperComponent.prototype.modelFormatter;
    /** @type {?} */
    ControlWrapperComponent.prototype.resettable;
    /** @type {?} */
    ControlWrapperComponent.prototype.disabled;
    /** @type {?} */
    ControlWrapperComponent.prototype.onTouched;
    /** @type {?} */
    ControlWrapperComponent.prototype.onChange;
    /**
     * @type {?}
     * @protected
     */
    ControlWrapperComponent.prototype.innerValue;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbC13cmFwcGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL2NvcmUvIiwic291cmNlcyI6WyJsaWIvYmFzZXMvY29udHJvbC13cmFwcGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsV0FBVyxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVqRCxPQUFPLEVBQUMsS0FBSyxFQUFRLE1BQU0sV0FBVyxDQUFDO0FBQ3ZDLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDdkMsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sVUFBVSxDQUFDOzs7O0FBRzFDLE1BQU0sT0FBTyx1QkFBaUQsU0FBUSxnQkFBbUI7SUFBekY7O1FBTVcsZUFBVSxHQUFHLElBQUksQ0FBQztRQUVsQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRTFCLGNBQVMsR0FBZSxLQUFLLENBQUM7UUFDOUIsYUFBUSxHQUFxQixLQUFLLENBQUM7SUEwRHJDLENBQUM7Ozs7SUF0REMsSUFDSSxPQUFPO1FBQ1QsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7O0lBRUQsSUFDSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUNuRCxDQUFDOzs7O0lBRUQsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDO0lBQ3pCLENBQUM7Ozs7O0lBRUQsSUFBSSxLQUFLLENBQUMsS0FBVTs7Y0FDWixDQUFDLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSztRQUM1RCxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxFQUFFO1lBQzdDLElBQUksQ0FBQyxVQUFVLEdBQUcsQ0FBQyxDQUFDO1lBQ3BCLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDbEI7SUFDSCxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNuQixDQUFDOzs7OztJQUVELFVBQVUsQ0FBQyxLQUFVOztjQUNiLENBQUMsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLO1FBQ2xFLElBQUssQ0FBQyxLQUFLLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDMUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7U0FDckI7SUFDSCxDQUFDOzs7OztJQUVELGdCQUFnQixDQUFDLEVBQU87UUFDdEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFDckIsQ0FBQzs7Ozs7SUFFRCxpQkFBaUIsQ0FBQyxFQUFPO1FBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO0lBQ3RCLENBQUM7Ozs7O0lBRUQsZ0JBQWdCLENBQUMsVUFBbUI7UUFDbEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxVQUFVLENBQUM7SUFDN0IsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDakIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDO1NBQ3pDO0lBQ0gsQ0FBQzs7OztJQUVELEtBQUs7UUFDSCxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztJQUNwQixDQUFDOzs7MEJBbEVBLEtBQUs7NkJBRUwsS0FBSzt5QkFFTCxLQUFLO3VCQUVMLEtBQUs7c0JBT0wsV0FBVyxTQUFDLGVBQWU7cUJBSzNCLFdBQVcsU0FBQyxjQUFjOzs7O0lBbEIzQiw4Q0FBcUM7O0lBRXJDLGlEQUF3Qzs7SUFFeEMsNkNBQTJCOztJQUUzQiwyQ0FBMEI7O0lBRTFCLDRDQUE4Qjs7SUFDOUIsMkNBQW1DOzs7OztJQUVuQyw2Q0FBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0hvc3RCaW5kaW5nLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbnRyb2xWYWx1ZUFjY2Vzc29yfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQge05PX09QLCBQcm9wc30gZnJvbSAnQGVyL3R5cGVzJztcbmltcG9ydCB7Q29tbW9uc1V0aWxzfSBmcm9tICdAZXIvdXRpbHMnO1xuaW1wb3J0IHtXcmFwcGVyQ29tcG9uZW50fSBmcm9tICcuL3dyYXBwZSc7XG5cblxuZXhwb3J0IGNsYXNzIENvbnRyb2xXcmFwcGVyQ29tcG9uZW50PFQgZXh0ZW5kcyBQcm9wcyA9IFByb3BzPiBleHRlbmRzIFdyYXBwZXJDb21wb25lbnQ8VD4gaW1wbGVtZW50cyBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG5cbiAgQElucHV0KCkgdmFsdWVQYXJzZXI6ICh2YWx1ZSkgPT4gYW55O1xuXG4gIEBJbnB1dCgpIG1vZGVsRm9ybWF0dGVyOiAobW9kZWwpID0+IGFueTtcblxuICBASW5wdXQoKSByZXNldHRhYmxlID0gdHJ1ZTtcblxuICBASW5wdXQoKSBkaXNhYmxlZCA9IGZhbHNlO1xuXG4gIG9uVG91Y2hlZDogKCkgPT4gdm9pZCA9IE5PX09QO1xuICBvbkNoYW5nZTogKF86IGFueSkgPT4gdm9pZCA9IE5PX09QO1xuXG4gIHByb3RlY3RlZCBpbm5lclZhbHVlOiBhbnk7XG5cbiAgQEhvc3RCaW5kaW5nKCdzdHlsZS5vcGFjaXR5JylcbiAgZ2V0IG9wYWNpdHkoKSB7XG4gICAgcmV0dXJuIHRoaXMuZGlzYWJsZWQgPyAwLjI1IDogMTtcbiAgfVxuXG4gIEBIb3N0QmluZGluZygnc3R5bGUuY3Vyc29yJylcbiAgZ2V0IGN1cnNvcigpIHtcbiAgICByZXR1cm4gdGhpcy5kaXNhYmxlZCA/ICdub3QtYWxsb3dlZCcgOiAnZGVmYXVsdCc7XG4gIH1cblxuICBnZXQgdmFsdWUoKTogYW55IHtcbiAgICByZXR1cm4gdGhpcy5pbm5lclZhbHVlO1xuICB9XG5cbiAgc2V0IHZhbHVlKHZhbHVlOiBhbnkpIHtcbiAgICBjb25zdCB2ID0gdGhpcy52YWx1ZVBhcnNlciA/IHRoaXMudmFsdWVQYXJzZXIodmFsdWUpIDogdmFsdWU7XG4gICAgaWYgKCFDb21tb25zVXRpbHMuaXNFcXVhbCh2LCB0aGlzLmlubmVyVmFsdWUpKSB7XG4gICAgICB0aGlzLmlubmVyVmFsdWUgPSB2O1xuICAgICAgdGhpcy5vbkNoYW5nZSh2KTtcbiAgICB9XG4gIH1cblxuICB1cGRhdGVUb3VjaCgpIHtcbiAgICB0aGlzLm9uVG91Y2hlZCgpO1xuICB9XG5cbiAgd3JpdGVWYWx1ZShtb2RlbDogYW55KSB7XG4gICAgY29uc3QgdiA9IHRoaXMubW9kZWxGb3JtYXR0ZXIgPyB0aGlzLm1vZGVsRm9ybWF0dGVyKG1vZGVsKSA6IG1vZGVsO1xuICAgIGlmICggdiAhPT0gdGhpcy5pbm5lclZhbHVlKSB7XG4gICAgICB0aGlzLmlubmVyVmFsdWUgPSB2O1xuICAgIH1cbiAgfVxuXG4gIHJlZ2lzdGVyT25DaGFuZ2UoZm46IGFueSkge1xuICAgIHRoaXMub25DaGFuZ2UgPSBmbjtcbiAgfVxuXG4gIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiBhbnkpIHtcbiAgICB0aGlzLm9uVG91Y2hlZCA9IGZuO1xuICB9XG5cbiAgc2V0RGlzYWJsZWRTdGF0ZShpc0Rpc2FibGVkOiBib29sZWFuKTogdm9pZCB7XG4gICAgdGhpcy5kaXNhYmxlZCA9IGlzRGlzYWJsZWQ7XG4gIH1cblxuICBvblByb3BzSW5pdCgpIHtcbiAgICBpZiAodGhpcy5kaXNhYmxlZCkge1xuICAgICAgdGhpcy4kcHJvcHNbJ2Rpc2FibGVkJ10gPSB0aGlzLmRpc2FibGVkO1xuICAgIH1cbiAgfVxuXG4gIHJlc2V0KCkge1xuICAgIHRoaXMudmFsdWUgPSBudWxsO1xuICB9XG59XG4iXX0=