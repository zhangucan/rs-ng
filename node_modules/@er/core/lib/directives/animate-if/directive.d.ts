import { NgIf } from '@angular/common';
import { EventEmitter, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';
import { Subject } from 'rxjs/index';
export declare class AnimatedIfDirective extends NgIf implements OnDestroy {
    private viewContainer;
    animatedIfOnShow: EventEmitter<any>;
    animatedIfOnHide: EventEmitter<any>;
    private visible;
    protected destroyed$: Subject<void>;
    constructor(viewContainer: ViewContainerRef, _templateRef: TemplateRef<any>);
    erAnimatedIf: boolean;
    private getContainer;
    /**
     * Hides the element. Animation is performed through css on the container.
     * This method will set the class to hiding and preserve the element for the animation duration.
     */
    private hide;
    /**
     * Shows the element. Animation is performed through css on the container
     */
    private show;
    ngOnDestroy(): void;
}
/**
 *  <p>Toggle element with animation <input type=checkbox [(ngModel)]="isVisible"><p>
 <p>
 <span class="fancyBox" *appAnimatedIf="isVisible">Click the checkbox above to toggle me!</span>
 </p>
 **/
