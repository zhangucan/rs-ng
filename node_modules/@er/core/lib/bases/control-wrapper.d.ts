import { ControlValueAccessor } from '@angular/forms';
import { Props } from '@er/types';
import { WrapperComponent } from './wrappe';
export declare class ControlWrapperComponent<T extends Props = Props> extends WrapperComponent<T> implements ControlValueAccessor {
    valueParser: (value: any) => any;
    modelFormatter: (model: any) => any;
    resettable: boolean;
    disabled: boolean;
    onTouched: () => void;
    onChange: (_: any) => void;
    protected innerValue: any;
    readonly opacity: 1 | 0.25;
    readonly cursor: "not-allowed" | "default";
    value: any;
    updateTouch(): void;
    writeValue(model: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    onPropsInit(): void;
    reset(): void;
}
