import { QueryList, SimpleChanges, TemplateRef } from '@angular/core';
import { SelectorDirective } from '../directives/selector/directive';
import { TypedTemplateDirective } from '../directives/typed-template/directive';
import { BaseDirective } from './directive';
/**
 * provide template & dynamic query support
 */
export declare abstract class BaseComponent extends BaseDirective {
    customerTpl: TemplateRef<any>;
    typedTemplates: QueryList<TypedTemplateDirective>;
    selectors: QueryList<SelectorDirective>;
    templateNames: {};
    templates: {
        [type: string]: TemplateRef<any> | {};
    };
    ngAfterContentInit(): void;
    eventHandler(outputs: any, eventName: any, defaultHandler: any, event: any): any;
    template(name?: string, ...defaultTpls: TemplateRef<any>[]): TemplateRef<any> | {};
    getComponentBySelectorId<C>(id: any): C;
    hasTemplate(name: string, ...defaultTpls: TemplateRef<any>[]): boolean;
    hasChildren(templates: any): boolean;
    ngAfterContentChecked(): void;
    ngAfterViewInit(): void;
    ngAfterViewChecked(): void;
    ngDoCheck(): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
}
