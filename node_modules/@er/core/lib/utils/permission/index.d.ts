import { NgxPermissionsService, NgxRolesService } from 'ngx-permissions';
import { NgxPermissionsObject } from 'ngx-permissions/service/permissions.service';
import { NgxRolesObject } from 'ngx-permissions/service/roles.service';
import { Observable } from 'rxjs';
export declare class PermissionUtils {
    static _permissionsService: NgxPermissionsService;
    static _rolesService: NgxRolesService;
    static getPermissionsService(): NgxPermissionsService;
    static getRolesService(): NgxRolesService;
    static getRolePermissions(roles: string | string[]): Observable<string[]>;
    static HasModulePermission(permissionName: any): boolean;
    static addPermissions(permissions: string | string[], validationFunction?: (permissionName: any, permissionsObject: any) => boolean): void;
    static addRole(roleName: string, validationFunction?: Function | string[]): void;
    static addRoles(roles: string | string[]): void;
    static hasRole(role: string): boolean;
    static hasAnyRole(roles: string | string[]): boolean;
    static hasAllRoles(roles: string | string[]): boolean;
    static getPermissions(): Observable<NgxPermissionsObject>;
    static getRoles(): Observable<NgxRolesObject>;
    static hasPermission(permission: string): boolean;
    static hasAnyPermission(permissios: string | string[]): boolean;
    static hasAllPermissions(permissions: string | string[]): boolean;
    static hasAuth(roleOrPermission: string | string[]): boolean;
    static hasAllAuths(roleOrPermissions: string | string[]): boolean;
    static clearRoles(): void;
    static clearPermission(): void;
}
