/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, Input } from '@angular/core';
import { CommonsUtils, DomUtils } from '@er/utils';
var AnimateDirective = /** @class */ (function () {
    function AnimateDirective(el) {
        this.el = el;
        this._animations = [
            'fadeIn',
            'fadeInLeft',
            'fadeInRight',
            'fadeInUp',
            'fadeInDown',
            'zoomIn',
            'zoomInLeft',
            'zoomInRight',
            'zoomInUp',
            'slideInDown',
            'slideInLeft',
            'slideInRight',
            'slideInUp'
        ];
    }
    /**
     * @return {?}
     */
    AnimateDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var classes = 'animated ';
        if (this.animation) {
            classes += this.animation;
        }
        else {
            classes += this._animations[CommonsUtils.getRandomNumber(this._animations.length - 1)];
        }
        DomUtils.addClasses(this.el.nativeElement, classes);
    };
    AnimateDirective.decorators = [
        { type: Directive, args: [{
                    selector: '[erAnimate]'
                },] }
    ];
    /** @nocollapse */
    AnimateDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    AnimateDirective.propDecorators = {
        animation: [{ type: Input, args: ['erAnimate',] }]
    };
    return AnimateDirective;
}());
export { AnimateDirective };
if (false) {
    /** @type {?} */
    AnimateDirective.prototype.animation;
    /**
     * @type {?}
     * @private
     */
    AnimateDirective.prototype._animations;
    /**
     * @type {?}
     * @private
     */
    AnimateDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL2NvcmUvIiwic291cmNlcyI6WyJsaWIvZGlyZWN0aXZlcy9hbmltYXRlL2RpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFTLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBQyxZQUFZLEVBQUUsUUFBUSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBRWpEO0lBdUJFLDBCQUFvQixFQUFjO1FBQWQsT0FBRSxHQUFGLEVBQUUsQ0FBWTtRQWhCMUIsZ0JBQVcsR0FBRztZQUNwQixRQUFRO1lBQ1IsWUFBWTtZQUNaLGFBQWE7WUFDYixVQUFVO1lBQ1YsWUFBWTtZQUNaLFFBQVE7WUFDUixZQUFZO1lBQ1osYUFBYTtZQUNiLFVBQVU7WUFDVixhQUFhO1lBQ2IsYUFBYTtZQUNiLGNBQWM7WUFDZCxXQUFXO1NBQ1osQ0FBQztJQUdGLENBQUM7Ozs7SUFFRCxtQ0FBUTs7O0lBQVI7O1lBQ00sT0FBTyxHQUFHLFdBQVc7UUFDekIsSUFBSSxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ2xCLE9BQU8sSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDO1NBQzNCO2FBQU07WUFDTCxPQUFPLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFZLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDeEY7UUFDRCxRQUFRLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3RELENBQUM7O2dCQWxDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGFBQWE7aUJBQ3hCOzs7O2dCQUxrQixVQUFVOzs7NEJBUTFCLEtBQUssU0FBQyxXQUFXOztJQThCcEIsdUJBQUM7Q0FBQSxBQW5DRCxJQW1DQztTQWhDWSxnQkFBZ0I7OztJQUUzQixxQ0FBc0M7Ozs7O0lBRXRDLHVDQWNFOzs7OztJQUVVLDhCQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7RGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbnB1dCwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Q29tbW9uc1V0aWxzLCBEb21VdGlsc30gZnJvbSAnQGVyL3V0aWxzJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2VyQW5pbWF0ZV0nXG59KVxuZXhwb3J0IGNsYXNzIEFuaW1hdGVEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBJbnB1dCgnZXJBbmltYXRlJykgYW5pbWF0aW9uOiBzdHJpbmc7XG5cbiAgcHJpdmF0ZSBfYW5pbWF0aW9ucyA9IFtcbiAgICAnZmFkZUluJyxcbiAgICAnZmFkZUluTGVmdCcsXG4gICAgJ2ZhZGVJblJpZ2h0JyxcbiAgICAnZmFkZUluVXAnLFxuICAgICdmYWRlSW5Eb3duJyxcbiAgICAnem9vbUluJyxcbiAgICAnem9vbUluTGVmdCcsXG4gICAgJ3pvb21JblJpZ2h0JyxcbiAgICAnem9vbUluVXAnLFxuICAgICdzbGlkZUluRG93bicsXG4gICAgJ3NsaWRlSW5MZWZ0JyxcbiAgICAnc2xpZGVJblJpZ2h0JyxcbiAgICAnc2xpZGVJblVwJ1xuICBdO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWw6IEVsZW1lbnRSZWYpIHtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGxldCBjbGFzc2VzID0gJ2FuaW1hdGVkICc7XG4gICAgaWYgKHRoaXMuYW5pbWF0aW9uKSB7XG4gICAgICBjbGFzc2VzICs9IHRoaXMuYW5pbWF0aW9uO1xuICAgIH0gZWxzZSB7XG4gICAgICBjbGFzc2VzICs9IHRoaXMuX2FuaW1hdGlvbnNbQ29tbW9uc1V0aWxzLmdldFJhbmRvbU51bWJlcih0aGlzLl9hbmltYXRpb25zLmxlbmd0aCAtIDEpXTtcbiAgICB9XG4gICAgRG9tVXRpbHMuYWRkQ2xhc3Nlcyh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQsIGNsYXNzZXMpO1xuICB9XG59XG4iXX0=