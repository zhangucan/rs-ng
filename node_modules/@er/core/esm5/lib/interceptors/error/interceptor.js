/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { HttpErrorResponse } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { NotifyLevel, StateNames } from '@er/types';
import { ConfigUtils, StatesUtils } from '@er/utils';
import { throwError, TimeoutError } from 'rxjs';
import { catchError } from 'rxjs/operators';
import { RouteUtils } from '../../utils/nav';
var HttpErrorHandlerInterceptor = /** @class */ (function () {
    function HttpErrorHandlerInterceptor() {
    }
    /**
     * @param {?} req
     * @param {?} next
     * @return {?}
     */
    HttpErrorHandlerInterceptor.prototype.intercept = /**
     * @param {?} req
     * @param {?} next
     * @return {?}
     */
    function (req, next) {
        var _this = this;
        return next.handle(req)
            .pipe(catchError(function (err) {
            if (err instanceof HttpErrorResponse) {
                if (err.status === 401) {
                    RouteUtils.nav(ConfigUtils.getConfig().auth.loginRouter);
                }
                else if (err.status === 403) {
                    StatesUtils.create(StateNames.notify, {
                        message: '没有操作权限！',
                        level: NotifyLevel.ERROR
                    });
                }
                else {
                    _this.errorHandler(err);
                }
            }
            else if (err instanceof TimeoutError) {
                StatesUtils.create(StateNames.notify, {
                    message: '网络访问超时！',
                    level: NotifyLevel.ERROR
                });
            }
            return throwError(err);
        }));
    };
    /**
     * @private
     * @param {?} err
     * @return {?}
     */
    HttpErrorHandlerInterceptor.prototype.errorHandler = /**
     * @private
     * @param {?} err
     * @return {?}
     */
    function (err) {
        /** @type {?} */
        var message = '';
        if (err.error instanceof Error) {
            message = err.error.message;
        }
        else {
            if (err.status === 0) {
                message = '网络链接已断开';
            }
            else if (err.status === 404) {
                message = '请求地址不存在';
            }
            else if (err.status === 500) {
                message = '服务器程序错误';
            }
            else {
                message = '数据请求错误';
            }
        }
        StatesUtils.create(StateNames.notify, {
            level: NotifyLevel.ERROR,
            message: message + ",\u9519\u8BEF\u4EE3\u7801:\u3010" + err.status + "\u3011",
            title: '网络访问失败'
        });
    };
    HttpErrorHandlerInterceptor.decorators = [
        { type: Injectable }
    ];
    return HttpErrorHandlerInterceptor;
}());
export { HttpErrorHandlerInterceptor };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZXJjZXB0b3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZXIvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9pbnRlcmNlcHRvcnMvZXJyb3IvaW50ZXJjZXB0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxpQkFBaUIsRUFBdUQsTUFBTSxzQkFBc0IsQ0FBQztBQUM3RyxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBQyxXQUFXLEVBQUUsVUFBVSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ2xELE9BQU8sRUFBQyxXQUFXLEVBQUUsV0FBVyxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ25ELE9BQU8sRUFBYSxVQUFVLEVBQUUsWUFBWSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBQzFELE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUMxQyxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFFM0M7SUFBQTtJQWtEQSxDQUFDOzs7Ozs7SUEvQ0MsK0NBQVM7Ozs7O0lBQVQsVUFBVSxHQUFxQixFQUFFLElBQWlCO1FBQWxELGlCQXdCQztRQXZCQyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDO2FBQ3BCLElBQUksQ0FDSCxVQUFVLENBQUMsVUFBQyxHQUFHO1lBQ2IsSUFBSSxHQUFHLFlBQVksaUJBQWlCLEVBQUU7Z0JBQ3BDLElBQUksR0FBRyxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUU7b0JBQ3RCLFVBQVUsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLFNBQVMsRUFBRSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztpQkFDMUQ7cUJBQU0sSUFBSSxHQUFHLENBQUMsTUFBTSxLQUFLLEdBQUcsRUFBRTtvQkFDN0IsV0FBVyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFO3dCQUNwQyxPQUFPLEVBQUUsU0FBUzt3QkFDbEIsS0FBSyxFQUFFLFdBQVcsQ0FBQyxLQUFLO3FCQUN6QixDQUFDLENBQUM7aUJBQ0o7cUJBQU07b0JBQ0wsS0FBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQztpQkFDeEI7YUFDRjtpQkFBTSxJQUFJLEdBQUcsWUFBWSxZQUFZLEVBQUU7Z0JBQ3RDLFdBQVcsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRTtvQkFDcEMsT0FBTyxFQUFFLFNBQVM7b0JBQ2xCLEtBQUssRUFBRSxXQUFXLENBQUMsS0FBSztpQkFDekIsQ0FBQyxDQUFDO2FBQ0o7WUFDRCxPQUFPLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN6QixDQUFDLENBQUMsQ0FDSCxDQUFDO0lBQ04sQ0FBQzs7Ozs7O0lBRU8sa0RBQVk7Ozs7O0lBQXBCLFVBQXFCLEdBQXNCOztZQUNyQyxPQUFPLEdBQUcsRUFBRTtRQUNoQixJQUFJLEdBQUcsQ0FBQyxLQUFLLFlBQVksS0FBSyxFQUFFO1lBQzlCLE9BQU8sR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQztTQUM3QjthQUFNO1lBQ0wsSUFBSSxHQUFHLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtnQkFDcEIsT0FBTyxHQUFHLFNBQVMsQ0FBQzthQUNyQjtpQkFBTSxJQUFJLEdBQUcsQ0FBQyxNQUFNLEtBQUssR0FBRyxFQUFFO2dCQUM3QixPQUFPLEdBQUcsU0FBUyxDQUFDO2FBQ3JCO2lCQUFNLElBQUksR0FBRyxDQUFDLE1BQU0sS0FBSyxHQUFHLEVBQUU7Z0JBQzdCLE9BQU8sR0FBRyxTQUFTLENBQUM7YUFDckI7aUJBQU07Z0JBQ0wsT0FBTyxHQUFHLFFBQVEsQ0FBQzthQUNwQjtTQUNGO1FBQ0QsV0FBVyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFO1lBQ3BDLEtBQUssRUFBRSxXQUFXLENBQUMsS0FBSztZQUN4QixPQUFPLEVBQUssT0FBTyx3Q0FBVSxHQUFHLENBQUMsTUFBTSxXQUFHO1lBQzFDLEtBQUssRUFBRSxRQUFRO1NBQ2hCLENBQUMsQ0FBQztJQUNMLENBQUM7O2dCQWpERixVQUFVOztJQWtEWCxrQ0FBQztDQUFBLEFBbERELElBa0RDO1NBakRZLDJCQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SHR0cEVycm9yUmVzcG9uc2UsIEh0dHBFdmVudCwgSHR0cEhhbmRsZXIsIEh0dHBJbnRlcmNlcHRvciwgSHR0cFJlcXVlc3R9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcbmltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge05vdGlmeUxldmVsLCBTdGF0ZU5hbWVzfSBmcm9tICdAZXIvdHlwZXMnO1xuaW1wb3J0IHtDb25maWdVdGlscywgU3RhdGVzVXRpbHN9IGZyb20gJ0Blci91dGlscyc7XG5pbXBvcnQge09ic2VydmFibGUsIHRocm93RXJyb3IsIFRpbWVvdXRFcnJvcn0gZnJvbSAncnhqcyc7XG5pbXBvcnQge2NhdGNoRXJyb3J9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7Um91dGVVdGlsc30gZnJvbSAnLi4vLi4vdXRpbHMvbmF2JztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEh0dHBFcnJvckhhbmRsZXJJbnRlcmNlcHRvciBpbXBsZW1lbnRzIEh0dHBJbnRlcmNlcHRvciB7XG5cbiAgaW50ZXJjZXB0KHJlcTogSHR0cFJlcXVlc3Q8YW55PiwgbmV4dDogSHR0cEhhbmRsZXIpOiBPYnNlcnZhYmxlPEh0dHBFdmVudDxhbnk+PiB7XG4gICAgcmV0dXJuIG5leHQuaGFuZGxlKHJlcSlcbiAgICAgIC5waXBlKFxuICAgICAgICBjYXRjaEVycm9yKChlcnIpID0+IHtcbiAgICAgICAgICBpZiAoZXJyIGluc3RhbmNlb2YgSHR0cEVycm9yUmVzcG9uc2UpIHtcbiAgICAgICAgICAgIGlmIChlcnIuc3RhdHVzID09PSA0MDEpIHtcbiAgICAgICAgICAgICAgUm91dGVVdGlscy5uYXYoQ29uZmlnVXRpbHMuZ2V0Q29uZmlnKCkuYXV0aC5sb2dpblJvdXRlcik7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKGVyci5zdGF0dXMgPT09IDQwMykge1xuICAgICAgICAgICAgICBTdGF0ZXNVdGlscy5jcmVhdGUoU3RhdGVOYW1lcy5ub3RpZnksIHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAn5rKh5pyJ5pON5L2c5p2D6ZmQ77yBJyxcbiAgICAgICAgICAgICAgICBsZXZlbDogTm90aWZ5TGV2ZWwuRVJST1JcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB0aGlzLmVycm9ySGFuZGxlcihlcnIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSBpZiAoZXJyIGluc3RhbmNlb2YgVGltZW91dEVycm9yKSB7XG4gICAgICAgICAgICBTdGF0ZXNVdGlscy5jcmVhdGUoU3RhdGVOYW1lcy5ub3RpZnksIHtcbiAgICAgICAgICAgICAgbWVzc2FnZTogJ+e9kee7nOiuv+mXrui2heaXtu+8gScsXG4gICAgICAgICAgICAgIGxldmVsOiBOb3RpZnlMZXZlbC5FUlJPUlxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB0aHJvd0Vycm9yKGVycik7XG4gICAgICAgIH0pXG4gICAgICApO1xuICB9XG5cbiAgcHJpdmF0ZSBlcnJvckhhbmRsZXIoZXJyOiBIdHRwRXJyb3JSZXNwb25zZSkge1xuICAgIGxldCBtZXNzYWdlID0gJyc7XG4gICAgaWYgKGVyci5lcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICBtZXNzYWdlID0gZXJyLmVycm9yLm1lc3NhZ2U7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChlcnIuc3RhdHVzID09PSAwKSB7XG4gICAgICAgIG1lc3NhZ2UgPSAn572R57uc6ZO+5o6l5bey5pat5byAJztcbiAgICAgIH0gZWxzZSBpZiAoZXJyLnN0YXR1cyA9PT0gNDA0KSB7XG4gICAgICAgIG1lc3NhZ2UgPSAn6K+35rGC5Zyw5Z2A5LiN5a2Y5ZyoJztcbiAgICAgIH0gZWxzZSBpZiAoZXJyLnN0YXR1cyA9PT0gNTAwKSB7XG4gICAgICAgIG1lc3NhZ2UgPSAn5pyN5Yqh5Zmo56iL5bqP6ZSZ6K+vJztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIG1lc3NhZ2UgPSAn5pWw5o2u6K+35rGC6ZSZ6K+vJztcbiAgICAgIH1cbiAgICB9XG4gICAgU3RhdGVzVXRpbHMuY3JlYXRlKFN0YXRlTmFtZXMubm90aWZ5LCB7XG4gICAgICBsZXZlbDogTm90aWZ5TGV2ZWwuRVJST1IsXG4gICAgICBtZXNzYWdlOiBgJHttZXNzYWdlfSzplJnor6/ku6PnoIE644CQJHtlcnIuc3RhdHVzfeOAkWAsXG4gICAgICB0aXRsZTogJ+e9kee7nOiuv+mXruWksei0pSdcbiAgICB9KTtcbiAgfVxufVxuXG5cbiJdfQ==