/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Input } from '@angular/core';
import { CommonsUtils, IdUtils } from '@er/utils';
import { BaseComponent } from './component';
/**
 * @abstract
 * @template T
 */
var WrapperComponent = /** @class */ (function (_super) {
    tslib_1.__extends(WrapperComponent, _super);
    function WrapperComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @return {?}
     */
    WrapperComponent.prototype._initProps = /**
     * @return {?}
     */
    function () {
        this.$props = CommonsUtils.defaults({}, this.$props || {}, this.$defaultProps || {});
        if (!this.$props.$id) {
            this.$props.$id = IdUtils.getRandom();
        }
        if (!this.$props.$ext) {
            this.$props.$ext = {};
        }
        if (this.$props.$ext['apiDataProps']) {
            if (!this.$props.$ext['apiDataProps'].requestOptions) {
                this.$props.$ext['apiDataProps'].requestOptions = {};
            }
            CommonsUtils.defaults(this.$props.$ext['apiDataProps'].requestOptions, {
                context: this,
                tag: this.$props.$id
            });
        }
        this.onPropsInit();
    };
    /**
     * @return {?}
     */
    WrapperComponent.prototype._propsBind = /**
     * @return {?}
     */
    function () {
        this.onPropsBind();
    };
    /**
     * @return {?}
     */
    WrapperComponent.prototype.onPropsInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    WrapperComponent.prototype.onPropsBind = /**
     * @return {?}
     */
    function () {
    };
    WrapperComponent.propDecorators = {
        outputContext: [{ type: Input }],
        attrs: [{ type: Input }]
    };
    return WrapperComponent;
}(BaseComponent));
export { WrapperComponent };
if (false) {
    /** @type {?} */
    WrapperComponent.prototype.$props;
    /** @type {?} */
    WrapperComponent.prototype.outputContext;
    /** @type {?} */
    WrapperComponent.prototype.attrs;
    /**
     * @type {?}
     * @protected
     */
    WrapperComponent.prototype.$defaultProps;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JhcHBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL2NvcmUvIiwic291cmNlcyI6WyJsaWIvYmFzZXMvd3JhcHBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUVwQyxPQUFPLEVBQUMsWUFBWSxFQUFFLE9BQU8sRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNoRCxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sYUFBYSxDQUFDOzs7OztBQUUxQztJQUF3RSw0Q0FBYTtJQUFyRjs7SUFzQ0EsQ0FBQzs7OztJQTVCQyxxQ0FBVTs7O0lBQVY7UUFDRSxJQUFJLENBQUMsTUFBTSxHQUFHLFlBQVksQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxNQUFNLElBQUksRUFBRSxFQUFFLElBQUksQ0FBQyxhQUFhLElBQUksRUFBRSxDQUFDLENBQUM7UUFDckYsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFO1lBQ3BCLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxTQUFTLEVBQUUsQ0FBQztTQUN2QztRQUNELElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRTtZQUNyQixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7U0FDdkI7UUFDRCxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxFQUFFO1lBQ3BDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxjQUFjLEVBQUU7Z0JBQ3BELElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLGNBQWMsR0FBRyxFQUFFLENBQUM7YUFDdEQ7WUFDRCxZQUFZLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDLGNBQWMsRUFBRTtnQkFDckUsT0FBTyxFQUFFLElBQUk7Z0JBQ2IsR0FBRyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRzthQUNyQixDQUFDLENBQUM7U0FDSjtRQUNELElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNyQixDQUFDOzs7O0lBRUQscUNBQVU7OztJQUFWO1FBQ0UsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7Ozs7SUFFRCxzQ0FBVzs7O0lBQVgsY0FBZSxDQUFDOzs7O0lBRWhCLHNDQUFXOzs7SUFBWDtJQUNBLENBQUM7O2dDQWpDQSxLQUFLO3dCQUVMLEtBQUs7O0lBZ0NSLHVCQUFDO0NBQUEsQUF0Q0QsQ0FBd0UsYUFBYSxHQXNDcEY7U0F0Q3FCLGdCQUFnQjs7O0lBRXBDLGtDQUFVOztJQUVWLHlDQUEyQjs7SUFFM0IsaUNBQW9COzs7OztJQUVwQix5Q0FBMkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0lucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7UHJvcHN9IGZyb20gJ0Blci90eXBlcyc7XG5pbXBvcnQge0NvbW1vbnNVdGlscywgSWRVdGlsc30gZnJvbSAnQGVyL3V0aWxzJztcbmltcG9ydCB7QmFzZUNvbXBvbmVudH0gZnJvbSAnLi9jb21wb25lbnQnO1xuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgV3JhcHBlckNvbXBvbmVudDxUIGV4dGVuZHMgUHJvcHMgPSBQcm9wcz4gZXh0ZW5kcyBCYXNlQ29tcG9uZW50IHtcblxuICAkcHJvcHM6IFQ7XG5cbiAgQElucHV0KCkgb3V0cHV0Q29udGV4dDoge307IC8vIHRhcmdldCBjb21wb25lbnQgZXZlbnQgY29udGV4dFxuXG4gIEBJbnB1dCgpIGF0dHJzOiBhbnk7XG5cbiAgcHJvdGVjdGVkICRkZWZhdWx0UHJvcHM6IFQ7XG5cbiAgX2luaXRQcm9wcygpIHtcbiAgICB0aGlzLiRwcm9wcyA9IENvbW1vbnNVdGlscy5kZWZhdWx0cyh7fSwgdGhpcy4kcHJvcHMgfHwge30sIHRoaXMuJGRlZmF1bHRQcm9wcyB8fCB7fSk7XG4gICAgaWYgKCF0aGlzLiRwcm9wcy4kaWQpIHtcbiAgICAgIHRoaXMuJHByb3BzLiRpZCA9IElkVXRpbHMuZ2V0UmFuZG9tKCk7XG4gICAgfVxuICAgIGlmICghdGhpcy4kcHJvcHMuJGV4dCkge1xuICAgICAgdGhpcy4kcHJvcHMuJGV4dCA9IHt9O1xuICAgIH1cbiAgICBpZiAodGhpcy4kcHJvcHMuJGV4dFsnYXBpRGF0YVByb3BzJ10pIHtcbiAgICAgIGlmICghdGhpcy4kcHJvcHMuJGV4dFsnYXBpRGF0YVByb3BzJ10ucmVxdWVzdE9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy4kcHJvcHMuJGV4dFsnYXBpRGF0YVByb3BzJ10ucmVxdWVzdE9wdGlvbnMgPSB7fTtcbiAgICAgIH1cbiAgICAgIENvbW1vbnNVdGlscy5kZWZhdWx0cyh0aGlzLiRwcm9wcy4kZXh0WydhcGlEYXRhUHJvcHMnXS5yZXF1ZXN0T3B0aW9ucywge1xuICAgICAgICBjb250ZXh0OiB0aGlzLFxuICAgICAgICB0YWc6IHRoaXMuJHByb3BzLiRpZFxuICAgICAgfSk7XG4gICAgfVxuICAgIHRoaXMub25Qcm9wc0luaXQoKTtcbiAgfVxuXG4gIF9wcm9wc0JpbmQoKSB7XG4gICAgdGhpcy5vblByb3BzQmluZCgpO1xuICB9XG5cbiAgb25Qcm9wc0luaXQoKSB7fVxuXG4gIG9uUHJvcHNCaW5kKCkge1xuICB9XG59XG4iXX0=