/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { HostBinding, Input } from '@angular/core';
import { NO_OP } from '@er/types';
import { CommonsUtils } from '@er/utils';
import { WrapperComponent } from './wrappe';
/**
 * @template T
 */
var ControlWrapperComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ControlWrapperComponent, _super);
    function ControlWrapperComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.resettable = true;
        _this.disabled = false;
        _this.onTouched = NO_OP;
        _this.onChange = NO_OP;
        return _this;
    }
    Object.defineProperty(ControlWrapperComponent.prototype, "opacity", {
        get: /**
         * @return {?}
         */
        function () {
            return this.disabled ? 0.25 : 1;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ControlWrapperComponent.prototype, "cursor", {
        get: /**
         * @return {?}
         */
        function () {
            return this.disabled ? 'not-allowed' : 'default';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ControlWrapperComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this.innerValue;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            /** @type {?} */
            var v = this.valueParser ? this.valueParser(value) : value;
            if (!CommonsUtils.isEqual(v, this.innerValue)) {
                this.innerValue = v;
                this.onChange(v);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ControlWrapperComponent.prototype.updateTouch = /**
     * @return {?}
     */
    function () {
        this.onTouched();
    };
    /**
     * @param {?} model
     * @return {?}
     */
    ControlWrapperComponent.prototype.writeValue = /**
     * @param {?} model
     * @return {?}
     */
    function (model) {
        /** @type {?} */
        var v = this.modelFormatter ? this.modelFormatter(model) : model;
        if (v !== this.innerValue) {
            this.innerValue = v;
        }
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    ControlWrapperComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    ControlWrapperComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouched = fn;
    };
    /**
     * @param {?} isDisabled
     * @return {?}
     */
    ControlWrapperComponent.prototype.setDisabledState = /**
     * @param {?} isDisabled
     * @return {?}
     */
    function (isDisabled) {
        this.disabled = isDisabled;
    };
    /**
     * @return {?}
     */
    ControlWrapperComponent.prototype.onPropsInit = /**
     * @return {?}
     */
    function () {
        if (this.disabled) {
            this.$props['disabled'] = this.disabled;
        }
    };
    /**
     * @return {?}
     */
    ControlWrapperComponent.prototype.reset = /**
     * @return {?}
     */
    function () {
        this.value = null;
    };
    ControlWrapperComponent.propDecorators = {
        valueParser: [{ type: Input }],
        modelFormatter: [{ type: Input }],
        resettable: [{ type: Input }],
        disabled: [{ type: Input }],
        opacity: [{ type: HostBinding, args: ['style.opacity',] }],
        cursor: [{ type: HostBinding, args: ['style.cursor',] }]
    };
    return ControlWrapperComponent;
}(WrapperComponent));
export { ControlWrapperComponent };
if (false) {
    /** @type {?} */
    ControlWrapperComponent.prototype.valueParser;
    /** @type {?} */
    ControlWrapperComponent.prototype.modelFormatter;
    /** @type {?} */
    ControlWrapperComponent.prototype.resettable;
    /** @type {?} */
    ControlWrapperComponent.prototype.disabled;
    /** @type {?} */
    ControlWrapperComponent.prototype.onTouched;
    /** @type {?} */
    ControlWrapperComponent.prototype.onChange;
    /**
     * @type {?}
     * @protected
     */
    ControlWrapperComponent.prototype.innerValue;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udHJvbC13cmFwcGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL2NvcmUvIiwic291cmNlcyI6WyJsaWIvYmFzZXMvY29udHJvbC13cmFwcGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLFdBQVcsRUFBRSxLQUFLLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFDLEtBQUssRUFBUSxNQUFNLFdBQVcsQ0FBQztBQUN2QyxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ3ZDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLFVBQVUsQ0FBQzs7OztBQUcxQztJQUFzRSxtREFBbUI7SUFBekY7UUFBQSxxRUFxRUM7UUEvRFUsZ0JBQVUsR0FBRyxJQUFJLENBQUM7UUFFbEIsY0FBUSxHQUFHLEtBQUssQ0FBQztRQUUxQixlQUFTLEdBQWUsS0FBSyxDQUFDO1FBQzlCLGNBQVEsR0FBcUIsS0FBSyxDQUFDOztJQTBEckMsQ0FBQztJQXREQyxzQkFDSSw0Q0FBTzs7OztRQURYO1lBRUUsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNsQyxDQUFDOzs7T0FBQTtJQUVELHNCQUNJLDJDQUFNOzs7O1FBRFY7WUFFRSxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1FBQ25ELENBQUM7OztPQUFBO0lBRUQsc0JBQUksMENBQUs7Ozs7UUFBVDtZQUNFLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUN6QixDQUFDOzs7OztRQUVELFVBQVUsS0FBVTs7Z0JBQ1osQ0FBQyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUs7WUFDNUQsSUFBSSxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsRUFBRTtnQkFDN0MsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7Z0JBQ3BCLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDbEI7UUFDSCxDQUFDOzs7T0FSQTs7OztJQVVELDZDQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztJQUNuQixDQUFDOzs7OztJQUVELDRDQUFVOzs7O0lBQVYsVUFBVyxLQUFVOztZQUNiLENBQUMsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLO1FBQ2xFLElBQUssQ0FBQyxLQUFLLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDMUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7U0FDckI7SUFDSCxDQUFDOzs7OztJQUVELGtEQUFnQjs7OztJQUFoQixVQUFpQixFQUFPO1FBQ3RCLElBQUksQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7Ozs7O0lBRUQsbURBQWlCOzs7O0lBQWpCLFVBQWtCLEVBQU87UUFDdkIsSUFBSSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7SUFDdEIsQ0FBQzs7Ozs7SUFFRCxrREFBZ0I7Ozs7SUFBaEIsVUFBaUIsVUFBbUI7UUFDbEMsSUFBSSxDQUFDLFFBQVEsR0FBRyxVQUFVLENBQUM7SUFDN0IsQ0FBQzs7OztJQUVELDZDQUFXOzs7SUFBWDtRQUNFLElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNqQixJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUM7U0FDekM7SUFDSCxDQUFDOzs7O0lBRUQsdUNBQUs7OztJQUFMO1FBQ0UsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7SUFDcEIsQ0FBQzs7OEJBbEVBLEtBQUs7aUNBRUwsS0FBSzs2QkFFTCxLQUFLOzJCQUVMLEtBQUs7MEJBT0wsV0FBVyxTQUFDLGVBQWU7eUJBSzNCLFdBQVcsU0FBQyxjQUFjOztJQWlEN0IsOEJBQUM7Q0FBQSxBQXJFRCxDQUFzRSxnQkFBZ0IsR0FxRXJGO1NBckVZLHVCQUF1Qjs7O0lBRWxDLDhDQUFxQzs7SUFFckMsaURBQXdDOztJQUV4Qyw2Q0FBMkI7O0lBRTNCLDJDQUEwQjs7SUFFMUIsNENBQThCOztJQUM5QiwyQ0FBbUM7Ozs7O0lBRW5DLDZDQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SG9zdEJpbmRpbmcsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Q29udHJvbFZhbHVlQWNjZXNzb3J9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7Tk9fT1AsIFByb3BzfSBmcm9tICdAZXIvdHlwZXMnO1xuaW1wb3J0IHtDb21tb25zVXRpbHN9IGZyb20gJ0Blci91dGlscyc7XG5pbXBvcnQge1dyYXBwZXJDb21wb25lbnR9IGZyb20gJy4vd3JhcHBlJztcblxuXG5leHBvcnQgY2xhc3MgQ29udHJvbFdyYXBwZXJDb21wb25lbnQ8VCBleHRlbmRzIFByb3BzID0gUHJvcHM+IGV4dGVuZHMgV3JhcHBlckNvbXBvbmVudDxUPiBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yIHtcblxuICBASW5wdXQoKSB2YWx1ZVBhcnNlcjogKHZhbHVlKSA9PiBhbnk7XG5cbiAgQElucHV0KCkgbW9kZWxGb3JtYXR0ZXI6IChtb2RlbCkgPT4gYW55O1xuXG4gIEBJbnB1dCgpIHJlc2V0dGFibGUgPSB0cnVlO1xuXG4gIEBJbnB1dCgpIGRpc2FibGVkID0gZmFsc2U7XG5cbiAgb25Ub3VjaGVkOiAoKSA9PiB2b2lkID0gTk9fT1A7XG4gIG9uQ2hhbmdlOiAoXzogYW55KSA9PiB2b2lkID0gTk9fT1A7XG5cbiAgcHJvdGVjdGVkIGlubmVyVmFsdWU6IGFueTtcblxuICBASG9zdEJpbmRpbmcoJ3N0eWxlLm9wYWNpdHknKVxuICBnZXQgb3BhY2l0eSgpIHtcbiAgICByZXR1cm4gdGhpcy5kaXNhYmxlZCA/IDAuMjUgOiAxO1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdzdHlsZS5jdXJzb3InKVxuICBnZXQgY3Vyc29yKCkge1xuICAgIHJldHVybiB0aGlzLmRpc2FibGVkID8gJ25vdC1hbGxvd2VkJyA6ICdkZWZhdWx0JztcbiAgfVxuXG4gIGdldCB2YWx1ZSgpOiBhbnkge1xuICAgIHJldHVybiB0aGlzLmlubmVyVmFsdWU7XG4gIH1cblxuICBzZXQgdmFsdWUodmFsdWU6IGFueSkge1xuICAgIGNvbnN0IHYgPSB0aGlzLnZhbHVlUGFyc2VyID8gdGhpcy52YWx1ZVBhcnNlcih2YWx1ZSkgOiB2YWx1ZTtcbiAgICBpZiAoIUNvbW1vbnNVdGlscy5pc0VxdWFsKHYsIHRoaXMuaW5uZXJWYWx1ZSkpIHtcbiAgICAgIHRoaXMuaW5uZXJWYWx1ZSA9IHY7XG4gICAgICB0aGlzLm9uQ2hhbmdlKHYpO1xuICAgIH1cbiAgfVxuXG4gIHVwZGF0ZVRvdWNoKCkge1xuICAgIHRoaXMub25Ub3VjaGVkKCk7XG4gIH1cblxuICB3cml0ZVZhbHVlKG1vZGVsOiBhbnkpIHtcbiAgICBjb25zdCB2ID0gdGhpcy5tb2RlbEZvcm1hdHRlciA/IHRoaXMubW9kZWxGb3JtYXR0ZXIobW9kZWwpIDogbW9kZWw7XG4gICAgaWYgKCB2ICE9PSB0aGlzLmlubmVyVmFsdWUpIHtcbiAgICAgIHRoaXMuaW5uZXJWYWx1ZSA9IHY7XG4gICAgfVxuICB9XG5cbiAgcmVnaXN0ZXJPbkNoYW5nZShmbjogYW55KSB7XG4gICAgdGhpcy5vbkNoYW5nZSA9IGZuO1xuICB9XG5cbiAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IGFueSkge1xuICAgIHRoaXMub25Ub3VjaGVkID0gZm47XG4gIH1cblxuICBzZXREaXNhYmxlZFN0YXRlKGlzRGlzYWJsZWQ6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICB0aGlzLmRpc2FibGVkID0gaXNEaXNhYmxlZDtcbiAgfVxuXG4gIG9uUHJvcHNJbml0KCkge1xuICAgIGlmICh0aGlzLmRpc2FibGVkKSB7XG4gICAgICB0aGlzLiRwcm9wc1snZGlzYWJsZWQnXSA9IHRoaXMuZGlzYWJsZWQ7XG4gICAgfVxuICB9XG5cbiAgcmVzZXQoKSB7XG4gICAgdGhpcy52YWx1ZSA9IG51bGw7XG4gIH1cbn1cbiJdfQ==