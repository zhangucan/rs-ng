/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { BrowserOsUtils, CommonsUtils, ConfigUtils } from '@er/utils';
import { HTTP_STATE$, ROUTE_STATE$ } from '../../states/all';
import { AuthUtils } from '../../utils/auth';
import { PermissionUtils } from '../../utils/permission';
/**
 * @abstract
 */
var /**
 * @abstract
 */
AppConfigComponent = /** @class */ (function () {
    function AppConfigComponent(rootViewContainerRef) {
        this.rootViewContainerRef = rootViewContainerRef;
    }
    Object.defineProperty(AppConfigComponent.prototype, "loadingClass", {
        get: /**
         * @return {?}
         */
        function () {
            return ConfigUtils.getConfig().onLoading;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    AppConfigComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var browserSupport = BrowserOsUtils.checkBrowser();
        this.resolveBrowserSupport(browserSupport);
        ConfigUtils.configApp(this.appConfig());
        setTimeout(function () {
            _this.httpState$ = HTTP_STATE$;
            _this.routeState$ = ROUTE_STATE$;
        }, 0);
        /** @type {?} */
        var user = AuthUtils.getCurrentUser();
        if (!CommonsUtils.isEmpty(user)) {
            PermissionUtils.addPermissions(user.permissions);
            PermissionUtils.addRoles(user.roles);
            if (user.roles && ConfigUtils.getConfig().auth.defaultRules) {
                PermissionUtils.addRoles(ConfigUtils.getConfig().auth.defaultRules);
            }
        }
    };
    /**
     * @param {?} browserSupport
     * @return {?}
     */
    AppConfigComponent.prototype.resolveBrowserSupport = /**
     * @param {?} browserSupport
     * @return {?}
     */
    function (browserSupport) {
        if (!browserSupport.version) {
            alert('当前浏览器版本太低，请升级浏览器!');
        }
        else if (!browserSupport.features) {
            alert('当前浏览器功能不全，请更换浏览器!');
        }
    };
    return AppConfigComponent;
}());
/**
 * @abstract
 */
export { AppConfigComponent };
if (false) {
    /** @type {?} */
    AppConfigComponent.prototype.httpState$;
    /** @type {?} */
    AppConfigComponent.prototype.routeState$;
    /** @type {?} */
    AppConfigComponent.prototype.inValidBrowser;
    /** @type {?} */
    AppConfigComponent.prototype.rootViewContainerRef;
    /**
     * @abstract
     * @return {?}
     */
    AppConfigComponent.prototype.appConfig = function () { };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLWNvbmZpZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZXIvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9iYXNlcy9hYnN0cmFjdC9hcHAtY29uZmlnLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsT0FBTyxFQUFDLGNBQWMsRUFBa0IsWUFBWSxFQUFFLFdBQVcsRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUVwRixPQUFPLEVBQUMsV0FBVyxFQUFFLFlBQVksRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBQzNELE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUMzQyxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7Ozs7QUFFdkQ7Ozs7SUFRRSw0QkFBbUIsb0JBQXNDO1FBQXRDLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBa0I7SUFDekQsQ0FBQztJQUVELHNCQUFJLDRDQUFZOzs7O1FBQWhCO1lBQ0UsT0FBTyxXQUFXLENBQUMsU0FBUyxFQUFFLENBQUMsU0FBUyxDQUFDO1FBQzNDLENBQUM7OztPQUFBOzs7O0lBRUQscUNBQVE7OztJQUFSO1FBQUEsaUJBZ0JDOztZQWZPLGNBQWMsR0FBRyxjQUFjLENBQUMsWUFBWSxFQUFFO1FBQ3BELElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUMzQyxXQUFXLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDO1FBQ3hDLFVBQVUsQ0FBQztZQUNULEtBQUksQ0FBQyxVQUFVLEdBQUcsV0FBVyxDQUFDO1lBQzlCLEtBQUksQ0FBQyxXQUFXLEdBQUcsWUFBWSxDQUFDO1FBQ2xDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQzs7WUFDQSxJQUFJLEdBQUcsU0FBUyxDQUFDLGNBQWMsRUFBRTtRQUN2QyxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUMvQixlQUFlLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUNqRCxlQUFlLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNyQyxJQUFJLElBQUksQ0FBQyxLQUFLLElBQUksV0FBVyxDQUFDLFNBQVMsRUFBRSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUU7Z0JBQzNELGVBQWUsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLFNBQVMsRUFBRSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQzthQUNyRTtTQUNGO0lBQ0gsQ0FBQzs7Ozs7SUFFRCxrREFBcUI7Ozs7SUFBckIsVUFBc0IsY0FBOEI7UUFDbEQsSUFBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLEVBQUU7WUFDM0IsS0FBSyxDQUFDLG1CQUFtQixDQUFDLENBQUM7U0FDNUI7YUFBTSxJQUFJLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRTtZQUNuQyxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztTQUM1QjtJQUNILENBQUM7SUFLSCx5QkFBQztBQUFELENBQUMsQUE1Q0QsSUE0Q0M7Ozs7Ozs7SUExQ0Msd0NBQWdDOztJQUVoQyx5Q0FBaUM7O0lBRWpDLDRDQUF3Qjs7SUFFWixrREFBNkM7Ozs7O0lBaUN6RCx5REFBa0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge09uSW5pdCwgVmlld0NvbnRhaW5lclJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0NvbmZpZ01vZGVsfSBmcm9tICdAZXIvdHlwZXMnO1xuaW1wb3J0IHtCcm93c2VyT3NVdGlscywgQnJvd3NlclN1cHBvcnQsIENvbW1vbnNVdGlscywgQ29uZmlnVXRpbHN9IGZyb20gJ0Blci91dGlscyc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtIVFRQX1NUQVRFJCwgUk9VVEVfU1RBVEUkfSBmcm9tICcuLi8uLi9zdGF0ZXMvYWxsJztcbmltcG9ydCB7QXV0aFV0aWxzfSBmcm9tICcuLi8uLi91dGlscy9hdXRoJztcbmltcG9ydCB7UGVybWlzc2lvblV0aWxzfSBmcm9tICcuLi8uLi91dGlscy9wZXJtaXNzaW9uJztcblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIEFwcENvbmZpZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgaHR0cFN0YXRlJDogT2JzZXJ2YWJsZTxib29sZWFuPjtcblxuICByb3V0ZVN0YXRlJDogT2JzZXJ2YWJsZTxib29sZWFuPjtcblxuICBpblZhbGlkQnJvd3NlcjogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgcm9vdFZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWYpIHtcbiAgfVxuXG4gIGdldCBsb2FkaW5nQ2xhc3MoKSB7XG4gICAgcmV0dXJuIENvbmZpZ1V0aWxzLmdldENvbmZpZygpLm9uTG9hZGluZztcbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGNvbnN0IGJyb3dzZXJTdXBwb3J0ID0gQnJvd3Nlck9zVXRpbHMuY2hlY2tCcm93c2VyKCk7XG4gICAgdGhpcy5yZXNvbHZlQnJvd3NlclN1cHBvcnQoYnJvd3NlclN1cHBvcnQpO1xuICAgIENvbmZpZ1V0aWxzLmNvbmZpZ0FwcCh0aGlzLmFwcENvbmZpZygpKTtcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHRoaXMuaHR0cFN0YXRlJCA9IEhUVFBfU1RBVEUkO1xuICAgICAgdGhpcy5yb3V0ZVN0YXRlJCA9IFJPVVRFX1NUQVRFJDtcbiAgICB9LCAwKTtcbiAgICBjb25zdCB1c2VyID0gQXV0aFV0aWxzLmdldEN1cnJlbnRVc2VyKCk7XG4gICAgaWYgKCFDb21tb25zVXRpbHMuaXNFbXB0eSh1c2VyKSkge1xuICAgICAgUGVybWlzc2lvblV0aWxzLmFkZFBlcm1pc3Npb25zKHVzZXIucGVybWlzc2lvbnMpO1xuICAgICAgUGVybWlzc2lvblV0aWxzLmFkZFJvbGVzKHVzZXIucm9sZXMpO1xuICAgICAgaWYgKHVzZXIucm9sZXMgJiYgQ29uZmlnVXRpbHMuZ2V0Q29uZmlnKCkuYXV0aC5kZWZhdWx0UnVsZXMpIHtcbiAgICAgICAgUGVybWlzc2lvblV0aWxzLmFkZFJvbGVzKENvbmZpZ1V0aWxzLmdldENvbmZpZygpLmF1dGguZGVmYXVsdFJ1bGVzKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXNvbHZlQnJvd3NlclN1cHBvcnQoYnJvd3NlclN1cHBvcnQ6IEJyb3dzZXJTdXBwb3J0KSB7XG4gICAgaWYgKCFicm93c2VyU3VwcG9ydC52ZXJzaW9uKSB7XG4gICAgICBhbGVydCgn5b2T5YmN5rWP6KeI5Zmo54mI5pys5aSq5L2O77yM6K+35Y2H57qn5rWP6KeI5ZmoIScpO1xuICAgIH0gZWxzZSBpZiAoIWJyb3dzZXJTdXBwb3J0LmZlYXR1cmVzKSB7XG4gICAgICBhbGVydCgn5b2T5YmN5rWP6KeI5Zmo5Yqf6IO95LiN5YWo77yM6K+35pu05o2i5rWP6KeI5ZmoIScpO1xuICAgIH1cbiAgfVxuXG4gIGFic3RyYWN0IGFwcENvbmZpZygpOiBDb25maWdNb2RlbDtcblxuXG59XG4iXX0=