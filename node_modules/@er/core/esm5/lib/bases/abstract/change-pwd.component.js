/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { FormBuilder, Validators } from '@angular/forms';
import { ConfigUtils, DateUtils } from '@er/utils';
import { NgValidators } from '@er/validate';
import { AuthUtils } from '../../utils/auth/index';
import { DiUtils } from '../../utils/di/index';
import { RouteUtils } from '../../utils/nav/index';
import { AuthBaseComponent } from './auth.component';
var AbstractChangePwdComponent = /** @class */ (function (_super) {
    tslib_1.__extends(AbstractChangePwdComponent, _super);
    function AbstractChangePwdComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @return {?}
     */
    AbstractChangePwdComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _a;
        this.form = DiUtils.get(FormBuilder).group((_a = {},
            _a[this.oldPasswordKey] = ['', Validators.required],
            _a[this.newPasswordKey] = ['', [NgValidators.required, NgValidators.minLength(6)]],
            _a.reNewPassword = ['', [NgValidators.required, NgValidators.minLength(6), NgValidators.equalTo(this.newPasswordKey)]],
            _a));
    };
    /**
     * @return {?}
     */
    AbstractChangePwdComponent.prototype.changePwd = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.error = undefined;
        /** @type {?} */
        var data = this.form.value;
        delete data['reNewPassword'];
        data['userPwdSetDate'] = DateUtils.getFormattedDateTime();
        AuthUtils.changePwd(this.getSubmitData(this.form.value))
            .subscribe(function (response) {
            if (response.success === true) {
                RouteUtils.nav(ConfigUtils.getConfig().auth.changePwdSuccessRouter);
            }
            else {
                _this.error = response.message || '密码修改失败';
            }
        });
    };
    return AbstractChangePwdComponent;
}(AuthBaseComponent));
export { AbstractChangePwdComponent };
if (false) {
    /** @type {?} */
    AbstractChangePwdComponent.prototype.oldPasswordKey;
    /** @type {?} */
    AbstractChangePwdComponent.prototype.newPasswordKey;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbmdlLXB3ZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZXIvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9iYXNlcy9hYnN0cmFjdC9jaGFuZ2UtcHdkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLE9BQU8sRUFBQyxXQUFXLEVBQUUsVUFBVSxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFdBQVcsRUFBRSxTQUFTLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDakQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGNBQWMsQ0FBQztBQUMxQyxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sd0JBQXdCLENBQUM7QUFDakQsT0FBTyxFQUFDLE9BQU8sRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQUNqRCxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUVuRDtJQUFnRCxzREFBaUI7SUFBakU7O0lBNkJBLENBQUM7Ozs7SUF2QkMsNkNBQVE7OztJQUFSOztRQUNFLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBYyxXQUFXLENBQUMsQ0FBQyxLQUFLO1lBQ3JELEdBQUMsSUFBSSxDQUFDLGNBQWMsSUFBRyxDQUFDLEVBQUUsRUFBRSxVQUFVLENBQUMsUUFBUSxDQUFDO1lBQ2hELEdBQUMsSUFBSSxDQUFDLGNBQWMsSUFBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQy9FLGdCQUFhLEdBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsWUFBWSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQztnQkFDbEgsQ0FBQztJQUNMLENBQUM7Ozs7SUFFRCw4Q0FBUzs7O0lBQVQ7UUFBQSxpQkFjQztRQWJDLElBQUksQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDOztZQUNqQixJQUFJLEdBQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLO1FBQ2hDLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQzdCLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO1FBQzFELFNBQVMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQ3JELFNBQVMsQ0FBQyxVQUFBLFFBQVE7WUFDakIsSUFBSSxRQUFRLENBQUMsT0FBTyxLQUFLLElBQUksRUFBRTtnQkFFN0IsVUFBVSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsU0FBUyxFQUFFLENBQUMsSUFBSSxDQUFDLHNCQUFzQixDQUFDLENBQUM7YUFDckU7aUJBQU07Z0JBQ0wsS0FBSSxDQUFDLEtBQUssR0FBRyxRQUFRLENBQUMsT0FBTyxJQUFJLFFBQVEsQ0FBQzthQUMzQztRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNILGlDQUFDO0FBQUQsQ0FBQyxBQTdCRCxDQUFnRCxpQkFBaUIsR0E2QmhFOzs7O0lBM0JDLG9EQUFzQjs7SUFFdEIsb0RBQXNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtGb3JtQnVpbGRlciwgVmFsaWRhdG9yc30gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtDb25maWdVdGlscywgRGF0ZVV0aWxzfSBmcm9tICdAZXIvdXRpbHMnO1xuaW1wb3J0IHtOZ1ZhbGlkYXRvcnN9IGZyb20gJ0Blci92YWxpZGF0ZSc7XG5pbXBvcnQge0F1dGhVdGlsc30gZnJvbSAnLi4vLi4vdXRpbHMvYXV0aC9pbmRleCc7XG5pbXBvcnQge0RpVXRpbHN9IGZyb20gJy4uLy4uL3V0aWxzL2RpL2luZGV4JztcbmltcG9ydCB7Um91dGVVdGlsc30gZnJvbSAnLi4vLi4vdXRpbHMvbmF2L2luZGV4JztcbmltcG9ydCB7QXV0aEJhc2VDb21wb25lbnR9IGZyb20gJy4vYXV0aC5jb21wb25lbnQnO1xuXG5leHBvcnQgY2xhc3MgQWJzdHJhY3RDaGFuZ2VQd2RDb21wb25lbnQgZXh0ZW5kcyBBdXRoQmFzZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgcHVibGljIG9sZFBhc3N3b3JkS2V5O1xuXG4gIHB1YmxpYyBuZXdQYXNzd29yZEtleTtcblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmZvcm0gPSBEaVV0aWxzLmdldDxGb3JtQnVpbGRlcj4oRm9ybUJ1aWxkZXIpLmdyb3VwKHtcbiAgICAgIFt0aGlzLm9sZFBhc3N3b3JkS2V5XTogWycnLCBWYWxpZGF0b3JzLnJlcXVpcmVkXSxcbiAgICAgIFt0aGlzLm5ld1Bhc3N3b3JkS2V5XTogWycnLCBbTmdWYWxpZGF0b3JzLnJlcXVpcmVkLCBOZ1ZhbGlkYXRvcnMubWluTGVuZ3RoKDYpXV0sXG4gICAgICByZU5ld1Bhc3N3b3JkOiBbJycsIFtOZ1ZhbGlkYXRvcnMucmVxdWlyZWQsIE5nVmFsaWRhdG9ycy5taW5MZW5ndGgoNiksIE5nVmFsaWRhdG9ycy5lcXVhbFRvKHRoaXMubmV3UGFzc3dvcmRLZXkpXV1cbiAgICB9KTtcbiAgfVxuXG4gIGNoYW5nZVB3ZCgpIHtcbiAgICB0aGlzLmVycm9yID0gdW5kZWZpbmVkO1xuICAgIGNvbnN0IGRhdGE6IHt9ID0gdGhpcy5mb3JtLnZhbHVlO1xuICAgIGRlbGV0ZSBkYXRhWydyZU5ld1Bhc3N3b3JkJ107XG4gICAgZGF0YVsndXNlclB3ZFNldERhdGUnXSA9IERhdGVVdGlscy5nZXRGb3JtYXR0ZWREYXRlVGltZSgpO1xuICAgIEF1dGhVdGlscy5jaGFuZ2VQd2QodGhpcy5nZXRTdWJtaXREYXRhKHRoaXMuZm9ybS52YWx1ZSkpXG4gICAgICAuc3Vic2NyaWJlKHJlc3BvbnNlID0+IHtcbiAgICAgICAgaWYgKHJlc3BvbnNlLnN1Y2Nlc3MgPT09IHRydWUpIHtcblxuICAgICAgICAgIFJvdXRlVXRpbHMubmF2KENvbmZpZ1V0aWxzLmdldENvbmZpZygpLmF1dGguY2hhbmdlUHdkU3VjY2Vzc1JvdXRlcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5lcnJvciA9IHJlc3BvbnNlLm1lc3NhZ2UgfHwgJ+WvhueggeS/ruaUueWksei0pSc7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICB9XG59XG4iXX0=