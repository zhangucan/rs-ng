/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonsUtils, ConfigUtils } from '@er/utils';
import { NgxPermissionsService, NgxRolesService } from 'ngx-permissions';
import { of } from 'rxjs';
import { DiUtils } from '../di';
var PermissionUtils = /** @class */ (function () {
    function PermissionUtils() {
    }
    /**
     * @return {?}
     */
    PermissionUtils.getPermissionsService = /**
     * @return {?}
     */
    function () {
        if (!PermissionUtils._permissionsService) {
            PermissionUtils._permissionsService = DiUtils.get(NgxPermissionsService);
        }
        return PermissionUtils._permissionsService;
    };
    /**
     * @return {?}
     */
    PermissionUtils.getRolesService = /**
     * @return {?}
     */
    function () {
        if (!PermissionUtils._rolesService) {
            PermissionUtils._rolesService = DiUtils.get(NgxRolesService);
        }
        return PermissionUtils._rolesService;
    };
    /**
     * @param {?} roles
     * @return {?}
     */
    PermissionUtils.getRolePermissions = /**
     * @param {?} roles
     * @return {?}
     */
    function (roles) {
        return (ConfigUtils.getConfig().auth.getRolePermissions
            && ConfigUtils.getConfig().auth.getRolePermissions(roles))
            || of([]);
    };
    /**
     * @param {?} permissionName
     * @return {?}
     */
    PermissionUtils.HasModulePermission = /**
     * @param {?} permissionName
     * @return {?}
     */
    function (permissionName) {
        /** @type {?} */
        var permissions = PermissionUtils.getPermissionsService().getPermissions();
        /** @type {?} */
        var matched = Object.keys(permissions).some(function (name) {
            return name === permissionName
                || name.startsWith(permissionName + ':');
        });
        return matched && Object.keys(matched).length > 0;
    };
    /**
     * @param {?} permissions
     * @param {?=} validationFunction
     * @return {?}
     */
    PermissionUtils.addPermissions = /**
     * @param {?} permissions
     * @param {?=} validationFunction
     * @return {?}
     */
    function (permissions, validationFunction) {
        PermissionUtils.getPermissionsService().addPermission(permissions, validationFunction);
    };
    /**
     * @param {?} roleName
     * @param {?=} validationFunction
     * @return {?}
     */
    PermissionUtils.addRole = /**
     * @param {?} roleName
     * @param {?=} validationFunction
     * @return {?}
     */
    function (roleName, validationFunction) {
        if (!validationFunction) {
            validationFunction = function () { return true; };
        }
        PermissionUtils.getRolesService().addRole(roleName, validationFunction);
    };
    /**
     * @param {?} roles
     * @return {?}
     */
    PermissionUtils.addRoles = /**
     * @param {?} roles
     * @return {?}
     */
    function (roles) {
        /** @type {?} */
        var _roles = CommonsUtils.getArrayValue(roles);
        if (_roles) {
            /** @type {?} */
            var roleService_1 = PermissionUtils.getRolesService();
            _roles.filter(function (role) { return !!role; }).forEach(function (role) { return roleService_1.addRole(role, function () { return true; }); });
        }
    };
    /**
     * @param {?} role
     * @return {?}
     */
    PermissionUtils.hasRole = /**
     * @param {?} role
     * @return {?}
     */
    function (role) {
        /** @type {?} */
        var userRoles = PermissionUtils.getRolesService().getRoles();
        return userRoles.hasOwnProperty(role);
    };
    /**
     * @param {?} roles
     * @return {?}
     */
    PermissionUtils.hasAnyRole = /**
     * @param {?} roles
     * @return {?}
     */
    function (roles) {
        /** @type {?} */
        var _roles = CommonsUtils.getArrayValue(roles);
        /** @type {?} */
        var userRoles = PermissionUtils.getRolesService().getRoles();
        return _roles.some(function (role) { return userRoles.hasOwnProperty(role); });
    };
    /**
     * @param {?} roles
     * @return {?}
     */
    PermissionUtils.hasAllRoles = /**
     * @param {?} roles
     * @return {?}
     */
    function (roles) {
        /** @type {?} */
        var _roles = CommonsUtils.getArrayValue(roles);
        /** @type {?} */
        var userRoles = PermissionUtils.getRolesService().getRoles();
        return _roles.every(function (role) { return userRoles.hasOwnProperty(role); });
    };
    /**
     * @return {?}
     */
    PermissionUtils.getPermissions = /**
     * @return {?}
     */
    function () {
        return PermissionUtils.getPermissionsService().permissions$;
    };
    /**
     * @return {?}
     */
    PermissionUtils.getRoles = /**
     * @return {?}
     */
    function () {
        return PermissionUtils.getRolesService().roles$;
    };
    /**
     * @param {?} permission
     * @return {?}
     */
    PermissionUtils.hasPermission = /**
     * @param {?} permission
     * @return {?}
     */
    function (permission) {
        /** @type {?} */
        var userPermissions = PermissionUtils.getPermissionsService().getPermissions();
        return userPermissions.hasOwnProperty(permission);
    };
    /**
     * @param {?} permissios
     * @return {?}
     */
    PermissionUtils.hasAnyPermission = /**
     * @param {?} permissios
     * @return {?}
     */
    function (permissios) {
        /** @type {?} */
        var _permissions = CommonsUtils.getArrayValue(permissios);
        /** @type {?} */
        var userPermissions = PermissionUtils.getPermissionsService().getPermissions();
        return _permissions.some(function (permisiion) { return userPermissions.hasOwnProperty(permisiion); });
    };
    /**
     * @param {?} permissions
     * @return {?}
     */
    PermissionUtils.hasAllPermissions = /**
     * @param {?} permissions
     * @return {?}
     */
    function (permissions) {
        /** @type {?} */
        var _permissions = CommonsUtils.getArrayValue(permissions);
        /** @type {?} */
        var userPermissions = PermissionUtils.getPermissionsService().getPermissions();
        return _permissions.every(function (permisiion) { return userPermissions.hasOwnProperty(permisiion); });
    };
    /**
     * @param {?} roleOrPermission
     * @return {?}
     */
    PermissionUtils.hasAuth = /**
     * @param {?} roleOrPermission
     * @return {?}
     */
    function (roleOrPermission) {
        return PermissionUtils.hasAnyRole(roleOrPermission) || PermissionUtils.hasAnyPermission(roleOrPermission);
    };
    /**
     * @param {?} roleOrPermissions
     * @return {?}
     */
    PermissionUtils.hasAllAuths = /**
     * @param {?} roleOrPermissions
     * @return {?}
     */
    function (roleOrPermissions) {
        return PermissionUtils.hasAllRoles(roleOrPermissions) || PermissionUtils.hasAllPermissions(roleOrPermissions);
    };
    /**
     * @return {?}
     */
    PermissionUtils.clearRoles = /**
     * @return {?}
     */
    function () {
        PermissionUtils.getRolesService().flushRoles();
    };
    /**
     * @return {?}
     */
    PermissionUtils.clearPermission = /**
     * @return {?}
     */
    function () {
        PermissionUtils.getPermissionsService().flushPermissions();
    };
    PermissionUtils._permissionsService = null;
    PermissionUtils._rolesService = null;
    return PermissionUtils;
}());
export { PermissionUtils };
if (false) {
    /** @type {?} */
    PermissionUtils._permissionsService;
    /** @type {?} */
    PermissionUtils._rolesService;
}
//# sourceMappingURL=data:application/json;base64,