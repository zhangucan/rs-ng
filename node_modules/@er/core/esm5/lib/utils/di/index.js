/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ApplicationRef } from '@angular/core';
import { CacheUtils } from '@er/utils';
/** @type {?} */
var cacheKey = '$rootInjectables';
/** @type {?} */
var viewContainerRef = null;
var DiUtils = /** @class */ (function () {
    function DiUtils() {
    }
    /**
     * @template T
     * @param {?} token
     * @return {?}
     */
    DiUtils.get = /**
     * @template T
     * @param {?} token
     * @return {?}
     */
    function (token) {
        /** @type {?} */
        var cached = CacheUtils.get(cacheKey, token);
        if (!cached) {
            if (!DiUtils.injector) {
                throw new Error('rootInjector 初始化失败');
            }
            cached = DiUtils.injector.get(token);
            if (cached) {
                CacheUtils.put(cacheKey, token, cached);
            }
        }
        return cached;
    };
    /**
     * @return {?}
     */
    DiUtils.getRootViewContainerRef = /**
     * @return {?}
     */
    function () {
        if (!viewContainerRef) {
            /** @type {?} */
            var applicationRef = DiUtils.get(ApplicationRef);
            /** @type {?} */
            var appInstance = applicationRef.components[0].instance;
            if (!appInstance.rootViewContainerRef) {
                /** @type {?} */
                var appName = applicationRef.componentTypes[0].name;
                throw new Error(appName + " constructor\u4E2D\u672A\u5B9A\u4E49rootViewContainerRef");
            }
            viewContainerRef = appInstance.rootViewContainerRef;
        }
        return viewContainerRef;
    };
    DiUtils.injector = null;
    return DiUtils;
}());
export { DiUtils };
if (false) {
    /** @type {?} */
    DiUtils.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZXIvY29yZS8iLCJzb3VyY2VzIjpbImxpYi91dGlscy9kaS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLGNBQWMsRUFBbUIsTUFBTSxlQUFlLENBQUM7QUFDL0QsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLFdBQVcsQ0FBQzs7SUFFL0IsUUFBUSxHQUFHLGtCQUFrQjs7SUFDL0IsZ0JBQWdCLEdBQXFCLElBQUk7QUFFN0M7SUFBQTtJQStCQSxDQUFDOzs7Ozs7SUEzQlEsV0FBRzs7Ozs7SUFBVixVQUFjLEtBQUs7O1lBQ2IsTUFBTSxHQUFHLFVBQVUsQ0FBQyxHQUFHLENBQUMsUUFBUSxFQUFFLEtBQUssQ0FBQztRQUM1QyxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ1gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUU7Z0JBQ3JCLE1BQU0sSUFBSSxLQUFLLENBQUMsb0JBQW9CLENBQUMsQ0FBQzthQUN2QztZQUNELE1BQU0sR0FBRyxPQUFPLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUNyQyxJQUFJLE1BQU0sRUFBRTtnQkFDVixVQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsTUFBTSxDQUFDLENBQUM7YUFDekM7U0FDRjtRQUNELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Ozs7SUFFTSwrQkFBdUI7OztJQUE5QjtRQUNFLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTs7Z0JBQ2YsY0FBYyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQWlCLGNBQWMsQ0FBQzs7Z0JBQzVELFdBQVcsR0FBRyxjQUFjLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVE7WUFDekQsSUFBSSxDQUFDLFdBQVcsQ0FBQyxvQkFBb0IsRUFBRTs7b0JBQy9CLE9BQU8sR0FBRyxjQUFjLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUk7Z0JBQ3JELE1BQU0sSUFBSSxLQUFLLENBQUksT0FBTyw2REFBc0MsQ0FBQyxDQUFDO2FBQ25FO1lBQ0QsZ0JBQWdCLEdBQUcsV0FBVyxDQUFDLG9CQUFvQixDQUFDO1NBQ3JEO1FBQ0QsT0FBTyxnQkFBZ0IsQ0FBQztJQUMxQixDQUFDO0lBM0JNLGdCQUFRLEdBQUcsSUFBSSxDQUFDO0lBNkJ6QixjQUFDO0NBQUEsQUEvQkQsSUErQkM7U0EvQlksT0FBTzs7O0lBRWxCLGlCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QXBwbGljYXRpb25SZWYsIFZpZXdDb250YWluZXJSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtDYWNoZVV0aWxzfSBmcm9tICdAZXIvdXRpbHMnO1xuXG5jb25zdCBjYWNoZUtleSA9ICckcm9vdEluamVjdGFibGVzJztcbmxldCB2aWV3Q29udGFpbmVyUmVmOiBWaWV3Q29udGFpbmVyUmVmID0gbnVsbDtcblxuZXhwb3J0IGNsYXNzIERpVXRpbHMge1xuXG4gIHN0YXRpYyBpbmplY3RvciA9IG51bGw7XG5cbiAgc3RhdGljIGdldDxUPih0b2tlbik6IFQge1xuICAgIGxldCBjYWNoZWQgPSBDYWNoZVV0aWxzLmdldChjYWNoZUtleSwgdG9rZW4pO1xuICAgIGlmICghY2FjaGVkKSB7XG4gICAgICBpZiAoIURpVXRpbHMuaW5qZWN0b3IpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdyb290SW5qZWN0b3Ig5Yid5aeL5YyW5aSx6LSlJyk7XG4gICAgICB9XG4gICAgICBjYWNoZWQgPSBEaVV0aWxzLmluamVjdG9yLmdldCh0b2tlbik7XG4gICAgICBpZiAoY2FjaGVkKSB7XG4gICAgICAgIENhY2hlVXRpbHMucHV0KGNhY2hlS2V5LCB0b2tlbiwgY2FjaGVkKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNhY2hlZDtcbiAgfVxuXG4gIHN0YXRpYyBnZXRSb290Vmlld0NvbnRhaW5lclJlZigpOiBWaWV3Q29udGFpbmVyUmVmIHtcbiAgICBpZiAoIXZpZXdDb250YWluZXJSZWYpIHtcbiAgICAgIGNvbnN0IGFwcGxpY2F0aW9uUmVmID0gRGlVdGlscy5nZXQ8QXBwbGljYXRpb25SZWY+KEFwcGxpY2F0aW9uUmVmKTtcbiAgICAgIGNvbnN0IGFwcEluc3RhbmNlID0gYXBwbGljYXRpb25SZWYuY29tcG9uZW50c1swXS5pbnN0YW5jZTtcbiAgICAgIGlmICghYXBwSW5zdGFuY2Uucm9vdFZpZXdDb250YWluZXJSZWYpIHtcbiAgICAgICAgY29uc3QgYXBwTmFtZSA9IGFwcGxpY2F0aW9uUmVmLmNvbXBvbmVudFR5cGVzWzBdLm5hbWU7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgJHthcHBOYW1lfSBjb25zdHJ1Y3RvcuS4reacquWumuS5iXJvb3RWaWV3Q29udGFpbmVyUmVmYCk7XG4gICAgICB9XG4gICAgICB2aWV3Q29udGFpbmVyUmVmID0gYXBwSW5zdGFuY2Uucm9vdFZpZXdDb250YWluZXJSZWY7XG4gICAgfVxuICAgIHJldHVybiB2aWV3Q29udGFpbmVyUmVmO1xuICB9XG5cbn1cbiJdfQ==