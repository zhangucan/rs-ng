/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { LogService } from '../../services/log/service';
import { DiUtils } from '../di';
var LogUtils = /** @class */ (function () {
    function LogUtils() {
    }
    /**
     * @param {?} from
     * @param {?} message
     * @param {...?} context
     * @return {?}
     */
    LogUtils.debug = /**
     * @param {?} from
     * @param {?} message
     * @param {...?} context
     * @return {?}
     */
    function (from, message) {
        var context = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            context[_i - 2] = arguments[_i];
        }
        LogUtils.getLogService().debug(from, message, context);
    };
    /**
     * @param {?} from
     * @param {?} message
     * @param {...?} context
     * @return {?}
     */
    LogUtils.info = /**
     * @param {?} from
     * @param {?} message
     * @param {...?} context
     * @return {?}
     */
    function (from, message) {
        var context = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            context[_i - 2] = arguments[_i];
        }
        LogUtils.getLogService().info(from, message, context);
    };
    /**
     * @param {?} messages
     * @return {?}
     */
    LogUtils.warn = /**
     * @param {?} messages
     * @return {?}
     */
    function (messages) {
        LogUtils.getLogService().warn(messages);
    };
    /**
     * @param {?} from
     * @param {?} message
     * @param {...?} context
     * @return {?}
     */
    LogUtils.error = /**
     * @param {?} from
     * @param {?} message
     * @param {...?} context
     * @return {?}
     */
    function (from, message) {
        var context = [];
        for (var _i = 2; _i < arguments.length; _i++) {
            context[_i - 2] = arguments[_i];
        }
        LogUtils.getLogService().error(from, message, context);
    };
    /**
     * @private
     * @return {?}
     */
    LogUtils.getLogService = /**
     * @private
     * @return {?}
     */
    function () {
        if (!LogUtils._logService) {
            LogUtils._logService = DiUtils.get(LogService);
        }
        return LogUtils._logService;
    };
    LogUtils._logService = null;
    return LogUtils;
}());
export { LogUtils };
if (false) {
    /**
     * @type {?}
     * @private
     */
    LogUtils._logService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZXIvY29yZS8iLCJzb3VyY2VzIjpbImxpYi91dGlscy9sb2cvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSw0QkFBNEIsQ0FBQztBQUN0RCxPQUFPLEVBQUMsT0FBTyxFQUFDLE1BQU0sT0FBTyxDQUFDO0FBRzlCO0lBQUE7SUEwQkEsQ0FBQzs7Ozs7OztJQXRCUSxjQUFLOzs7Ozs7SUFBWixVQUFhLElBQUksRUFBRSxPQUFPO1FBQUUsaUJBQWlCO2FBQWpCLFVBQWlCLEVBQWpCLHFCQUFpQixFQUFqQixJQUFpQjtZQUFqQixnQ0FBaUI7O1FBQzNDLFFBQVEsQ0FBQyxhQUFhLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN6RCxDQUFDOzs7Ozs7O0lBRU0sYUFBSTs7Ozs7O0lBQVgsVUFBWSxJQUFJLEVBQUUsT0FBTztRQUFFLGlCQUFpQjthQUFqQixVQUFpQixFQUFqQixxQkFBaUIsRUFBakIsSUFBaUI7WUFBakIsZ0NBQWlCOztRQUMxQyxRQUFRLENBQUMsYUFBYSxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDeEQsQ0FBQzs7Ozs7SUFFTSxhQUFJOzs7O0lBQVgsVUFBWSxRQUFxQjtRQUMvQixRQUFRLENBQUMsYUFBYSxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzFDLENBQUM7Ozs7Ozs7SUFFTSxjQUFLOzs7Ozs7SUFBWixVQUFhLElBQUksRUFBRSxPQUFPO1FBQUUsaUJBQWlCO2FBQWpCLFVBQWlCLEVBQWpCLHFCQUFpQixFQUFqQixJQUFpQjtZQUFqQixnQ0FBaUI7O1FBQzNDLFFBQVEsQ0FBQyxhQUFhLEVBQUUsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN6RCxDQUFDOzs7OztJQUVjLHNCQUFhOzs7O0lBQTVCO1FBQ0UsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLEVBQUU7WUFDekIsUUFBUSxDQUFDLFdBQVcsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFhLFVBQVUsQ0FBQyxDQUFDO1NBQzVEO1FBQ0QsT0FBTyxRQUFRLENBQUMsV0FBVyxDQUFDO0lBQzlCLENBQUM7SUF2QmMsb0JBQVcsR0FBZSxJQUFJLENBQUM7SUF3QmhELGVBQUM7Q0FBQSxBQTFCRCxJQTBCQztTQTFCWSxRQUFROzs7Ozs7SUFFbkIscUJBQThDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtMb2dTZXJ2aWNlfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9sb2cvc2VydmljZSc7XG5pbXBvcnQge0RpVXRpbHN9IGZyb20gJy4uL2RpJztcblxuXG5leHBvcnQgY2xhc3MgTG9nVXRpbHMge1xuXG4gIHByaXZhdGUgc3RhdGljIF9sb2dTZXJ2aWNlOiBMb2dTZXJ2aWNlID0gbnVsbDtcblxuICBzdGF0aWMgZGVidWcoZnJvbSwgbWVzc2FnZSwgLi4uY29udGV4dDogYW55W10pIHtcbiAgICBMb2dVdGlscy5nZXRMb2dTZXJ2aWNlKCkuZGVidWcoZnJvbSwgbWVzc2FnZSwgY29udGV4dCk7XG4gIH1cblxuICBzdGF0aWMgaW5mbyhmcm9tLCBtZXNzYWdlLCAuLi5jb250ZXh0OiBhbnlbXSkge1xuICAgIExvZ1V0aWxzLmdldExvZ1NlcnZpY2UoKS5pbmZvKGZyb20sIG1lc3NhZ2UsIGNvbnRleHQpO1xuICB9XG5cbiAgc3RhdGljIHdhcm4obWVzc2FnZXM6IGFueSB8IGFueVtdKSB7XG4gICAgTG9nVXRpbHMuZ2V0TG9nU2VydmljZSgpLndhcm4obWVzc2FnZXMpO1xuICB9XG5cbiAgc3RhdGljIGVycm9yKGZyb20sIG1lc3NhZ2UsIC4uLmNvbnRleHQ6IGFueVtdKSB7XG4gICAgTG9nVXRpbHMuZ2V0TG9nU2VydmljZSgpLmVycm9yKGZyb20sIG1lc3NhZ2UsIGNvbnRleHQpO1xuICB9XG5cbiAgcHJpdmF0ZSBzdGF0aWMgZ2V0TG9nU2VydmljZSgpIHtcbiAgICBpZiAoIUxvZ1V0aWxzLl9sb2dTZXJ2aWNlKSB7XG4gICAgICBMb2dVdGlscy5fbG9nU2VydmljZSA9IERpVXRpbHMuZ2V0PExvZ1NlcnZpY2U+KExvZ1NlcnZpY2UpO1xuICAgIH1cbiAgICByZXR1cm4gTG9nVXRpbHMuX2xvZ1NlcnZpY2U7XG4gIH1cbn1cbiJdfQ==