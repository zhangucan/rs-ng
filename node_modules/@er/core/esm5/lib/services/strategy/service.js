/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// https://itnext.io/cache-components-with-angular-routereusestrategy-3e4c8b174d5f
var 
// https://itnext.io/cache-components-with-angular-routereusestrategy-3e4c8b174d5f
CachedRouteReuseStrategy = /** @class */ (function () {
    function CachedRouteReuseStrategy() {
        this.storedRouteHandles = new Map();
        this.allowRetrieveCache = {};
    }
    /**
     * @param {?} future
     * @param {?} curr
     * @return {?}
     */
    CachedRouteReuseStrategy.prototype.shouldReuseRoute = /**
     * @param {?} future
     * @param {?} curr
     * @return {?}
     */
    function (future, curr) {
        if (this.isInOutlet(future['_routerState'].url) || this.isInOutlet(curr['_routerState'].url)) {
            return future.routeConfig === curr.routeConfig;
        }
        return future.routeConfig === curr.routeConfig && (false !== (future.data && future.data.$reuse));
    };
    /**
     * @param {?} route
     * @return {?}
     */
    CachedRouteReuseStrategy.prototype.retrieve = /**
     * @param {?} route
     * @return {?}
     */
    function (route) {
        return (/** @type {?} */ (this.storedRouteHandles.get(this.getPath(route))));
    };
    /**
     * @param {?} route
     * @return {?}
     */
    CachedRouteReuseStrategy.prototype.shouldAttach = /**
     * @param {?} route
     * @return {?}
     */
    function (route) {
        /** @type {?} */
        var path = this.getPath(route);
        if (this.allowRetrieveCache[path]) {
            return this.storedRouteHandles.has(this.getPath(route));
        }
        return false;
    };
    /**
     * @param {?} route
     * @return {?}
     */
    CachedRouteReuseStrategy.prototype.shouldDetach = /**
     * @param {?} route
     * @return {?}
     */
    function (route) {
        /** @type {?} */
        var path = this.getPath(route);
        if (this.allowRetrieveCache.hasOwnProperty(path)) {
            return true;
        }
        return false;
    };
    /**
     * @param {?} route
     * @param {?} detachedTree
     * @return {?}
     */
    CachedRouteReuseStrategy.prototype.store = /**
     * @param {?} route
     * @param {?} detachedTree
     * @return {?}
     */
    function (route, detachedTree) {
        this.storedRouteHandles.set(this.getPath(route), detachedTree);
    };
    /**
     * @private
     * @param {?} url
     * @return {?}
     */
    CachedRouteReuseStrategy.prototype.isInOutlet = /**
     * @private
     * @param {?} url
     * @return {?}
     */
    function (url) {
        return /.*\(.*:.*\).*/.test(url);
    };
    /**
     * @private
     * @param {?} route
     * @return {?}
     */
    CachedRouteReuseStrategy.prototype.getPath = /**
     * @private
     * @param {?} route
     * @return {?}
     */
    function (route) {
        if (route.routeConfig !== null && route.routeConfig.path !== null) {
            return route.routeConfig.path;
        }
        return '';
    };
    return CachedRouteReuseStrategy;
}());
// https://itnext.io/cache-components-with-angular-routereusestrategy-3e4c8b174d5f
export { CachedRouteReuseStrategy };
if (false) {
    /** @type {?} */
    CachedRouteReuseStrategy.prototype.storedRouteHandles;
    /** @type {?} */
    CachedRouteReuseStrategy.prototype.allowRetrieveCache;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Blci9jb3JlLyIsInNvdXJjZXMiOlsibGliL3NlcnZpY2VzL3N0cmF0ZWd5L3NlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFJQTs7O0lBQUE7UUFDRSx1QkFBa0IsR0FBRyxJQUFJLEdBQUcsRUFBK0IsQ0FBQztRQUM1RCx1QkFBa0IsR0FBRyxFQUFFLENBQUM7SUEyQzFCLENBQUM7Ozs7OztJQXpDQyxtREFBZ0I7Ozs7O0lBQWhCLFVBQWlCLE1BQThCLEVBQUUsSUFBNEI7UUFDM0UsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUM1RixPQUFPLE1BQU0sQ0FBQyxXQUFXLEtBQUssSUFBSSxDQUFDLFdBQVcsQ0FBQztTQUNoRDtRQUNELE9BQU8sTUFBTSxDQUFDLFdBQVcsS0FBSyxJQUFJLENBQUMsV0FBVyxJQUFJLENBQUMsS0FBSyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7SUFDcEcsQ0FBQzs7Ozs7SUFFRCwyQ0FBUTs7OztJQUFSLFVBQVMsS0FBNkI7UUFDcEMsT0FBTyxtQkFBQSxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBdUIsQ0FBQztJQUNqRixDQUFDOzs7OztJQUVELCtDQUFZOzs7O0lBQVosVUFBYSxLQUE2Qjs7WUFDbEMsSUFBSSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDO1FBQ2hDLElBQUksSUFBSSxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ2pDLE9BQU8sSUFBSSxDQUFDLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7U0FDekQ7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7Ozs7O0lBRUQsK0NBQVk7Ozs7SUFBWixVQUFhLEtBQTZCOztZQUNsQyxJQUFJLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFDaEMsSUFBSSxJQUFJLENBQUMsa0JBQWtCLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ2hELE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7Ozs7OztJQUVELHdDQUFLOzs7OztJQUFMLFVBQU0sS0FBNkIsRUFBRSxZQUFpQztRQUNwRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDakUsQ0FBQzs7Ozs7O0lBRU8sNkNBQVU7Ozs7O0lBQWxCLFVBQW1CLEdBQUc7UUFDcEIsT0FBTyxlQUFlLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ25DLENBQUM7Ozs7OztJQUVPLDBDQUFPOzs7OztJQUFmLFVBQWdCLEtBQTZCO1FBQzNDLElBQUksS0FBSyxDQUFDLFdBQVcsS0FBSyxJQUFJLElBQUksS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLEtBQUssSUFBSSxFQUFFO1lBQ2pFLE9BQU8sS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUM7U0FDL0I7UUFDRCxPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7SUFDSCwrQkFBQztBQUFELENBQUMsQUE3Q0QsSUE2Q0M7Ozs7O0lBNUNDLHNEQUE0RDs7SUFDNUQsc0RBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBEZXRhY2hlZFJvdXRlSGFuZGxlfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHtSb3V0ZVJldXNlU3RyYXRlZ3l9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlci8nO1xuXG4vLyBodHRwczovL2l0bmV4dC5pby9jYWNoZS1jb21wb25lbnRzLXdpdGgtYW5ndWxhci1yb3V0ZXJldXNlc3RyYXRlZ3ktM2U0YzhiMTc0ZDVmXG5leHBvcnQgY2xhc3MgQ2FjaGVkUm91dGVSZXVzZVN0cmF0ZWd5IGltcGxlbWVudHMgUm91dGVSZXVzZVN0cmF0ZWd5IHtcbiAgc3RvcmVkUm91dGVIYW5kbGVzID0gbmV3IE1hcDxzdHJpbmcsIERldGFjaGVkUm91dGVIYW5kbGU+KCk7XG4gIGFsbG93UmV0cmlldmVDYWNoZSA9IHt9O1xuXG4gIHNob3VsZFJldXNlUm91dGUoZnV0dXJlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBjdXJyOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90KTogYm9vbGVhbiB7XG4gICAgaWYgKHRoaXMuaXNJbk91dGxldChmdXR1cmVbJ19yb3V0ZXJTdGF0ZSddLnVybCkgfHwgdGhpcy5pc0luT3V0bGV0KGN1cnJbJ19yb3V0ZXJTdGF0ZSddLnVybCkpIHtcbiAgICAgIHJldHVybiBmdXR1cmUucm91dGVDb25maWcgPT09IGN1cnIucm91dGVDb25maWc7XG4gICAgfVxuICAgIHJldHVybiBmdXR1cmUucm91dGVDb25maWcgPT09IGN1cnIucm91dGVDb25maWcgJiYgKGZhbHNlICE9PSAoZnV0dXJlLmRhdGEgJiYgZnV0dXJlLmRhdGEuJHJldXNlKSk7XG4gIH1cblxuICByZXRyaWV2ZShyb3V0ZTogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCk6IERldGFjaGVkUm91dGVIYW5kbGUgfCBudWxsIHtcbiAgICByZXR1cm4gdGhpcy5zdG9yZWRSb3V0ZUhhbmRsZXMuZ2V0KHRoaXMuZ2V0UGF0aChyb3V0ZSkpIGFzIERldGFjaGVkUm91dGVIYW5kbGU7XG4gIH1cblxuICBzaG91bGRBdHRhY2gocm91dGU6IEFjdGl2YXRlZFJvdXRlU25hcHNob3QpOiBib29sZWFuIHtcbiAgICBjb25zdCBwYXRoID0gdGhpcy5nZXRQYXRoKHJvdXRlKTtcbiAgICBpZiAodGhpcy5hbGxvd1JldHJpZXZlQ2FjaGVbcGF0aF0pIHtcbiAgICAgIHJldHVybiB0aGlzLnN0b3JlZFJvdXRlSGFuZGxlcy5oYXModGhpcy5nZXRQYXRoKHJvdXRlKSk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHNob3VsZERldGFjaChyb3V0ZTogQWN0aXZhdGVkUm91dGVTbmFwc2hvdCk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHBhdGggPSB0aGlzLmdldFBhdGgocm91dGUpO1xuICAgIGlmICh0aGlzLmFsbG93UmV0cmlldmVDYWNoZS5oYXNPd25Qcm9wZXJ0eShwYXRoKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0b3JlKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBkZXRhY2hlZFRyZWU6IERldGFjaGVkUm91dGVIYW5kbGUpOiB2b2lkIHtcbiAgICB0aGlzLnN0b3JlZFJvdXRlSGFuZGxlcy5zZXQodGhpcy5nZXRQYXRoKHJvdXRlKSwgZGV0YWNoZWRUcmVlKTtcbiAgfVxuXG4gIHByaXZhdGUgaXNJbk91dGxldCh1cmwpIHtcbiAgICByZXR1cm4gLy4qXFwoLio6LipcXCkuKi8udGVzdCh1cmwpO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRQYXRoKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90KTogc3RyaW5nIHtcbiAgICBpZiAocm91dGUucm91dGVDb25maWcgIT09IG51bGwgJiYgcm91dGUucm91dGVDb25maWcucGF0aCAhPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIHJvdXRlLnJvdXRlQ29uZmlnLnBhdGg7XG4gICAgfVxuICAgIHJldHVybiAnJztcbiAgfVxufVxuIl19