/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { CommonsUtils, DataItemUtils } from '@er/utils';
import { BaseComponent } from '../../bases/component';
var DataItemComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DataItemComponent, _super);
    function DataItemComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(DataItemComponent.prototype, "labels", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var _label = DataItemUtils.getItemLabel(this.item, this.labelKeys);
            if (CommonsUtils.isArray(_label)) {
                return _label;
            }
            else {
                return [_label];
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataItemComponent.prototype, "labelKeys", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var keys = this.props.dropDownOptionKey || this.props.labelKey;
            if (!keys) {
                if (this.item.hasOwnProperty('label')) {
                    keys = 'label';
                }
                else {
                    keys = Object.keys(this.item).filter(function (key) { return !key.startsWith('_') && key !== 'id'; });
                }
            }
            return keys;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    DataItemComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.props) {
            this.props = {};
        }
    };
    DataItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'er-data-item',
                    template: "\n    <ng-container *ngIf=\"props.template;else default\">\n      <er-dyna-content [content]=\"props.template\" [context]=\"item\"></er-dyna-content>\n    </ng-container>\n    <ng-template #default>\n      <div class=\"d-flex data-item\" [ngClass]=\"props.itemStyleClass || 'ui-clearfix'\">\n        <span class=\"label mr-3 border-right\" *ngFor=\"let label of labels\" [ngClass]=\"props.labelStyleClass\" [innerHTML]=\"label\"></span>\n        <span class=\"pull-right count\" *ngIf=\"props.showCounter && item['value']\">\n          <span [ngClass]=\"props.counterStyleClass || 'badge badge-pill badge-info'\">{{item['value']}}</span>\n        </span>\n      </div>\n    </ng-template>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: ["/deep/ .ui-autocomplete-list-item{border-bottom:1px solid #9f9f9f!important;font-size:.8em!important;color:#000!important}/deep/ .ui-autocomplete-list-item:hover{background-color:transparent!important;font-weight:700!important;color:red!important;font-size:1em!important}"]
                }] }
    ];
    DataItemComponent.propDecorators = {
        item: [{ type: Input }],
        props: [{ type: Input }]
    };
    return DataItemComponent;
}(BaseComponent));
export { DataItemComponent };
if (false) {
    /** @type {?} */
    DataItemComponent.prototype.item;
    /** @type {?} */
    DataItemComponent.prototype.props;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL2NvcmUvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9kYXRhLWl0ZW0vY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVMsTUFBTSxlQUFlLENBQUM7QUFFaEYsT0FBTyxFQUFDLFlBQVksRUFBRSxhQUFhLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDdEQsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBRXBEO0lBbUJ1Qyw2Q0FBYTtJQW5CcEQ7O0lBb0RBLENBQUM7SUEzQkMsc0JBQUkscUNBQU07Ozs7UUFBVjs7Z0JBQ1EsTUFBTSxHQUFHLGFBQWEsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDO1lBQ3BFLElBQUksWUFBWSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRTtnQkFDaEMsT0FBTyxNQUFNLENBQUM7YUFDZjtpQkFBTTtnQkFDTCxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDakI7UUFDSCxDQUFDOzs7T0FBQTtJQUVELHNCQUFJLHdDQUFTOzs7O1FBQWI7O2dCQUNNLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGlCQUFpQixJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUTtZQUM5RCxJQUFJLENBQUMsSUFBSSxFQUFFO2dCQUNULElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLEVBQUU7b0JBQ3JDLElBQUksR0FBRyxPQUFPLENBQUM7aUJBQ2hCO3FCQUFNO29CQUNMLElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsVUFBQSxHQUFHLElBQUksT0FBQSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxLQUFLLElBQUksRUFBcEMsQ0FBb0MsQ0FBQyxDQUFDO2lCQUNuRjthQUNGO1lBQ0QsT0FBTyxJQUFJLENBQUM7UUFDZCxDQUFDOzs7T0FBQTs7OztJQUVELG9DQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2YsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7U0FDakI7SUFDSCxDQUFDOztnQkFsREYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxjQUFjO29CQUN4QixRQUFRLEVBQUUsc3JCQVlUO29CQUVELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNOztpQkFDaEQ7Ozt1QkFJRSxLQUFLO3dCQUVMLEtBQUs7O0lBNkJSLHdCQUFDO0NBQUEsQUFwREQsQ0FtQnVDLGFBQWEsR0FpQ25EO1NBakNZLGlCQUFpQjs7O0lBRTVCLGlDQUFrQjs7SUFFbEIsa0NBQThCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7RGF0YUl0ZW1Qcm9wc30gZnJvbSAnQGVyL3R5cGVzJztcbmltcG9ydCB7Q29tbW9uc1V0aWxzLCBEYXRhSXRlbVV0aWxzfSBmcm9tICdAZXIvdXRpbHMnO1xuaW1wb3J0IHtCYXNlQ29tcG9uZW50fSBmcm9tICcuLi8uLi9iYXNlcy9jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdlci1kYXRhLWl0ZW0nLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJwcm9wcy50ZW1wbGF0ZTtlbHNlIGRlZmF1bHRcIj5cbiAgICAgIDxlci1keW5hLWNvbnRlbnQgW2NvbnRlbnRdPVwicHJvcHMudGVtcGxhdGVcIiBbY29udGV4dF09XCJpdGVtXCI+PC9lci1keW5hLWNvbnRlbnQ+XG4gICAgPC9uZy1jb250YWluZXI+XG4gICAgPG5nLXRlbXBsYXRlICNkZWZhdWx0PlxuICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBkYXRhLWl0ZW1cIiBbbmdDbGFzc109XCJwcm9wcy5pdGVtU3R5bGVDbGFzcyB8fCAndWktY2xlYXJmaXgnXCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwibGFiZWwgbXItMyBib3JkZXItcmlnaHRcIiAqbmdGb3I9XCJsZXQgbGFiZWwgb2YgbGFiZWxzXCIgW25nQ2xhc3NdPVwicHJvcHMubGFiZWxTdHlsZUNsYXNzXCIgW2lubmVySFRNTF09XCJsYWJlbFwiPjwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJwdWxsLXJpZ2h0IGNvdW50XCIgKm5nSWY9XCJwcm9wcy5zaG93Q291bnRlciAmJiBpdGVtWyd2YWx1ZSddXCI+XG4gICAgICAgICAgPHNwYW4gW25nQ2xhc3NdPVwicHJvcHMuY291bnRlclN0eWxlQ2xhc3MgfHwgJ2JhZGdlIGJhZGdlLXBpbGwgYmFkZ2UtaW5mbydcIj57e2l0ZW1bJ3ZhbHVlJ119fTwvc3Bhbj5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgYCxcbiAgc3R5bGVVcmxzOiBbJ3N0eWxlcy5zY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuXG5leHBvcnQgY2xhc3MgRGF0YUl0ZW1Db21wb25lbnQgZXh0ZW5kcyBCYXNlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBASW5wdXQoKSBpdGVtOiB7fTtcblxuICBASW5wdXQoKSBwcm9wczogRGF0YUl0ZW1Qcm9wcztcblxuICBnZXQgbGFiZWxzKCkge1xuICAgIGNvbnN0IF9sYWJlbCA9IERhdGFJdGVtVXRpbHMuZ2V0SXRlbUxhYmVsKHRoaXMuaXRlbSwgdGhpcy5sYWJlbEtleXMpO1xuICAgIGlmIChDb21tb25zVXRpbHMuaXNBcnJheShfbGFiZWwpKSB7XG4gICAgICByZXR1cm4gX2xhYmVsO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gW19sYWJlbF07XG4gICAgfVxuICB9XG5cbiAgZ2V0IGxhYmVsS2V5cygpIHtcbiAgICBsZXQga2V5cyA9IHRoaXMucHJvcHMuZHJvcERvd25PcHRpb25LZXkgfHwgdGhpcy5wcm9wcy5sYWJlbEtleTtcbiAgICBpZiAoIWtleXMpIHtcbiAgICAgIGlmICh0aGlzLml0ZW0uaGFzT3duUHJvcGVydHkoJ2xhYmVsJykpIHtcbiAgICAgICAga2V5cyA9ICdsYWJlbCc7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBrZXlzID0gT2JqZWN0LmtleXModGhpcy5pdGVtKS5maWx0ZXIoa2V5ID0+ICFrZXkuc3RhcnRzV2l0aCgnXycpICYmIGtleSAhPT0gJ2lkJyk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBrZXlzO1xuICB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgaWYgKCF0aGlzLnByb3BzKSB7XG4gICAgICB0aGlzLnByb3BzID0ge307XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==