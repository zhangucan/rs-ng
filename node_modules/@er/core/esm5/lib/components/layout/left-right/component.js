/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import { BaseComponent } from '../../../bases/component';
var LeftRightContainerComponent = /** @class */ (function (_super) {
    tslib_1.__extends(LeftRightContainerComponent, _super);
    function LeftRightContainerComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.leftStyleClass = 'col-3';
        _this.rightStyleClass = 'col-9';
        _this.switchable = true;
        _this.onLeftHide = new EventEmitter();
        _this.templateNames = {
            left: 'left',
            right: 'right'
        };
        return _this;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    LeftRightContainerComponent.prototype.reLayout = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.hideLeft = event;
        this.onLeftHide.emit(event);
    };
    LeftRightContainerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'er-left-right',
                    template: "\n    <div class=\"d-flex\">\n      <div *ngIf=\"!hideLeft\" class=\"w-25 shadow-lg\">\n        <ng-container *ngTemplateOutlet=\"template(templateNames.left)\"></ng-container>\n      </div>\n      <div class=\"flex-grow-1\">\n        <div *ngIf=\"switchable\">\n          <i class=\"fa fa-2x  text-primary\" [title]=\"hideLeft?'\u5C55\u5F00\u5DE6\u4FA7\u5185\u5BB9':'\u6536\u8D77\u5DE6\u4FA7\u5185\u5BB9'\"\n             [ngClass]=\"hideLeft?'fa-arrow-circle-right':'fa-arrow-circle-left'\"\n             (click)=\"reLayout(!hideLeft)\"></i>\n        </div>\n        <ng-container *ngTemplateOutlet=\"template(templateNames.right)\"></ng-container>\n      </div>\n    </div>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    LeftRightContainerComponent.propDecorators = {
        leftStyleClass: [{ type: Input }],
        rightStyleClass: [{ type: Input }],
        hideLeft: [{ type: Input }],
        switchable: [{ type: Input }],
        onLeftHide: [{ type: Output }]
    };
    return LeftRightContainerComponent;
}(BaseComponent));
export { LeftRightContainerComponent };
if (false) {
    /** @type {?} */
    LeftRightContainerComponent.prototype.leftStyleClass;
    /** @type {?} */
    LeftRightContainerComponent.prototype.rightStyleClass;
    /** @type {?} */
    LeftRightContainerComponent.prototype.hideLeft;
    /** @type {?} */
    LeftRightContainerComponent.prototype.switchable;
    /** @type {?} */
    LeftRightContainerComponent.prototype.onLeftHide;
    /** @type {?} */
    LeftRightContainerComponent.prototype.templateNames;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL2NvcmUvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9sYXlvdXQvbGVmdC1yaWdodC9jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzlGLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUV2RDtJQW1CaUQsdURBQWE7SUFuQjlEO1FBQUEscUVBc0NDO1FBbEJVLG9CQUFjLEdBQUcsT0FBTyxDQUFDO1FBQ3pCLHFCQUFlLEdBQUcsT0FBTyxDQUFDO1FBSTFCLGdCQUFVLEdBQUcsSUFBSSxDQUFDO1FBRWpCLGdCQUFVLEdBQTBCLElBQUksWUFBWSxFQUFFLENBQUM7UUFFakUsbUJBQWEsR0FBRztZQUNkLElBQUksRUFBRSxNQUFNO1lBQ1osS0FBSyxFQUFFLE9BQU87U0FDZixDQUFDOztJQU1KLENBQUM7Ozs7O0lBSkMsOENBQVE7Ozs7SUFBUixVQUFTLEtBQUs7UUFDWixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQztRQUN0QixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM5QixDQUFDOztnQkFyQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxlQUFlO29CQUN6QixRQUFRLEVBQUUseXFCQWNUO29CQUNELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs7O2lDQUVFLEtBQUs7a0NBQ0wsS0FBSzsyQkFFTCxLQUFLOzZCQUVMLEtBQUs7NkJBRUwsTUFBTTs7SUFXVCxrQ0FBQztDQUFBLEFBdENELENBbUJpRCxhQUFhLEdBbUI3RDtTQW5CWSwyQkFBMkI7OztJQUN0QyxxREFBa0M7O0lBQ2xDLHNEQUFtQzs7SUFFbkMsK0NBQTJCOztJQUUzQixpREFBMkI7O0lBRTNCLGlEQUFpRTs7SUFFakUsb0RBR0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Jhc2VDb21wb25lbnR9IGZyb20gJy4uLy4uLy4uL2Jhc2VzL2NvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2VyLWxlZnQtcmlnaHQnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgY2xhc3M9XCJkLWZsZXhcIj5cbiAgICAgIDxkaXYgKm5nSWY9XCIhaGlkZUxlZnRcIiBjbGFzcz1cInctMjUgc2hhZG93LWxnXCI+XG4gICAgICAgIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJ0ZW1wbGF0ZSh0ZW1wbGF0ZU5hbWVzLmxlZnQpXCI+PC9uZy1jb250YWluZXI+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJmbGV4LWdyb3ctMVwiPlxuICAgICAgICA8ZGl2ICpuZ0lmPVwic3dpdGNoYWJsZVwiPlxuICAgICAgICAgIDxpIGNsYXNzPVwiZmEgZmEtMnggIHRleHQtcHJpbWFyeVwiIFt0aXRsZV09XCJoaWRlTGVmdD8n5bGV5byA5bem5L6n5YaF5a65Jzon5pS26LW35bem5L6n5YaF5a65J1wiXG4gICAgICAgICAgICAgW25nQ2xhc3NdPVwiaGlkZUxlZnQ/J2ZhLWFycm93LWNpcmNsZS1yaWdodCc6J2ZhLWFycm93LWNpcmNsZS1sZWZ0J1wiXG4gICAgICAgICAgICAgKGNsaWNrKT1cInJlTGF5b3V0KCFoaWRlTGVmdClcIj48L2k+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwidGVtcGxhdGUodGVtcGxhdGVOYW1lcy5yaWdodClcIj48L25nLWNvbnRhaW5lcj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICBgLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgTGVmdFJpZ2h0Q29udGFpbmVyQ29tcG9uZW50IGV4dGVuZHMgQmFzZUNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGxlZnRTdHlsZUNsYXNzID0gJ2NvbC0zJztcbiAgQElucHV0KCkgcmlnaHRTdHlsZUNsYXNzID0gJ2NvbC05JztcblxuICBASW5wdXQoKSBoaWRlTGVmdDogYm9vbGVhbjtcblxuICBASW5wdXQoKSBzd2l0Y2hhYmxlID0gdHJ1ZTtcblxuICBAT3V0cHV0KCkgb25MZWZ0SGlkZTogRXZlbnRFbWl0dGVyPGJvb2xlYW4+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIHRlbXBsYXRlTmFtZXMgPSB7XG4gICAgbGVmdDogJ2xlZnQnLFxuICAgIHJpZ2h0OiAncmlnaHQnXG4gIH07XG5cbiAgcmVMYXlvdXQoZXZlbnQpIHtcbiAgICB0aGlzLmhpZGVMZWZ0ID0gZXZlbnQ7XG4gICAgdGhpcy5vbkxlZnRIaWRlLmVtaXQoZXZlbnQpO1xuICB9XG59XG4iXX0=