/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import { BaseComponent } from '../../../bases/component';
import { QueryBuilderComponent } from '../component';
var QueryBuilderRuleComponent = /** @class */ (function (_super) {
    tslib_1.__extends(QueryBuilderRuleComponent, _super);
    function QueryBuilderRuleComponent(qb) {
        var _this = _super.call(this) || this;
        _this.qb = qb;
        _this.ruleChange = new EventEmitter();
        return _this;
    }
    Object.defineProperty(QueryBuilderRuleComponent.prototype, "rule", {
        get: /**
         * @return {?}
         */
        function () {
            return this._rule;
        },
        set: /**
         * @param {?} rule
         * @return {?}
         */
        function (rule) {
            this._rule = rule;
            this.ruleChange.emit(this._rule);
        },
        enumerable: true,
        configurable: true
    });
    QueryBuilderRuleComponent.decorators = [
        { type: Component, args: [{
                    selector: 'er-query-builder-rule',
                    template: "<div class=\"d-flex justify-content-between align-items-center rule\">\n\n  <div class=\"badge badge-info rounded-circle\">{{ruleIndex+1}}</div>\n\n  <ng-container *ngIf=\"qb.templates[qb.templateNames.removeButton] as custumer; else defaultRemoveButton\">\n    <div [ngClass]=\"qb.getClassNames('buttonGroup', 'rightAlign')\">\n      <ng-container *ngTemplateOutlet=\"custumer; context: qb.context({$implicit:rule})\"></ng-container>\n    </div>\n  </ng-container>\n\n  <div *ngIf=\"qb.config.entities?.length > 0\" class=\"q-inline-block-display\">\n    <ng-container *ngIf=\"qb.templates[qb.templateNames.entity] as customer; else defaultEntity\">\n      <ng-container *ngTemplateOutlet=\"customer; context: qb.context({$implicit:rule})\"></ng-container>\n    </ng-container>\n  </div>\n\n  <ng-container *ngIf=\"qb.templates[qb.templateNames.field] as customer; else defaultField\">\n    <ng-container *ngTemplateOutlet=\"customer; context: qb.context({$implicit:rule})\"></ng-container>\n  </ng-container>\n\n  <ng-container *ngIf=\"qb.templates[qb.templateNames.operator] as customer; else defaultOperator\">\n    <ng-container *ngTemplateOutlet=\"customer; context: qb.context({$implicit:rule})\"></ng-container>\n  </ng-container>\n\n  <div [ngClass]=\"qb.getClassNames('inputControlSize')\">\n    <ng-container\n      *ngTemplateOutlet=\"qb.templates[qb.templateNames.input]; context: qb.context({$implicit:rule})\"></ng-container>\n  </div>\n\n</div>\n\n<ng-template #defaultRemoveButton>\n  <div [ngClass]=\"qb.getClassNames('removeButtonSize', 'rightAlign')\">\n    <button [ngClass]=\"qb.getClassNames('button', 'removeButton')\" (click)=\"qb.removeRule(rule)\"\n            [disabled]=qb.disabled>\n      <i [ngClass]=\"qb.getClassNames('removeIcon')\"></i>\n    </button>\n  </div>\n</ng-template>\n\n<ng-template #defaultEntity>\n  <div [ngClass]=\"qb.getClassNames('entityControlSize')\">\n    <select [ngClass]=\"qb.getClassNames('entityControl')\" [(ngModel)]=\"rule.entity\"\n            (change)=\"qb.changeEntity($event, rule)\" [disabled]=\"qb.disabled\">\n      <option *ngFor=\"let entity of qb.config.entities\" [ngValue]=\"entity.key\">\n        {{entity.label}}\n      </option>\n    </select>\n  </div>\n</ng-template>\n\n<ng-template #defaultField>\n  <div [ngClass]=\"qb.getClassNames('fieldControlSize')\">\n    <select [ngClass]=\"qb.getClassNames('fieldControl')\" [(ngModel)]=\"rule.field\"\n            (change)=\"qb.changeField($event, rule)\" [disabled]=\"qb.disabled\">\n      <option *ngFor=\"let field of qb.getFields(rule.entity)\" [value]=\"field.key\">\n        {{field.label}}\n      </option>\n    </select>\n  </div>\n</ng-template>\n\n<ng-template #defaultOperator>\n  <div [ngClass]=\"qb.getClassNames('operatorControlSize')\">\n    <select [ngClass]=\"qb.getClassNames('operatorControl')\" [(ngModel)]=\"rule.operator\"\n            [disabled]=\"qb.disabled\">\n      <option *ngFor=\"let operator of qb.getOperators(rule.field)\" [value]=\"operator.value\">\n        {{operator.label}}\n      </option>\n    </select>\n  </div>\n</ng-template>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [".rule:hover{background-color:green}"]
                }] }
    ];
    /** @nocollapse */
    QueryBuilderRuleComponent.ctorParameters = function () { return [
        { type: QueryBuilderComponent }
    ]; };
    QueryBuilderRuleComponent.propDecorators = {
        ruleIndex: [{ type: Input }],
        ruleChange: [{ type: Output }],
        rule: [{ type: Input }]
    };
    return QueryBuilderRuleComponent;
}(BaseComponent));
export { QueryBuilderRuleComponent };
if (false) {
    /** @type {?} */
    QueryBuilderRuleComponent.prototype.ruleIndex;
    /** @type {?} */
    QueryBuilderRuleComponent.prototype.ruleChange;
    /**
     * @type {?}
     * @private
     */
    QueryBuilderRuleComponent.prototype._rule;
    /** @type {?} */
    QueryBuilderRuleComponent.prototype.qb;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL2NvcmUvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9xdWVyeS1idWlsZGVyL3J1bGUvY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUU5RixPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sMEJBQTBCLENBQUM7QUFDdkQsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sY0FBYyxDQUFDO0FBR25EO0lBTStDLHFEQUFhO0lBTTFELG1DQUFtQixFQUF5QjtRQUE1QyxZQUNFLGlCQUFPLFNBQ1I7UUFGa0IsUUFBRSxHQUFGLEVBQUUsQ0FBdUI7UUFGbEMsZ0JBQVUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDOztJQUkxQyxDQUFDO0lBSUQsc0JBQ0ksMkNBQUk7Ozs7UUFEUjtZQUVFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztRQUNwQixDQUFDOzs7OztRQUVELFVBQVMsSUFBSTtZQUNYLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1lBQ2xCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNuQyxDQUFDOzs7T0FMQTs7Z0JBckJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsdUJBQXVCO29CQUNqQyxvaUdBQXVCO29CQUV2QixlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTs7aUJBQ2hEOzs7O2dCQVJPLHFCQUFxQjs7OzRCQVcxQixLQUFLOzZCQUVMLE1BQU07dUJBUU4sS0FBSzs7SUFTUixnQ0FBQztDQUFBLEFBM0JELENBTStDLGFBQWEsR0FxQjNEO1NBckJZLHlCQUF5Qjs7O0lBRXBDLDhDQUEyQjs7SUFFM0IsK0NBQTBDOzs7OztJQU0xQywwQ0FBeUI7O0lBSmIsdUNBQWdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtRdWVyeVJ1bGV9IGZyb20gJ0Blci90eXBlcyc7XG5pbXBvcnQge0Jhc2VDb21wb25lbnR9IGZyb20gJy4uLy4uLy4uL2Jhc2VzL2NvbXBvbmVudCc7XG5pbXBvcnQge1F1ZXJ5QnVpbGRlckNvbXBvbmVudH0gZnJvbSAnLi4vY29tcG9uZW50JztcblxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdlci1xdWVyeS1idWlsZGVyLXJ1bGUnLFxuICB0ZW1wbGF0ZVVybDogJ3RwbC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJ3N0eWxlcy5zY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFF1ZXJ5QnVpbGRlclJ1bGVDb21wb25lbnQgZXh0ZW5kcyBCYXNlQ29tcG9uZW50IHtcblxuICBASW5wdXQoKSBydWxlSW5kZXg6IG51bWJlcjtcblxuICBAT3V0cHV0KCkgcnVsZUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgcWI6IFF1ZXJ5QnVpbGRlckNvbXBvbmVudCkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBwcml2YXRlIF9ydWxlOiBRdWVyeVJ1bGU7XG5cbiAgQElucHV0KClcbiAgZ2V0IHJ1bGUoKTogUXVlcnlSdWxlIHtcbiAgICByZXR1cm4gdGhpcy5fcnVsZTtcbiAgfVxuXG4gIHNldCBydWxlKHJ1bGUpIHtcbiAgICB0aGlzLl9ydWxlID0gcnVsZTtcbiAgICB0aGlzLnJ1bGVDaGFuZ2UuZW1pdCh0aGlzLl9ydWxlKTtcbiAgfVxufVxuIl19