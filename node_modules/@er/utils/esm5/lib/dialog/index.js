/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { StateNames } from '@er/types';
import { filter, map } from 'rxjs/operators';
import { StatesUtils } from '../states';
var DialogUtils = /** @class */ (function () {
    function DialogUtils() {
    }
    /**
     * @param {?=} header
     * @param {?=} content
     * @param {?=} options
     * @return {?}
     */
    DialogUtils.confirm = /**
     * @param {?=} header
     * @param {?=} content
     * @param {?=} options
     * @return {?}
     */
    function (header, content, options) {
        /** @type {?} */
        var state = StatesUtils.create(StateNames.confirm, tslib_1.__assign({ header: header,
            content: content }, options, { open: true }));
        return state.pipe(filter(function (stateValue) { return stateValue && !stateValue.open; }), map(function (_a) {
            var accept = _a.accept;
            return accept === true;
        }));
    };
    /**
     * @param {?} header
     * @param {?} content
     * @param {?=} options
     * @return {?}
     */
    DialogUtils.error = /**
     * @param {?} header
     * @param {?} content
     * @param {?=} options
     * @return {?}
     */
    function (header, content, options) {
        /** @type {?} */
        var html = "\n                 <div class=\"d-flex align-items-center\">\n                  <i class=\"fa fa-exclamation-circle fa-2x text-danger mr-2\"></i>\n                  <span style=\"font-size: 1.2em\">" + content + "</span>\n                </div>                 \n    ";
        return DialogUtils.popup(header, html, tslib_1.__assign({}, options || {}, { maximizable: false }));
    };
    /**
     * @param {?} header
     * @param {?} content
     * @param {?=} options
     * @return {?}
     */
    DialogUtils.info = /**
     * @param {?} header
     * @param {?} content
     * @param {?=} options
     * @return {?}
     */
    function (header, content, options) {
        /** @type {?} */
        var html = "\n                 <div class=\"d-flex align-items-center\">\n                  <i class=\"fa fa-info-circle fa-2x text-primary mr-2\"></i>\n                  <span style=\"font-size: 1.2em\">" + content + "</span>\n                </div>                 \n    ";
        return DialogUtils.popup(header, html, tslib_1.__assign({}, options || {}, { maximizable: false, minWidth: 200, closeLabel: '确定' }));
    };
    /**
     * @private
     * @param {?=} header
     * @param {?=} content
     * @param {?=} options
     * @return {?}
     */
    DialogUtils.popup = /**
     * @private
     * @param {?=} header
     * @param {?=} content
     * @param {?=} options
     * @return {?}
     */
    function (header, content, options) {
        /** @type {?} */
        var state = StatesUtils.create(StateNames.popup, tslib_1.__assign({ header: header,
            content: content }, options, { maximizable: false, visible: true }));
        return state;
    };
    return DialogUtils;
}());
export { DialogUtils };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZXIvdXRpbHMvIiwic291cmNlcyI6WyJsaWIvZGlhbG9nL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFrRCxVQUFVLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFFdEYsT0FBTyxFQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUMzQyxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBRXRDO0lBQUE7SUFxREEsQ0FBQzs7Ozs7OztJQW5EUSxtQkFBTzs7Ozs7O0lBQWQsVUFBZSxNQUFlLEVBQUUsT0FBZ0IsRUFBRSxPQUEyQjs7WUFDckUsS0FBSyxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLE9BQU8scUJBQ2pELE1BQU0sUUFBQTtZQUNOLE9BQU8sU0FBQSxJQUNKLE9BQU8sSUFDVixJQUFJLEVBQUUsSUFBSSxJQUNWO1FBQ0YsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUNmLE1BQU0sQ0FBQyxVQUFBLFVBQVUsSUFBSSxPQUFBLFVBQVUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQTlCLENBQThCLENBQUMsRUFDcEQsR0FBRyxDQUFDLFVBQUMsRUFBUTtnQkFBUCxrQkFBTTtZQUFNLE9BQUEsTUFBTSxLQUFLLElBQUk7UUFBZixDQUFlLENBQUMsQ0FDbkMsQ0FBQztJQUNKLENBQUM7Ozs7Ozs7SUFFTSxpQkFBSzs7Ozs7O0lBQVosVUFBYSxNQUFNLEVBQUUsT0FBTyxFQUFFLE9BQXlCOztZQUMvQyxJQUFJLEdBQUcsMk1BR2tDLE9BQU8sMkRBRXJEO1FBQ0QsT0FBTyxXQUFXLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxJQUFJLHVCQUNoQyxPQUFPLElBQUksRUFBRSxJQUNoQixXQUFXLEVBQUUsS0FBSyxJQUNsQixDQUFDO0lBQ0wsQ0FBQzs7Ozs7OztJQUVNLGdCQUFJOzs7Ozs7SUFBWCxVQUFZLE1BQU0sRUFBRSxPQUFPLEVBQUUsT0FBeUI7O1lBQzlDLElBQUksR0FBRyxxTUFHa0MsT0FBTywyREFFckQ7UUFDRCxPQUFPLFdBQVcsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLElBQUksdUJBQ2hDLE9BQU8sSUFBSSxFQUFFLElBQ2hCLFdBQVcsRUFBRSxLQUFLLEVBQ2xCLFFBQVEsRUFBRSxHQUFHLEVBQ2IsVUFBVSxFQUFFLElBQUksSUFDaEIsQ0FBQztJQUNMLENBQUM7Ozs7Ozs7O0lBRWMsaUJBQUs7Ozs7Ozs7SUFBcEIsVUFBcUIsTUFBZSxFQUFFLE9BQXFCLEVBQUUsT0FBeUI7O1lBQzlFLEtBQUssR0FBRyxXQUFXLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxLQUFLLHFCQUMvQyxNQUFNLFFBQUE7WUFDTixPQUFPLFNBQUEsSUFDSixPQUFPLElBQ1YsV0FBVyxFQUFFLEtBQUssRUFDbEIsT0FBTyxFQUFFLElBQUksSUFDYjtRQUNGLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUNILGtCQUFDO0FBQUQsQ0FBQyxBQXJERCxJQXFEQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29uZmlybURpYWxvZ1Byb3AsIER5bmFDb250ZW50LCBQb3B1cERpYWxvZ1Byb3AsIFN0YXRlTmFtZXN9IGZyb20gJ0Blci90eXBlcyc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtmaWx0ZXIsIG1hcH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHtTdGF0ZXNVdGlsc30gZnJvbSAnLi4vc3RhdGVzJztcblxuZXhwb3J0IGNsYXNzIERpYWxvZ1V0aWxzIHtcblxuICBzdGF0aWMgY29uZmlybShoZWFkZXI/OiBzdHJpbmcsIGNvbnRlbnQ/OiBzdHJpbmcsIG9wdGlvbnM/OiBDb25maXJtRGlhbG9nUHJvcCk6IE9ic2VydmFibGU8Ym9vbGVhbj4ge1xuICAgIGNvbnN0IHN0YXRlID0gU3RhdGVzVXRpbHMuY3JlYXRlKFN0YXRlTmFtZXMuY29uZmlybSwge1xuICAgICAgaGVhZGVyLFxuICAgICAgY29udGVudCxcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICBvcGVuOiB0cnVlXG4gICAgfSk7XG4gICAgcmV0dXJuIHN0YXRlLnBpcGUoXG4gICAgICBmaWx0ZXIoc3RhdGVWYWx1ZSA9PiBzdGF0ZVZhbHVlICYmICFzdGF0ZVZhbHVlLm9wZW4pLFxuICAgICAgbWFwKCh7YWNjZXB0fSkgPT4gYWNjZXB0ID09PSB0cnVlKVxuICAgICk7XG4gIH1cblxuICBzdGF0aWMgZXJyb3IoaGVhZGVyLCBjb250ZW50LCBvcHRpb25zPzogUG9wdXBEaWFsb2dQcm9wKSB7XG4gICAgY29uc3QgaHRtbCA9IGBcbiAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmEgZmEtZXhjbGFtYXRpb24tY2lyY2xlIGZhLTJ4IHRleHQtZGFuZ2VyIG1yLTJcIj48L2k+XG4gICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT1cImZvbnQtc2l6ZTogMS4yZW1cIj4ke2NvbnRlbnR9PC9zcGFuPlxuICAgICAgICAgICAgICAgIDwvZGl2PiAgICAgICAgICAgICAgICAgXG4gICAgYDtcbiAgICByZXR1cm4gRGlhbG9nVXRpbHMucG9wdXAoaGVhZGVyLCBodG1sLCB7XG4gICAgICAuLi5vcHRpb25zIHx8IHt9LFxuICAgICAgbWF4aW1pemFibGU6IGZhbHNlXG4gICAgfSk7XG4gIH1cblxuICBzdGF0aWMgaW5mbyhoZWFkZXIsIGNvbnRlbnQsIG9wdGlvbnM/OiBQb3B1cERpYWxvZ1Byb3ApIHtcbiAgICBjb25zdCBodG1sID0gYFxuICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgPGkgY2xhc3M9XCJmYSBmYS1pbmZvLWNpcmNsZSBmYS0yeCB0ZXh0LXByaW1hcnkgbXItMlwiPjwvaT5cbiAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPVwiZm9udC1zaXplOiAxLjJlbVwiPiR7Y29udGVudH08L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICBcbiAgICBgO1xuICAgIHJldHVybiBEaWFsb2dVdGlscy5wb3B1cChoZWFkZXIsIGh0bWwsIHtcbiAgICAgIC4uLm9wdGlvbnMgfHwge30sXG4gICAgICBtYXhpbWl6YWJsZTogZmFsc2UsXG4gICAgICBtaW5XaWR0aDogMjAwLFxuICAgICAgY2xvc2VMYWJlbDogJ+ehruWumidcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgc3RhdGljIHBvcHVwKGhlYWRlcj86IHN0cmluZywgY29udGVudD86IER5bmFDb250ZW50LCBvcHRpb25zPzogUG9wdXBEaWFsb2dQcm9wKTogT2JzZXJ2YWJsZTxhbnk+IHtcbiAgICBjb25zdCBzdGF0ZSA9IFN0YXRlc1V0aWxzLmNyZWF0ZShTdGF0ZU5hbWVzLnBvcHVwLCB7XG4gICAgICBoZWFkZXIsXG4gICAgICBjb250ZW50LFxuICAgICAgLi4ub3B0aW9ucyxcbiAgICAgIG1heGltaXphYmxlOiBmYWxzZSxcbiAgICAgIHZpc2libGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gc3RhdGU7XG4gIH1cbn1cbiJdfQ==