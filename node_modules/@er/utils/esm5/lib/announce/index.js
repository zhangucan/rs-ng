/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { NotifyLevel, NotifyType, StateNames } from '@er/types';
import { CommonsUtils } from '../comm';
import { StatesUtils } from '../states';
var AnnounceUtils = /** @class */ (function () {
    function AnnounceUtils() {
    }
    /**
     * @param {?} options
     * @return {?}
     */
    AnnounceUtils.info = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        /** @type {?} */
        var notify = CommonsUtils.getObjWhenStr(options, 'message');
        StatesUtils.create(StateNames.notify, tslib_1.__assign({}, notify, { type: NotifyType.ANNOUNCE }));
    };
    /**
     * @param {?} options
     * @return {?}
     */
    AnnounceUtils.error = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        /** @type {?} */
        var notify = CommonsUtils.getObjWhenStr(options, 'message');
        StatesUtils.create(StateNames.notify, (/** @type {?} */ (tslib_1.__assign({}, notify, { level: NotifyLevel.ERROR, type: NotifyType.ANNOUNCE }))));
    };
    /**
     * @param {?} options
     * @return {?}
     */
    AnnounceUtils.success = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        /** @type {?} */
        var notify = CommonsUtils.getObjWhenStr(options, 'message');
        StatesUtils.create(StateNames.notify, (/** @type {?} */ (tslib_1.__assign({}, notify, { level: NotifyLevel.SUCCESS, type: NotifyType.ANNOUNCE }))));
    };
    /**
     * @param {?} options
     * @return {?}
     */
    AnnounceUtils.warn = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        /** @type {?} */
        var notify = CommonsUtils.getObjWhenStr(options, 'message');
        StatesUtils.create(StateNames.notify, (/** @type {?} */ (tslib_1.__assign({}, notify, { level: NotifyLevel.WARN, type: NotifyType.ANNOUNCE }))));
    };
    return AnnounceUtils;
}());
export { AnnounceUtils };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZXIvdXRpbHMvIiwic291cmNlcyI6WyJsaWIvYW5ub3VuY2UvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsV0FBVyxFQUFjLFVBQVUsRUFBRSxVQUFVLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDMUUsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLFNBQVMsQ0FBQztBQUNyQyxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBRXRDO0lBQUE7SUFxQ0EsQ0FBQzs7Ozs7SUFuQ1Esa0JBQUk7Ozs7SUFBWCxVQUFZLE9BQTRCOztZQUNoQyxNQUFNLEdBQUcsWUFBWSxDQUFDLGFBQWEsQ0FBYSxPQUFPLEVBQUUsU0FBUyxDQUFDO1FBQ3pFLFdBQVcsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sdUJBQy9CLE1BQU0sSUFDVCxJQUFJLEVBQUUsVUFBVSxDQUFDLFFBQVEsSUFDekIsQ0FBQztJQUNMLENBQUM7Ozs7O0lBRU0sbUJBQUs7Ozs7SUFBWixVQUFhLE9BQTRCOztZQUNqQyxNQUFNLEdBQUcsWUFBWSxDQUFDLGFBQWEsQ0FBYSxPQUFPLEVBQUUsU0FBUyxDQUFDO1FBQ3pFLFdBQVcsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSx3Q0FDakMsTUFBTSxJQUNULEtBQUssRUFBRSxXQUFXLENBQUMsS0FBSyxFQUN4QixJQUFJLEVBQUUsVUFBVSxDQUFDLFFBQVEsS0FDMUIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7SUFFTSxxQkFBTzs7OztJQUFkLFVBQWUsT0FBNEI7O1lBQ25DLE1BQU0sR0FBRyxZQUFZLENBQUMsYUFBYSxDQUFhLE9BQU8sRUFBRSxTQUFTLENBQUM7UUFDekUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLHdDQUNqQyxNQUFNLElBQ1QsS0FBSyxFQUFFLFdBQVcsQ0FBQyxPQUFPLEVBQzFCLElBQUksRUFBRSxVQUFVLENBQUMsUUFBUSxLQUMxQixDQUFDLENBQUM7SUFDTCxDQUFDOzs7OztJQUVNLGtCQUFJOzs7O0lBQVgsVUFBWSxPQUE0Qjs7WUFDaEMsTUFBTSxHQUFHLFlBQVksQ0FBQyxhQUFhLENBQWEsT0FBTyxFQUFFLFNBQVMsQ0FBQztRQUN6RSxXQUFXLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsd0NBQ2pDLE1BQU0sSUFDVCxLQUFLLEVBQUUsV0FBVyxDQUFDLElBQUksRUFDdkIsSUFBSSxFQUFFLFVBQVUsQ0FBQyxRQUFRLEtBQzFCLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFSCxvQkFBQztBQUFELENBQUMsQUFyQ0QsSUFxQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge05vdGlmeUxldmVsLCBOb3RpZnlQcm9wLCBOb3RpZnlUeXBlLCBTdGF0ZU5hbWVzfSBmcm9tICdAZXIvdHlwZXMnO1xuaW1wb3J0IHtDb21tb25zVXRpbHN9IGZyb20gJy4uL2NvbW0nO1xuaW1wb3J0IHtTdGF0ZXNVdGlsc30gZnJvbSAnLi4vc3RhdGVzJztcblxuZXhwb3J0IGNsYXNzIEFubm91bmNlVXRpbHMge1xuXG4gIHN0YXRpYyBpbmZvKG9wdGlvbnM6IHN0cmluZyB8IE5vdGlmeVByb3ApIHtcbiAgICBjb25zdCBub3RpZnkgPSBDb21tb25zVXRpbHMuZ2V0T2JqV2hlblN0cjxOb3RpZnlQcm9wPihvcHRpb25zLCAnbWVzc2FnZScpO1xuICAgIFN0YXRlc1V0aWxzLmNyZWF0ZShTdGF0ZU5hbWVzLm5vdGlmeSwge1xuICAgICAgLi4ubm90aWZ5LFxuICAgICAgdHlwZTogTm90aWZ5VHlwZS5BTk5PVU5DRVxuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGVycm9yKG9wdGlvbnM6IHN0cmluZyB8IE5vdGlmeVByb3ApIHtcbiAgICBjb25zdCBub3RpZnkgPSBDb21tb25zVXRpbHMuZ2V0T2JqV2hlblN0cjxOb3RpZnlQcm9wPihvcHRpb25zLCAnbWVzc2FnZScpO1xuICAgIFN0YXRlc1V0aWxzLmNyZWF0ZShTdGF0ZU5hbWVzLm5vdGlmeSwgPE5vdGlmeVByb3A+e1xuICAgICAgLi4ubm90aWZ5LFxuICAgICAgbGV2ZWw6IE5vdGlmeUxldmVsLkVSUk9SLFxuICAgICAgdHlwZTogTm90aWZ5VHlwZS5BTk5PVU5DRVxuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIHN1Y2Nlc3Mob3B0aW9uczogc3RyaW5nIHwgTm90aWZ5UHJvcCkge1xuICAgIGNvbnN0IG5vdGlmeSA9IENvbW1vbnNVdGlscy5nZXRPYmpXaGVuU3RyPE5vdGlmeVByb3A+KG9wdGlvbnMsICdtZXNzYWdlJyk7XG4gICAgU3RhdGVzVXRpbHMuY3JlYXRlKFN0YXRlTmFtZXMubm90aWZ5LCA8Tm90aWZ5UHJvcD57XG4gICAgICAuLi5ub3RpZnksXG4gICAgICBsZXZlbDogTm90aWZ5TGV2ZWwuU1VDQ0VTUyxcbiAgICAgIHR5cGU6IE5vdGlmeVR5cGUuQU5OT1VOQ0VcbiAgICB9KTtcbiAgfVxuXG4gIHN0YXRpYyB3YXJuKG9wdGlvbnM6IHN0cmluZyB8IE5vdGlmeVByb3ApIHtcbiAgICBjb25zdCBub3RpZnkgPSBDb21tb25zVXRpbHMuZ2V0T2JqV2hlblN0cjxOb3RpZnlQcm9wPihvcHRpb25zLCAnbWVzc2FnZScpO1xuICAgIFN0YXRlc1V0aWxzLmNyZWF0ZShTdGF0ZU5hbWVzLm5vdGlmeSwgPE5vdGlmeVByb3A+e1xuICAgICAgLi4ubm90aWZ5LFxuICAgICAgbGV2ZWw6IE5vdGlmeUxldmVsLldBUk4sXG4gICAgICB0eXBlOiBOb3RpZnlUeXBlLkFOTk9VTkNFXG4gICAgfSk7XG4gIH1cblxufVxuIl19