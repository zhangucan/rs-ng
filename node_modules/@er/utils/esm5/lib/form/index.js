/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { FormGroup } from '@angular/forms';
var FormUtils = /** @class */ (function () {
    function FormUtils() {
    }
    /**
     * @param {?} form
     * @param {...?} path
     * @return {?}
     */
    FormUtils.getFormControl = /**
     * @param {?} form
     * @param {...?} path
     * @return {?}
     */
    function (form) {
        var path = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            path[_i - 1] = arguments[_i];
        }
        /** @type {?} */
        var _form = form;
        /** @type {?} */
        var control = null;
        if (path.length > 0) {
            path.forEach(function (p) {
                control = _form.controls[p];
                if (control instanceof FormGroup) {
                    _form = control;
                }
            });
        }
        return (/** @type {?} */ (control));
    };
    /**
     * @param {?} control
     * @param {?} value
     * @return {?}
     */
    FormUtils.setValue = /**
     * @param {?} control
     * @param {?} value
     * @return {?}
     */
    function (control, value) {
        control.setValue(value, {
            emitEvent: false,
            emitModelToViewChange: false,
            emitViewToModelChange: false
        });
    };
    return FormUtils;
}());
export { FormUtils };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZXIvdXRpbHMvIiwic291cmNlcyI6WyJsaWIvZm9ybS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUErQixTQUFTLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUV2RTtJQUFBO0lBdUJBLENBQUM7Ozs7OztJQXJCUSx3QkFBYzs7Ozs7SUFBckIsVUFBc0IsSUFBZTtRQUFFLGNBQWlCO2FBQWpCLFVBQWlCLEVBQWpCLHFCQUFpQixFQUFqQixJQUFpQjtZQUFqQiw2QkFBaUI7OztZQUNsRCxLQUFLLEdBQUcsSUFBSTs7WUFDWixPQUFPLEdBQW9CLElBQUk7UUFDbkMsSUFBSSxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNuQixJQUFJLENBQUMsT0FBTyxDQUFDLFVBQUEsQ0FBQztnQkFDWixPQUFPLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDNUIsSUFBSSxPQUFPLFlBQVksU0FBUyxFQUFFO29CQUNoQyxLQUFLLEdBQUcsT0FBTyxDQUFDO2lCQUNqQjtZQUNILENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFDRCxPQUFPLG1CQUFhLE9BQU8sRUFBQSxDQUFDO0lBQzlCLENBQUM7Ozs7OztJQUVNLGtCQUFROzs7OztJQUFmLFVBQWdCLE9BQXdCLEVBQUUsS0FBVTtRQUNsRCxPQUFPLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRTtZQUN0QixTQUFTLEVBQUUsS0FBSztZQUNoQixxQkFBcUIsRUFBRSxLQUFLO1lBQzVCLHFCQUFxQixFQUFFLEtBQUs7U0FDN0IsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUNILGdCQUFDO0FBQUQsQ0FBQyxBQXZCRCxJQXVCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QWJzdHJhY3RDb250cm9sLCBGb3JtQ29udHJvbCwgRm9ybUdyb3VwfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbmV4cG9ydCBjbGFzcyBGb3JtVXRpbHMge1xuXG4gIHN0YXRpYyBnZXRGb3JtQ29udHJvbChmb3JtOiBGb3JtR3JvdXAsIC4uLnBhdGg6IHN0cmluZ1tdKTogRm9ybUNvbnRyb2wge1xuICAgIGxldCBfZm9ybSA9IGZvcm07XG4gICAgbGV0IGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCA9IG51bGw7XG4gICAgaWYgKHBhdGgubGVuZ3RoID4gMCkge1xuICAgICAgcGF0aC5mb3JFYWNoKHAgPT4ge1xuICAgICAgICBjb250cm9sID0gX2Zvcm0uY29udHJvbHNbcF07XG4gICAgICAgIGlmIChjb250cm9sIGluc3RhbmNlb2YgRm9ybUdyb3VwKSB7XG4gICAgICAgICAgX2Zvcm0gPSBjb250cm9sO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIDxGb3JtQ29udHJvbD5jb250cm9sO1xuICB9XG5cbiAgc3RhdGljIHNldFZhbHVlKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCwgdmFsdWU6IGFueSkge1xuICAgIGNvbnRyb2wuc2V0VmFsdWUodmFsdWUsIHtcbiAgICAgIGVtaXRFdmVudDogZmFsc2UsXG4gICAgICBlbWl0TW9kZWxUb1ZpZXdDaGFuZ2U6IGZhbHNlLFxuICAgICAgZW1pdFZpZXdUb01vZGVsQ2hhbmdlOiBmYWxzZVxuICAgIH0pO1xuICB9XG59Il19