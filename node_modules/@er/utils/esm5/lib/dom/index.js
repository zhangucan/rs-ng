/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var DomUtils = /** @class */ (function () {
    function DomUtils() {
        this.calculatedScrollbarWidth = null;
    }
    /**
     * @param {?} element
     * @param {?} className
     * @return {?}
     */
    DomUtils.addClass = /**
     * @param {?} element
     * @param {?} className
     * @return {?}
     */
    function (element, className) {
        if (element.classList) {
            element.classList.add(className);
        }
        else {
            element.className += ' ' + className;
        }
    };
    /**
     * @param {?} element
     * @param {?} className
     * @return {?}
     */
    DomUtils.addClasses = /**
     * @param {?} element
     * @param {?} className
     * @return {?}
     */
    function (element, className) {
        /** @type {?} */
        var styles = className.split(' ');
        for (var i = 0; i < styles.length; i++) {
            DomUtils.addClass(element, styles[i]);
        }
    };
    /**
     * @param {?} element
     * @param {?} className
     * @return {?}
     */
    DomUtils.removeClass = /**
     * @param {?} element
     * @param {?} className
     * @return {?}
     */
    function (element, className) {
        if (element.classList) {
            element.classList.remove(className);
        }
        else {
            element.className = element.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
        }
    };
    /**
     * @param {?} element
     * @param {?} className
     * @return {?}
     */
    DomUtils.hasClass = /**
     * @param {?} element
     * @param {?} className
     * @return {?}
     */
    function (element, className) {
        if (element.classList) {
            return element.classList.contains(className);
        }
        else {
            return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);
        }
    };
    /**
     * @param {?} element
     * @return {?}
     */
    DomUtils.siblings = /**
     * @param {?} element
     * @return {?}
     */
    function (element) {
        /** @type {?} */
        var children = element.parentNode.children.filter(function (child) { return child !== element; });
        return children;
    };
    /**
     * @param {?} element
     * @param {?} selector
     * @return {?}
     */
    DomUtils.find = /**
     * @param {?} element
     * @param {?} selector
     * @return {?}
     */
    function (element, selector) {
        return element.querySelectorAll(selector);
    };
    /**
     * @param {?} element
     * @param {?} selector
     * @return {?}
     */
    DomUtils.findSingle = /**
     * @param {?} element
     * @param {?} selector
     * @return {?}
     */
    function (element, selector) {
        return element.querySelector(selector);
    };
    /**
     * @param {?} element
     * @return {?}
     */
    DomUtils.index = /**
     * @param {?} element
     * @return {?}
     */
    function (element) {
        /** @type {?} */
        var children = element.parentNode.childNodes;
        /** @type {?} */
        var num = 0;
        for (var i = 0; i < children.length; i++) {
            if (children[i] == element)
                return num;
            if (children[i].nodeType == 1)
                num++;
        }
        return -1;
    };
    /**
     * @param {?} element
     * @param {?} target
     * @return {?}
     */
    DomUtils.relativePosition = /**
     * @param {?} element
     * @param {?} target
     * @return {?}
     */
    function (element, target) {
        /** @type {?} */
        var elementDimensions = element.offsetParent ? {
            width: element.offsetWidth,
            height: element.offsetHeight
        } : this.getHiddenElementDimensions(element);
        /** @type {?} */
        var targetHeight = target.offsetHeight;
        /** @type {?} */
        var targetWidth = target.offsetWidth;
        /** @type {?} */
        var targetOffset = target.getBoundingClientRect();
        /** @type {?} */
        var windowScrollTop = this.getWindowScrollTop();
        /** @type {?} */
        var viewport = this.getViewport();
        /** @type {?} */
        var top;
        /** @type {?} */
        var left;
        if ((targetOffset.top + targetHeight + elementDimensions.height) > viewport.height) {
            top = -1 * (elementDimensions.height);
            if (targetOffset.top + top < 0) {
                top = 0;
            }
        }
        else {
            top = targetHeight;
        }
        if ((targetOffset.left + elementDimensions.width) > viewport.width) {
            left = targetWidth - elementDimensions.width;
        }
        else {
            left = 0;
        }
        element.style.top = top + 'px';
        element.style.left = left + 'px';
    };
    /**
     * @param {?} element
     * @param {?} target
     * @return {?}
     */
    DomUtils.absolutePosition = /**
     * @param {?} element
     * @param {?} target
     * @return {?}
     */
    function (element, target) {
        /** @type {?} */
        var elementDimensions = element.offsetParent ? {
            width: element.offsetWidth,
            height: element.offsetHeight
        } : this.getHiddenElementDimensions(element);
        /** @type {?} */
        var elementOuterHeight = elementDimensions.height;
        /** @type {?} */
        var elementOuterWidth = elementDimensions.width;
        /** @type {?} */
        var targetOuterHeight = target.offsetHeight;
        /** @type {?} */
        var targetOuterWidth = target.offsetWidth;
        /** @type {?} */
        var targetOffset = target.getBoundingClientRect();
        /** @type {?} */
        var windowScrollTop = this.getWindowScrollTop();
        /** @type {?} */
        var windowScrollLeft = this.getWindowScrollLeft();
        /** @type {?} */
        var viewport = this.getViewport();
        /** @type {?} */
        var top;
        /** @type {?} */
        var left;
        if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {
            top = targetOffset.top + windowScrollTop - elementOuterHeight;
            if (top < 0) {
                top = 0 + windowScrollTop;
            }
        }
        else {
            top = targetOuterHeight + targetOffset.top + windowScrollTop;
        }
        if (targetOffset.left + targetOuterWidth + elementOuterWidth > viewport.width) {
            left = targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth;
        }
        else {
            left = targetOffset.left + windowScrollLeft;
        }
        element.style.top = top + 'px';
        element.style.left = left + 'px';
    };
    /**
     * @param {?} element
     * @return {?}
     */
    DomUtils.getHiddenElementOuterHeight = /**
     * @param {?} element
     * @return {?}
     */
    function (element) {
        element.style.visibility = 'hidden';
        element.style.display = 'block';
        /** @type {?} */
        var elementHeight = element.offsetHeight;
        element.style.display = 'none';
        element.style.visibility = 'visible';
        return elementHeight;
    };
    /**
     * @param {?} element
     * @return {?}
     */
    DomUtils.getHiddenElementOuterWidth = /**
     * @param {?} element
     * @return {?}
     */
    function (element) {
        element.style.visibility = 'hidden';
        element.style.display = 'block';
        /** @type {?} */
        var elementWidth = element.offsetWidth;
        element.style.display = 'none';
        element.style.visibility = 'visible';
        return elementWidth;
    };
    /**
     * @param {?} element
     * @return {?}
     */
    DomUtils.getHiddenElementDimensions = /**
     * @param {?} element
     * @return {?}
     */
    function (element) {
        /** @type {?} */
        var dimensions = {};
        element.style.visibility = 'hidden';
        element.style.display = 'block';
        dimensions.width = element.offsetWidth;
        dimensions.height = element.offsetHeight;
        element.style.display = 'none';
        element.style.visibility = 'visible';
        return dimensions;
    };
    /**
     * @param {?} container
     * @param {?} item
     * @return {?}
     */
    DomUtils.scrollInView = /**
     * @param {?} container
     * @param {?} item
     * @return {?}
     */
    function (container, item) {
        /** @type {?} */
        var borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');
        /** @type {?} */
        var borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;
        /** @type {?} */
        var paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');
        /** @type {?} */
        var paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;
        /** @type {?} */
        var containerRect = container.getBoundingClientRect();
        /** @type {?} */
        var itemRect = item.getBoundingClientRect();
        /** @type {?} */
        var offset = (itemRect.top + document.body.scrollTop) - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;
        /** @type {?} */
        var scroll = container.scrollTop;
        /** @type {?} */
        var elementHeight = container.clientHeight;
        /** @type {?} */
        var itemHeight = this.getOuterHeight(item);
        if (offset < 0) {
            container.scrollTop = scroll + offset;
        }
        else if ((offset + itemHeight) > elementHeight) {
            container.scrollTop = scroll + offset - elementHeight + itemHeight;
        }
    };
    /**
     * @param {?} element
     * @param {?} duration
     * @return {?}
     */
    DomUtils.fadeIn = /**
     * @param {?} element
     * @param {?} duration
     * @return {?}
     */
    function (element, duration) {
        element.style.opacity = 0;
        /** @type {?} */
        var last = +new Date();
        /** @type {?} */
        var opacity = 0;
        /** @type {?} */
        var tick = function () {
            opacity = +element.style.opacity.replace(',', '.') + (new Date().getTime() - last) / duration;
            element.style.opacity = opacity;
            last = +new Date();
            if (+opacity < 1) {
                (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);
            }
        };
        tick();
    };
    /**
     * @param {?} element
     * @param {?} ms
     * @return {?}
     */
    DomUtils.fadeOut = /**
     * @param {?} element
     * @param {?} ms
     * @return {?}
     */
    function (element, ms) {
        /** @type {?} */
        var opacity = 1;
        /** @type {?} */
        var interval = 50;
        /** @type {?} */
        var duration = ms;
        /** @type {?} */
        var gap = interval / duration;
        /**
         * @return {?}
         */
        function intervalCallback() {
            opacity = opacity - gap;
            if (opacity <= 0) {
                opacity = 0;
                clearInterval(fading);
            }
            element.style.opacity = opacity;
        }
        /** @type {?} */
        var fading = setInterval(intervalCallback, interval);
    };
    /**
     * @return {?}
     */
    DomUtils.getWindowScrollTop = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var doc = document.documentElement;
        return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);
    };
    /**
     * @return {?}
     */
    DomUtils.getWindowScrollLeft = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var doc = document.documentElement;
        return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);
    };
    /**
     * @param {?} element
     * @param {?} selector
     * @return {?}
     */
    DomUtils.matches = /**
     * @param {?} element
     * @param {?} selector
     * @return {?}
     */
    function (element, selector) {
        /** @type {?} */
        var p = Element.prototype;
        /** @type {?} */
        var f = p['matches'] || p.webkitMatchesSelector || function (s) {
            return [].indexOf.call(document.querySelectorAll(s), this) !== -1;
        };
        return f.call(element, selector);
    };
    /**
     * @param {?} el
     * @param {?=} margin
     * @return {?}
     */
    DomUtils.getOuterWidth = /**
     * @param {?} el
     * @param {?=} margin
     * @return {?}
     */
    function (el, margin) {
        /** @type {?} */
        var width = el.offsetWidth;
        if (margin) {
            /** @type {?} */
            var style = getComputedStyle(el);
            width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);
        }
        return width;
    };
    /**
     * @param {?} el
     * @return {?}
     */
    DomUtils.getHorizontalPadding = /**
     * @param {?} el
     * @return {?}
     */
    function (el) {
        /** @type {?} */
        var style = getComputedStyle(el);
        return parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);
    };
    /**
     * @param {?} el
     * @return {?}
     */
    DomUtils.getHorizontalMargin = /**
     * @param {?} el
     * @return {?}
     */
    function (el) {
        /** @type {?} */
        var style = getComputedStyle(el);
        return parseFloat(style.marginLeft) + parseFloat(style.marginRight);
    };
    /**
     * @param {?} el
     * @return {?}
     */
    DomUtils.innerWidth = /**
     * @param {?} el
     * @return {?}
     */
    function (el) {
        /** @type {?} */
        var width = el.offsetWidth;
        /** @type {?} */
        var style = getComputedStyle(el);
        width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);
        return width;
    };
    /**
     * @param {?} el
     * @return {?}
     */
    DomUtils.width = /**
     * @param {?} el
     * @return {?}
     */
    function (el) {
        /** @type {?} */
        var width = el.offsetWidth;
        /** @type {?} */
        var style = getComputedStyle(el);
        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);
        return width;
    };
    /**
     * @param {?} el
     * @return {?}
     */
    DomUtils.getInnerHeight = /**
     * @param {?} el
     * @return {?}
     */
    function (el) {
        /** @type {?} */
        var height = el.offsetHeight;
        /** @type {?} */
        var style = getComputedStyle(el);
        height += parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);
        return height;
    };
    /**
     * @param {?} el
     * @param {?=} margin
     * @return {?}
     */
    DomUtils.getOuterHeight = /**
     * @param {?} el
     * @param {?=} margin
     * @return {?}
     */
    function (el, margin) {
        /** @type {?} */
        var height = el.offsetHeight;
        if (margin) {
            /** @type {?} */
            var style = getComputedStyle(el);
            height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);
        }
        return height;
    };
    /**
     * @param {?} el
     * @return {?}
     */
    DomUtils.getHeight = /**
     * @param {?} el
     * @return {?}
     */
    function (el) {
        /** @type {?} */
        var height = el.offsetHeight;
        /** @type {?} */
        var style = getComputedStyle(el);
        height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);
        return height;
    };
    /**
     * @param {?} el
     * @return {?}
     */
    DomUtils.getWidth = /**
     * @param {?} el
     * @return {?}
     */
    function (el) {
        /** @type {?} */
        var width = el.offsetWidth;
        /** @type {?} */
        var style = getComputedStyle(el);
        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);
        return width;
    };
    /**
     * @return {?}
     */
    DomUtils.getViewport = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var win = window;
        /** @type {?} */
        var d = document;
        /** @type {?} */
        var e = d.documentElement;
        /** @type {?} */
        var g = d.getElementsByTagName('body')[0];
        /** @type {?} */
        var w = win.innerWidth || e.clientWidth || g.clientWidth;
        /** @type {?} */
        var h = win.innerHeight || e.clientHeight || g.clientHeight;
        return { width: w, height: h };
    };
    /**
     * @param {?} el
     * @return {?}
     */
    DomUtils.getOffset = /**
     * @param {?} el
     * @return {?}
     */
    function (el) {
        /** @type {?} */
        var rect = el.getBoundingClientRect();
        return {
            top: rect.top + document.body.scrollTop,
            left: rect.left + document.body.scrollLeft
        };
    };
    /**
     * @return {?}
     */
    DomUtils.getUserAgent = /**
     * @return {?}
     */
    function () {
        return navigator.userAgent;
    };
    /**
     * @return {?}
     */
    DomUtils.resolveUserAgent = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var ua = navigator.userAgent.toLowerCase();
        /** @type {?} */
        var match = /(chrome)[ \/]([\w.]+)/.exec(ua) ||
            /(webkit)[ \/]([\w.]+)/.exec(ua) ||
            /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) ||
            /(msie) ([\w.]+)/.exec(ua) ||
            ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) ||
            [];
        return {
            browser: match[1] || '',
            version: match[2] || '0'
        };
    };
    /**
     * @param {?} tag
     * @param {?=} classNames
     * @return {?}
     */
    DomUtils.createElement = /**
     * @param {?} tag
     * @param {?=} classNames
     * @return {?}
     */
    function (tag, classNames) {
        /** @type {?} */
        var element = document.createElement(tag);
        if (classNames) {
            DomUtils.addClasses(element, classNames);
        }
        return element;
    };
    /**
     * @param {?} element
     * @return {?}
     */
    DomUtils.remove = /**
     * @param {?} element
     * @return {?}
     */
    function (element) {
        element.parentElement.removeChild(element);
    };
    /**
     * @param {?} element
     * @return {?}
     */
    DomUtils.removeHost = /**
     * @param {?} element
     * @return {?}
     */
    function (element) {
        /** @type {?} */
        var nativeElement = element;
        /** @type {?} */
        var parentElement = nativeElement.parentElement;
        while (nativeElement.firstChild) {
            parentElement.insertBefore(nativeElement.firstChild, nativeElement);
        }
        parentElement.removeChild(nativeElement);
    };
    /**
     * @return {?}
     */
    DomUtils.prototype.isIE = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var ua = window.navigator.userAgent;
        /** @type {?} */
        var msie = ua.indexOf('MSIE ');
        if (msie > 0) {
            // IE 10 or older => return version number
            return true;
        }
        /** @type {?} */
        var trident = ua.indexOf('Trident/');
        if (trident > 0) {
            // IE 11 => return version number
            /** @type {?} */
            var rv = ua.indexOf('rv:');
            return true;
        }
        /** @type {?} */
        var edge = ua.indexOf('Edge/');
        if (edge > 0) {
            // Edge (IE 12+) => return version number
            return true;
        }
        // other browser
        return false;
    };
    /**
     * @param {?} element
     * @param {?} target
     * @return {?}
     */
    DomUtils.prototype.appendChild = /**
     * @param {?} element
     * @param {?} target
     * @return {?}
     */
    function (element, target) {
        if (this.isElement(target)) {
            target.appendChild(element);
        }
        else if (target.el && target.el.nativeElement) {
            target.el.nativeElement.appendChild(element);
        }
        else {
            throw new Error('Cannot append ' + target + ' to ' + element);
        }
    };
    /**
     * @param {?} element
     * @param {?} target
     * @return {?}
     */
    DomUtils.prototype.removeChild = /**
     * @param {?} element
     * @param {?} target
     * @return {?}
     */
    function (element, target) {
        if (this.isElement(target)) {
            target.removeChild(element);
        }
        else if (target.el && target.el.nativeElement) {
            target.el.nativeElement.removeChild(element);
        }
        else {
            throw new Error('Cannot remove ' + element + ' from ' + target);
        }
    };
    /**
     * @param {?} element
     * @param {?} methodName
     * @param {?=} args
     * @return {?}
     */
    DomUtils.prototype.invokeElementMethod = /**
     * @param {?} element
     * @param {?} methodName
     * @param {?=} args
     * @return {?}
     */
    function (element, methodName, args) {
        ((/** @type {?} */ (element)))[methodName].apply(element, args);
    };
    /**
     * @return {?}
     */
    DomUtils.prototype.clearSelection = /**
     * @return {?}
     */
    function () {
        if (window.getSelection) {
            if (window.getSelection().empty) {
                window.getSelection().empty();
            }
            else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {
                window.getSelection().removeAllRanges();
            }
        }
        else if (document['selection'] && document['selection'].empty) {
            try {
                document['selection'].empty();
            }
            catch (error) {
                //ignore IE bug
            }
        }
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    DomUtils.prototype.isElement = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        return (typeof HTMLElement === 'object' ? obj instanceof HTMLElement :
            obj && typeof obj === 'object' && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === 'string');
    };
    /**
     * @return {?}
     */
    DomUtils.prototype.getBrowser = /**
     * @return {?}
     */
    function () {
        if (!this.browser) {
            /** @type {?} */
            var matched = DomUtils.resolveUserAgent();
            this.browser = {};
            if (matched.browser) {
                this.browser[matched.browser] = true;
                this.browser['version'] = matched.version;
            }
            if (this.browser['chrome']) {
                this.browser['webkit'] = true;
            }
            else if (this.browser['webkit']) {
                this.browser['safari'] = true;
            }
        }
        return this.browser;
    };
    /**
     * @return {?}
     */
    DomUtils.prototype.calculateScrollbarWidth = /**
     * @return {?}
     */
    function () {
        if (this.calculatedScrollbarWidth !== null) {
            return this.calculatedScrollbarWidth;
        }
        /** @type {?} */
        var scrollDiv = document.createElement('div');
        scrollDiv.className = 'ui-scrollbar-measure';
        document.body.appendChild(scrollDiv);
        /** @type {?} */
        var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;
        document.body.removeChild(scrollDiv);
        this.calculatedScrollbarWidth = scrollbarWidth;
        return scrollbarWidth;
    };
    DomUtils.zindex = 1000;
    return DomUtils;
}());
export { DomUtils };
if (false) {
    /** @type {?} */
    DomUtils.zindex;
    /**
     * @type {?}
     * @private
     */
    DomUtils.prototype.calculatedScrollbarWidth;
    /**
     * @type {?}
     * @private
     */
    DomUtils.prototype.browser;
}
//# sourceMappingURL=data:application/json;base64,