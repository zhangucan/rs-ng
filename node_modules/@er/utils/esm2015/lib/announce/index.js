/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NotifyLevel, NotifyType, StateNames } from '@er/types';
import { CommonsUtils } from '../comm';
import { StatesUtils } from '../states';
export class AnnounceUtils {
    /**
     * @param {?} options
     * @return {?}
     */
    static info(options) {
        /** @type {?} */
        const notify = CommonsUtils.getObjWhenStr(options, 'message');
        StatesUtils.create(StateNames.notify, Object.assign({}, notify, { type: NotifyType.ANNOUNCE }));
    }
    /**
     * @param {?} options
     * @return {?}
     */
    static error(options) {
        /** @type {?} */
        const notify = CommonsUtils.getObjWhenStr(options, 'message');
        StatesUtils.create(StateNames.notify, (/** @type {?} */ (Object.assign({}, notify, { level: NotifyLevel.ERROR, type: NotifyType.ANNOUNCE }))));
    }
    /**
     * @param {?} options
     * @return {?}
     */
    static success(options) {
        /** @type {?} */
        const notify = CommonsUtils.getObjWhenStr(options, 'message');
        StatesUtils.create(StateNames.notify, (/** @type {?} */ (Object.assign({}, notify, { level: NotifyLevel.SUCCESS, type: NotifyType.ANNOUNCE }))));
    }
    /**
     * @param {?} options
     * @return {?}
     */
    static warn(options) {
        /** @type {?} */
        const notify = CommonsUtils.getObjWhenStr(options, 'message');
        StatesUtils.create(StateNames.notify, (/** @type {?} */ (Object.assign({}, notify, { level: NotifyLevel.WARN, type: NotifyType.ANNOUNCE }))));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZXIvdXRpbHMvIiwic291cmNlcyI6WyJsaWIvYW5ub3VuY2UvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxXQUFXLEVBQWMsVUFBVSxFQUFFLFVBQVUsRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUMxRSxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sU0FBUyxDQUFDO0FBQ3JDLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFFdEMsTUFBTSxPQUFPLGFBQWE7Ozs7O0lBRXhCLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBNEI7O2NBQ2hDLE1BQU0sR0FBRyxZQUFZLENBQUMsYUFBYSxDQUFhLE9BQU8sRUFBRSxTQUFTLENBQUM7UUFDekUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBTSxvQkFDL0IsTUFBTSxJQUNULElBQUksRUFBRSxVQUFVLENBQUMsUUFBUSxJQUN6QixDQUFDO0lBQ0wsQ0FBQzs7Ozs7SUFFRCxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQTRCOztjQUNqQyxNQUFNLEdBQUcsWUFBWSxDQUFDLGFBQWEsQ0FBYSxPQUFPLEVBQUUsU0FBUyxDQUFDO1FBQ3pFLFdBQVcsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxxQ0FDakMsTUFBTSxJQUNULEtBQUssRUFBRSxXQUFXLENBQUMsS0FBSyxFQUN4QixJQUFJLEVBQUUsVUFBVSxDQUFDLFFBQVEsS0FDMUIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7SUFFRCxNQUFNLENBQUMsT0FBTyxDQUFDLE9BQTRCOztjQUNuQyxNQUFNLEdBQUcsWUFBWSxDQUFDLGFBQWEsQ0FBYSxPQUFPLEVBQUUsU0FBUyxDQUFDO1FBQ3pFLFdBQVcsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxxQ0FDakMsTUFBTSxJQUNULEtBQUssRUFBRSxXQUFXLENBQUMsT0FBTyxFQUMxQixJQUFJLEVBQUUsVUFBVSxDQUFDLFFBQVEsS0FDMUIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7Ozs7SUFFRCxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQTRCOztjQUNoQyxNQUFNLEdBQUcsWUFBWSxDQUFDLGFBQWEsQ0FBYSxPQUFPLEVBQUUsU0FBUyxDQUFDO1FBQ3pFLFdBQVcsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxxQ0FDakMsTUFBTSxJQUNULEtBQUssRUFBRSxXQUFXLENBQUMsSUFBSSxFQUN2QixJQUFJLEVBQUUsVUFBVSxDQUFDLFFBQVEsS0FDMUIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztDQUVGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtOb3RpZnlMZXZlbCwgTm90aWZ5UHJvcCwgTm90aWZ5VHlwZSwgU3RhdGVOYW1lc30gZnJvbSAnQGVyL3R5cGVzJztcbmltcG9ydCB7Q29tbW9uc1V0aWxzfSBmcm9tICcuLi9jb21tJztcbmltcG9ydCB7U3RhdGVzVXRpbHN9IGZyb20gJy4uL3N0YXRlcyc7XG5cbmV4cG9ydCBjbGFzcyBBbm5vdW5jZVV0aWxzIHtcblxuICBzdGF0aWMgaW5mbyhvcHRpb25zOiBzdHJpbmcgfCBOb3RpZnlQcm9wKSB7XG4gICAgY29uc3Qgbm90aWZ5ID0gQ29tbW9uc1V0aWxzLmdldE9ialdoZW5TdHI8Tm90aWZ5UHJvcD4ob3B0aW9ucywgJ21lc3NhZ2UnKTtcbiAgICBTdGF0ZXNVdGlscy5jcmVhdGUoU3RhdGVOYW1lcy5ub3RpZnksIHtcbiAgICAgIC4uLm5vdGlmeSxcbiAgICAgIHR5cGU6IE5vdGlmeVR5cGUuQU5OT1VOQ0VcbiAgICB9KTtcbiAgfVxuXG4gIHN0YXRpYyBlcnJvcihvcHRpb25zOiBzdHJpbmcgfCBOb3RpZnlQcm9wKSB7XG4gICAgY29uc3Qgbm90aWZ5ID0gQ29tbW9uc1V0aWxzLmdldE9ialdoZW5TdHI8Tm90aWZ5UHJvcD4ob3B0aW9ucywgJ21lc3NhZ2UnKTtcbiAgICBTdGF0ZXNVdGlscy5jcmVhdGUoU3RhdGVOYW1lcy5ub3RpZnksIDxOb3RpZnlQcm9wPntcbiAgICAgIC4uLm5vdGlmeSxcbiAgICAgIGxldmVsOiBOb3RpZnlMZXZlbC5FUlJPUixcbiAgICAgIHR5cGU6IE5vdGlmeVR5cGUuQU5OT1VOQ0VcbiAgICB9KTtcbiAgfVxuXG4gIHN0YXRpYyBzdWNjZXNzKG9wdGlvbnM6IHN0cmluZyB8IE5vdGlmeVByb3ApIHtcbiAgICBjb25zdCBub3RpZnkgPSBDb21tb25zVXRpbHMuZ2V0T2JqV2hlblN0cjxOb3RpZnlQcm9wPihvcHRpb25zLCAnbWVzc2FnZScpO1xuICAgIFN0YXRlc1V0aWxzLmNyZWF0ZShTdGF0ZU5hbWVzLm5vdGlmeSwgPE5vdGlmeVByb3A+e1xuICAgICAgLi4ubm90aWZ5LFxuICAgICAgbGV2ZWw6IE5vdGlmeUxldmVsLlNVQ0NFU1MsXG4gICAgICB0eXBlOiBOb3RpZnlUeXBlLkFOTk9VTkNFXG4gICAgfSk7XG4gIH1cblxuICBzdGF0aWMgd2FybihvcHRpb25zOiBzdHJpbmcgfCBOb3RpZnlQcm9wKSB7XG4gICAgY29uc3Qgbm90aWZ5ID0gQ29tbW9uc1V0aWxzLmdldE9ialdoZW5TdHI8Tm90aWZ5UHJvcD4ob3B0aW9ucywgJ21lc3NhZ2UnKTtcbiAgICBTdGF0ZXNVdGlscy5jcmVhdGUoU3RhdGVOYW1lcy5ub3RpZnksIDxOb3RpZnlQcm9wPntcbiAgICAgIC4uLm5vdGlmeSxcbiAgICAgIGxldmVsOiBOb3RpZnlMZXZlbC5XQVJOLFxuICAgICAgdHlwZTogTm90aWZ5VHlwZS5BTk5PVU5DRVxuICAgIH0pO1xuICB9XG5cbn1cbiJdfQ==