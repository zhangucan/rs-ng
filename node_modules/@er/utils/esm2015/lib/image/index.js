/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { fromEvent, of } from 'rxjs';
import { map } from 'rxjs/operators';
export class ImageUtil {
    /**
     * @param {?} file
     * @return {?}
     */
    static getBase64(file) {
        if (typeof file === 'string' && file.startsWith('data:')) {
            return of(file);
        }
        else {
            /** @type {?} */
            const reader = new FileReader();
            /** @type {?} */
            const fileContent$ = fromEvent(reader, 'load')
                .pipe(map((e) => {
                console.log(e.target['result']);
                return e.target['result'];
            }));
            // (<File>file).type
            reader.readAsDataURL((/** @type {?} */ (file)));
            return fileContent$;
        }
    }
    /**
     * @param {?} file
     * @return {?}
     */
    static upload(file) {
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZXIvdXRpbHMvIiwic291cmNlcyI6WyJsaWIvaW1hZ2UvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQWMsRUFBRSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBQy9DLE9BQU8sRUFBQyxHQUFHLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUVuQyxNQUFNLE9BQU8sU0FBUzs7Ozs7SUFFcEIsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFtQjtRQUNsQyxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ3hELE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ2pCO2FBQU07O2tCQUNDLE1BQU0sR0FBRyxJQUFJLFVBQVUsRUFBRTs7a0JBQ3pCLFlBQVksR0FBRyxTQUFTLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQztpQkFDM0MsSUFBSSxDQUNILEdBQUcsQ0FBQyxDQUFDLENBQVEsRUFBRSxFQUFFO2dCQUNmLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO2dCQUNoQyxPQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDNUIsQ0FBQyxDQUFDLENBQ0g7WUFDSCxvQkFBb0I7WUFDcEIsTUFBTSxDQUFDLGFBQWEsQ0FBQyxtQkFBQSxJQUFJLEVBQVEsQ0FBQyxDQUFDO1lBQ25DLE9BQU8sWUFBWSxDQUFDO1NBQ3JCO0lBQ0gsQ0FBQzs7Ozs7SUFFRCxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUk7SUFFbEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtmcm9tRXZlbnQsIE9ic2VydmFibGUsIG9mfSBmcm9tICdyeGpzJztcbmltcG9ydCB7bWFwfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbmV4cG9ydCBjbGFzcyBJbWFnZVV0aWwge1xuXG4gIHN0YXRpYyBnZXRCYXNlNjQoZmlsZTogRmlsZSB8IHN0cmluZyk6IE9ic2VydmFibGU8c3RyaW5nPiB7XG4gICAgaWYgKHR5cGVvZiBmaWxlID09PSAnc3RyaW5nJyAmJiBmaWxlLnN0YXJ0c1dpdGgoJ2RhdGE6JykpIHtcbiAgICAgIHJldHVybiBvZihmaWxlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcbiAgICAgIGNvbnN0IGZpbGVDb250ZW50JCA9IGZyb21FdmVudChyZWFkZXIsICdsb2FkJylcbiAgICAgICAgLnBpcGUoXG4gICAgICAgICAgbWFwKChlOiBFdmVudCkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZS50YXJnZXRbJ3Jlc3VsdCddKTtcbiAgICAgICAgICAgIHJldHVybiBlLnRhcmdldFsncmVzdWx0J107XG4gICAgICAgICAgfSlcbiAgICAgICAgKTtcbiAgICAgIC8vICg8RmlsZT5maWxlKS50eXBlXG4gICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChmaWxlIGFzIEZpbGUpO1xuICAgICAgcmV0dXJuIGZpbGVDb250ZW50JDtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgdXBsb2FkKGZpbGUpIHtcblxuICB9XG59XG4iXX0=