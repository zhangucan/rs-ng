import { State, Store } from '@er/types';
import { BehaviorSubject } from 'rxjs';
export declare class StatesUtils {
    static getStore(): BehaviorSubject<Store>;
    static create(path: string | string[], value?: {}, preserved?: boolean): State;
    static get(path: string | string[], createWhenAbsent?: boolean): BehaviorSubject<any>;
    static observe(...path: string[]): BehaviorSubject<any>;
    static toggle(...path: string[]): State;
    static inc(path: string | string[]): State;
    static dec(path: string | string[]): State;
    static add(path: string | string[], offset: number): State;
    /**
     * used to clear some state properties
     */
    static set(path: string | string[], final: {
        [key: string]: any;
    }): State;
    static delete(path: string | string[], key: string | string[]): void;
    /**
     * used to update state properties when patch has no undefined values
     */
    static update(path: string | string[], patch: {
        [key: string]: any;
    }): State;
    static getValue(...path: string[]): any;
    static deleteState(...path: string[]): void;
    private static getStoreItem;
}
