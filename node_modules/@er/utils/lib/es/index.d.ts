import { ApiDataProps, ApiPayload, QueryRuleSet } from '@er/types';
import { Query, RequestBodySearch } from 'elastic-builder';
export declare class EsUtils {
    static parseEsbObject(obj: any): any;
    static getFieldAggs(key: any, aggMethods: any): {};
    static resolveQuery(query: any): {
        must: Query[];
        should: Query[];
        not: Query[];
    };
    static resolveSearchFields(options: any): any[];
    static buildQueryBody(options: ApiDataProps): RequestBodySearch;
    static parseAggProps(aggProps: any): any[];
    static resolveRequestBody(body: ApiPayload | string | RequestBodySearch, options?: any): {};
    static resolveSort(sort: any): {};
    static getMsearchBody(qs: {}[]): string;
    static buildQueryRuleSet(ruleSet: QueryRuleSet): {
        'bool'?: undefined;
    } | {
        'bool': {};
    };
    static resolveAggs(aggs: any): {};
    static resolveBuckets(buckets: any): any;
    static resolveBucket(bucket: any): {};
    private static queryResolver;
}
