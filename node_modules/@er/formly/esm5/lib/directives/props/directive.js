/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Directive } from '@angular/core';
import { PropsBindDirective } from '@er/core';
var FormlyPropsBindDirective = /** @class */ (function (_super) {
    tslib_1.__extends(FormlyPropsBindDirective, _super);
    function FormlyPropsBindDirective() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(FormlyPropsBindDirective.prototype, "field", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var viewComponent = this.viewComponentRef;
            if (viewComponent) {
                return viewComponent.field;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FormlyPropsBindDirective.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.hostComponentInst) {
            this.hostComponentInst['ctx'] = tslib_1.__assign({}, this.hostComponentInst['ctx'] || {}, { field: this.field });
            this.hostComponentInst['formlyField'] = this.field;
        }
    };
    FormlyPropsBindDirective.decorators = [
        { type: Directive, args: [{ selector: '[formlyPropsBind]' },] }
    ];
    return FormlyPropsBindDirective;
}(PropsBindDirective));
export { FormlyPropsBindDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL2Zvcm1seS8iLCJzb3VyY2VzIjpbImxpYi9kaXJlY3RpdmVzL3Byb3BzL2RpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQVMsTUFBTSxlQUFlLENBQUM7QUFDaEQsT0FBTyxFQUFDLGtCQUFrQixFQUFDLE1BQU0sVUFBVSxDQUFDO0FBRTVDO0lBQzhDLG9EQUFrQjtJQURoRTs7SUFtQkEsQ0FBQztJQWhCQyxzQkFBSSwyQ0FBSzs7OztRQUFUOztnQkFDUSxhQUFhLEdBQUcsSUFBSSxDQUFDLGdCQUFnQjtZQUMzQyxJQUFJLGFBQWEsRUFBRTtnQkFDakIsT0FBTyxhQUFhLENBQUMsS0FBSyxDQUFDO2FBQzVCO1FBQ0gsQ0FBQzs7O09BQUE7Ozs7SUFFRCwyQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtZQUMxQixJQUFJLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLHdCQUN4QixJQUFJLENBQUMsaUJBQWlCLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxJQUN0QyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssR0FDbEIsQ0FBQztZQUNGLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxhQUFhLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1NBQ3BEO0lBQ0gsQ0FBQzs7Z0JBbEJGLFNBQVMsU0FBQyxFQUFDLFFBQVEsRUFBRSxtQkFBbUIsRUFBQzs7SUFtQjFDLCtCQUFDO0NBQUEsQUFuQkQsQ0FDOEMsa0JBQWtCLEdBa0IvRDtTQWxCWSx3QkFBd0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7UHJvcHNCaW5kRGlyZWN0aXZlfSBmcm9tICdAZXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe3NlbGVjdG9yOiAnW2Zvcm1seVByb3BzQmluZF0nfSlcbmV4cG9ydCBjbGFzcyBGb3JtbHlQcm9wc0JpbmREaXJlY3RpdmUgZXh0ZW5kcyBQcm9wc0JpbmREaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIGdldCBmaWVsZCgpIHtcbiAgICBjb25zdCB2aWV3Q29tcG9uZW50ID0gdGhpcy52aWV3Q29tcG9uZW50UmVmO1xuICAgIGlmICh2aWV3Q29tcG9uZW50KSB7XG4gICAgICByZXR1cm4gdmlld0NvbXBvbmVudC5maWVsZDtcbiAgICB9XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5ob3N0Q29tcG9uZW50SW5zdCkge1xuICAgICAgdGhpcy5ob3N0Q29tcG9uZW50SW5zdFsnY3R4J10gPSB7XG4gICAgICAgIC4uLnRoaXMuaG9zdENvbXBvbmVudEluc3RbJ2N0eCddIHx8IHt9LFxuICAgICAgICBmaWVsZDogdGhpcy5maWVsZFxuICAgICAgfTtcbiAgICAgIHRoaXMuaG9zdENvbXBvbmVudEluc3RbJ2Zvcm1seUZpZWxkJ10gPSB0aGlzLmZpZWxkO1xuICAgIH1cbiAgfVxufVxuIl19