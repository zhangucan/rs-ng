!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("rxjs"),require("@er/utils"),require("rxjs/operators"),require("@angular/core"),require("@angular/forms"),require("@er/core"),require("@er/validate"),require("@ngx-formly/core"),require("primeng/primeng")):"function"==typeof define&&define.amd?define("@er/formly",["exports","rxjs","@er/utils","rxjs/operators","@angular/core","@angular/forms","@er/core","@er/validate","@ngx-formly/core","primeng/primeng"],t):t((e.er=e.er||{},e.er.formly={}),e.rxjs,e.utils,e.rxjs.operators,e.ng.core,e.ng.forms,e.core$1,e.validate,e.core$2,e.primeng)}(this,function(e,a,i,r,o,n,s,l,d,t){"use strict";var m=function(e,t){return(m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function g(e,t){function n(){this.constructor=e}m(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var c=function(){return(c=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function p(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var a,o,r=n.call(e),i=[];try{for(;(void 0===t||0<t--)&&!(a=r.next()).done;)i.push(a.value)}catch(s){o={error:s}}finally{try{a&&!a.done&&(n=r["return"])&&n.call(r)}finally{if(o)throw o.error}}return i}function f(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(p(arguments[t]));return e}var u=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return g(t,e),Object.defineProperty(t.prototype,"field",{get:function(){var e=this.viewComponentRef;if(e)return e.field},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.hostComponentInst&&(this.hostComponentInst.ctx=c({},this.hostComponentInst.ctx||{},{field:this.field}),this.hostComponentInst.formlyField=this.field)},t.decorators=[{type:o.Directive,args:[{selector:"[formlyPropsBind]"}]}],t}(s.PropsBindDirective),y=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return g(t,e),Object.defineProperty(t.prototype,"attrs",{get:function(){return this.field.attrs||{}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"props",{get:function(){return this.field.props||{}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"context",{get:function(){return this.field.context||{}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"value",{get:function(){return this.formControl.value},set:function(e){this.formControl.setValue(e)},enumerable:!0,configurable:!0}),t.prototype.component=function(e){return this.form.components&&this.form.components[e||this.field.key]},t.prototype.data$=function(e){return this.form.components&&this.form.components[e||this.field.key]&&this.form.components[e||this.field.key].data$},t.prototype.control=function(e){return this.form.get(e)},t.prototype.fieldProps=function(t){var e=this.field.formProps.fields.filter(function(e){return e.key===t});return e&&1===e.length?e[0]:undefined},t.prototype.ngAfterViewInit=function(){var e,t=this.widgets.toArray();1===t.length?e=s.ComponentUtils.getHostComponentInst(t[0]):1<t.length&&(e=t.map(function(e){return s.ComponentUtils.getHostComponentInst(e)})),this.validateMessage&&(this.validateMessage.showError=this.showError||!0),this.form.components||(this.form.components={}),this.form.components[this.field.key]=e},t.prototype.ngOnInit=function(){this.field.props=this.field.props||{},this.defaultProps&&(this.field.props=i.CommonsUtils.defaults({},this.field.props,this.defaultProps)),this.field.formlyField=this},t.propDecorators={widgets:[{type:o.ViewChildren,args:[u,{read:o.ViewContainerRef}]}],validateMessage:[{type:o.ViewChild,args:[l.ValidationMessageDirective]}]},t}(d.FieldType),h=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return g(t,e),t}(d.FieldWrapper),v=function(n){function e(e){var t=n.call(this,e)||this;return t.cd=e,t.options={},t.valueChanges$=new a.Subject,t}return g(e,n),Object.defineProperty(e.prototype,"formlyOptions",{get:function(){return c({fieldChanges:this.valueChanges$},this.options)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"submitTips",{get:function(){var a=this;if(!this.form.valid){var e=this.getFormErrorFields(),o=[];return e.forEach(function(e){var t=a.formlyField(e);if(t){var n=t.templateOptions&&t.templateOptions.label||e;o.push(n.replace(":",""))}}),"请正确写以下信息️："+o.join(",")}},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var t=this;n.prototype.ngOnInit.call(this);var e=this.options.fieldChanges||this.valueChanges$;this.valueChanges&&(this.$subscriptions=e.subscribe(function(e){t.valueChanges(c({},e,{formlyForm:t}))}))},e.prototype.getEventContext=function(e){return n.prototype.getEventContext.call(this,{fields:this.fields,formOptions:this.options,formProps:this.formProps,formlyForm:this})},e.prototype.formlyField=function(t){var e=this.fields.filter(function(e){return e.key===t});return e&&1===e.length?e[0]:undefined},e.decorators=[{type:o.Component,args:[{selector:"er-formly-form",template:'<div [ngClass]="styleClass" [ngStyle]="style">\n  <ng-container *ngIf="header">\n    <er-dyna-content [content]="header"></er-dyna-content>\n  </ng-container>\n  <ng-container *ngIf="template(templateNames.header)">\n    <ng-container *ngTemplateOutlet="template(templateNames.header);\n                                     context: getEventContext()"></ng-container>\n  </ng-container>\n\n  <form [formGroup]="form" [ngClass]="formStyleClass || \'mt-2\'" [ngStyle]="formStyle" novalidate>\n    <formly-form [form]="form"\n                 [options]="formlyOptions"\n                 [(model)]="model"\n                 [fields]="fields"\n                 class="formly-form">\n      <ng-content></ng-content>\n      <ng-container *ngTemplateOutlet="template(templateNames.buttons,default)"></ng-container>\n    </formly-form>\n  </form>\n  <ng-container *ngIf="footer">\n    <er-dyna-content [content]="footer"></er-dyna-content>\n  </ng-container>\n  <ng-container *ngIf="template(templateNames.footer)">\n    <ng-container *ngTemplateOutlet="template(templateNames.footer);\n                                     context: getEventContext()"></ng-container>\n  </ng-container>\n</div>\n\n<ng-template #default>\n  <div [ngClass]="buttonsStyleClass">\n    <er-button [stateKey]="formId"\n               icon="fa fa-save"\n               label="提&nbsp;&nbsp;&nbsp;交"\n               title="保留数据到服务端"\n               class="mr-2"\n               type="button"\n               [pTooltip]="submitTips"\n               tooltipPosition="top"\n               [tooltipDisabled]="form.valid"\n               [disabled]="!form.valid"\n               (onClick)="submit()"\n               [styleClass]="submitBtnStyleClass"\n    ></er-button>\n    <er-button icon="fa fa-circle-o"\n               class="mr-2"\n               label="重&nbsp;&nbsp;&nbsp;填"\n               title="恢复到修改前的状态"\n               [styleClass]="resetBtnStyleClass"\n               (onClick)="resetModel()">\n    </er-button>\n\n    <ng-container *ngFor="let btn of buttons">\n      <er-button class="mr-2" erPropsBind [props]="btn" [context]="getEventContext(btn.context)"></er-button>\n    </ng-container>\n\n  </div>\n</ng-template>\n'}]}],e.ctorParameters=function(){return[{type:o.ChangeDetectorRef}]},e.propDecorators={fields:[{type:o.Input}],options:[{type:o.Input}]},e}(s.BaseFormComponent),V=[v],b=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return g(t,e),t.decorators=[{type:o.Component,args:[{template:'\n    <ng-container *ngIf="to[\'before\']">\n      <ng-container *ngTemplateOutlet="content"></ng-container>\n    </ng-container>\n    <ng-container #fieldComponent></ng-container>\n    <ng-container *ngIf="to[\'after\']">\n      <ng-container *ngTemplateOutlet="content"></ng-container>\n    </ng-container>\n    <ng-template #content>\n      <er-dyna-content [content]="to[\'content\']"\n                       [context]="to[\'context\']"\n                       [styleClass]="to[\'styleClass\']"\n                       [style]="to[\'style\']"\n      ></er-dyna-content>\n    </ng-template>\n  '}]}],t.propDecorators={fieldComponent:[{type:o.ViewChild,args:["fieldComponent",{read:o.ViewContainerRef}]}]},t}(d.FieldWrapper),N=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return g(t,e),t.decorators=[{type:o.Component,args:[{template:'\n    <div class="form-group row">\n      <label [attr.for]="id" class="col-sm-2 col-form-label" *ngIf="to.label">\n        <span [innerHTML]="to.label"></span>\n        <span *ngIf="to.required && to[\'hideRequiredMarker\'] !== true" class="red">*</span>\n      </label>\n      <div class="col-sm-10">\n      \n        <ng-container *ngIf="to[\'before\'] && to[\'before\'].content">\n          <er-dyna-content [content]="to[\'before\'].content" [context]="to[\'before\'].context"></er-dyna-content>\n        </ng-container>\n        \n        <ng-template #fieldComponent></ng-template>\n\n        <div *ngIf="showError" class="invalid-feedback" [style.display]="\'block\'">\n          <er-validate-messages [formlyField]="field"></er-validate-messages>\n        </div>\n\n        <small *ngIf="to.description" class="form-text text-muted">\n          <i class="text-primary fa fa-info-circle"></i>\n          <span [innerHTML]="to.description"></span>\n        </small>\n        \n        <ng-container *ngIf="to[\'after\'] && to[\'after\'].content">\n          <er-dyna-content [content]="to[\'after\'].content" [context]="to[\'after\'].context"></er-dyna-content>\n        </ng-container>\n      \n      </div>\n    </div>\n  '}]}],t.propDecorators={fieldComponent:[{type:o.ViewChild,args:["fieldComponent",{read:o.ViewContainerRef}]}]},t}(d.FieldWrapper),C=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return g(t,e),t.decorators=[{type:o.Component,args:[{template:'\n    <div class="card">\n      <h3 class="card-header"><i [ngClass]="to[\'icon\']"></i> <span [innerHTML]="to[\'header\']|erSafeHtml"></span></h3>\n      <div class="card-body">\n        <div *ngIf="to[\'before\']" class="card-before">\n          <er-dyna-content [content]="to[\'before\']" [context]="model"></er-dyna-content>\n        </div>\n        <ng-container #fieldComponent></ng-container>\n        <div *ngIf="to[\'after\']" class="card-after">\n          <er-dyna-content [content]="to[\'after\']" [context]="model"></er-dyna-content>\n        </div>\n      </div>\n      <div *ngIf="to[\'footer\']" class="card-footer"><span [innerHTML]="to[\'footer\']|erSafeHtml"></span> </div>\n    </div>\n  '}]}],t.propDecorators={fieldComponent:[{type:o.ViewChild,args:["fieldComponent",{read:o.ViewContainerRef}]}]},t}(d.FieldWrapper),M=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return g(t,e),t.decorators=[{type:o.Component,args:[{template:'\n    <div class="form-group" [class.has-error]="showError">\n      <label *ngIf="to.label && to[\'hideLabel\'] !== true" [attr.for]="id">\n       <span *ngIf="to.required && to[\'hideRequiredMarker\'] !== true" style="color: red">*</span> {{ to.label }}\n      </label>\n     \n      <ng-container *ngIf="to[\'before\'] && to[\'before\'].content">\n        <er-dyna-content [content]="to[\'before\'].content" [context]="to[\'before\'].context"></er-dyna-content>\n      </ng-container>\n    \n      <ng-template #fieldComponent></ng-template>\n      \n      <div *ngIf="showError" class="invalid-feedback" [style.display]="\'block\'">\n        <er-validate-messages [formlyField]="field"></er-validate-messages>\n      </div>\n\n      <small *ngIf="to.description" class="form-text text-muted">\n        <i class="text-primary fa fa-info-circle"></i> {{ to.description }}\n      </small>\n\n      <ng-container *ngIf="to[\'after\'] && to[\'after\'].content">\n        <er-dyna-content [content]="to[\'after\'].content" [context]="to[\'after\'].context"></er-dyna-content>\n      </ng-container>\n      \n    </div>\n  '}]}],t.propDecorators={fieldComponent:[{type:o.ViewChild,args:["fieldComponent",{read:o.ViewContainerRef}]}]},t}(d.FieldWrapper),x=[M,N,C,b],F={vertical:"vertical",horizontal:"horizontal",panel:"panel",tab:"tab",dynamic:"dynamic",collapse:"collapse"},q=[{name:"letter",validation:l.NgValidators.letter},{name:"digit",validation:l.NgValidators.digit},{name:"character",validation:l.NgValidators.character},{name:"chinese",validation:l.NgValidators.chinese},{name:"integer",validation:l.NgValidators.integer},{name:"numeric",validation:l.NgValidators.numeric},{name:"full",validation:l.NgValidators.fullWidth},{name:"half",validation:l.NgValidators.halfWidth},{name:"phone",validation:l.NgValidators.phone},{name:"idCard",validation:l.NgValidators.idCard},{name:"match",validation:l.NgValidators.match},{name:"required",validation:l.NgValidators.required},{name:"accept",validation:l.NgValidators.accept},{name:"email",validation:l.NgValidators.email},{name:"url",validation:l.NgValidators.url},{name:"date",validation:l.NgValidators.date},{name:"json",validation:l.NgValidators.json},{name:"base64",validation:l.NgValidators.base64},{name:"creditCard",validation:l.NgValidators.creditCard},{name:"password",validation:l.NgValidators.password},{name:"after",validation:l.NgValidators.after},{name:"before",validation:l.NgValidators.before},{name:"between",validation:l.NgValidators.between},{name:"dateFormat",validation:l.NgValidators.dateFormat},{name:"age",validation:l.NgValidators.age},{name:"equalTo",validation:l.NgValidators.equalTo},{name:"notEqualTo",validation:l.NgValidators.notEqualTo},{name:"minLength",validation:l.NgValidators.minLength},{name:"maxLength",validation:l.NgValidators.maxLength},{name:"min",validation:l.NgValidators.min},{name:"max",validation:l.NgValidators.max},{name:"pattern",validation:l.NgValidators.pattern},{name:"rangeLength",validation:l.NgValidators.rangeLength},{name:"range",validation:l.NgValidators.range},{name:"gt",validation:l.NgValidators.gt},{name:"gte",validation:l.NgValidators.gte},{name:"lt",validation:l.NgValidators.lt},{name:"lte",validation:l.NgValidators.lte},{name:"minDate",validation:l.NgValidators.minDate},{name:"maxDate",validation:l.NgValidators.maxDate},{name:"equal",validation:l.NgValidators.equal},{name:"notEqual",validation:l.NgValidators.notEqual},{name:"equalTo2",validation:l.NgValidators.equalTo2},{name:"notEqualTo2",validation:l.NgValidators.notEqualTo2}],E=[{name:"required",message:l.NgValidateMessages.required},{name:"maxlength",message:l.NgValidateMessages.maxlength},{name:"minlength",message:l.NgValidateMessages.minlength},{name:"min",message:l.NgValidateMessages.min},{name:"max",message:l.NgValidateMessages.max},{name:"pattern",message:l.NgValidateMessages.pattern},{name:"letter",message:l.NgValidateMessages.letter},{name:"digit",message:l.NgValidateMessages.digit},{name:"character",message:l.NgValidateMessages.character},{name:"chinese",message:l.NgValidateMessages.chinese},{name:"integer",message:l.NgValidateMessages.integer},{name:"number",message:l.NgValidateMessages.number},{name:"full",message:l.NgValidateMessages.fullWidth},{name:"half",message:l.NgValidateMessages.halfWidth},{name:"phone",message:l.NgValidateMessages.phone},{name:"idCard",message:l.NgValidateMessages.idCard},{name:"age",message:l.NgValidateMessages.age},{name:"password",message:l.NgValidateMessages.password},{name:"dateBefore",message:l.NgValidateMessages.dateBefore},{name:"dateAfter",message:l.NgValidateMessages.dateAfter},{name:"dataBetween",message:l.NgValidateMessages.dataBetween},{name:"condition",message:l.NgValidateMessages.condition},{name:"email",message:l.NgValidateMessages.email},{name:"not_matching",message:l.NgValidateMessages.not_matching},{name:"unique",message:l.NgValidateMessages.unique},{name:"rangeLength",message:l.NgValidateMessages.rangeLength},{name:"gt",message:l.NgValidateMessages.gt},{name:"gte",message:l.NgValidateMessages.gte},{name:"lt",message:l.NgValidateMessages.lt},{name:"lte",message:l.NgValidateMessages.lte},{name:"lte",message:l.NgValidateMessages.lte},{name:"range",message:l.NgValidateMessages.range},{name:"url",message:l.NgValidateMessages.url},{name:"date",message:l.NgValidateMessages.date},{name:"minDate",message:l.NgValidateMessages.minDate},{name:"maxDate",message:l.NgValidateMessages.maxDate},{name:"json",message:l.NgValidateMessages.json},{name:"base64",message:l.NgValidateMessages.base64},{name:"equal",message:l.NgValidateMessages.equal},{name:"notEqual",message:l.NgValidateMessages.notEqual},{name:"equalTo",message:l.NgValidateMessages.equalTo},{name:"notEqualTo",message:l.NgValidateMessages.notEqualTo}],O={wrappers:[{name:F.vertical,component:M},{name:F.horizontal,component:N},{name:F.panel,component:C},{name:F.dynamic,component:b}],validators:q,validationMessages:E},I=function(){function e(){}return e.resolveDistinctFieldValue=function(t,e,n){console.log(t);var a="code";n&&(a=n.seqKey||"code");var o=t.model[a];return o?s.DataUtils.checkDistinct({apiProps:{apiEntry:e.apiEntry,query:n&&n.query,searchFields:a,queryValue:o},id:t.model.id}):s.DataUtils.getNextValue(c({},n||{},{apiEntry:e.apiEntry})).pipe(r.map(function(e){return t.model[a]=e,!0}))},e.initFieldValueFromSelectedTreeNode=function(e,t,n){var a;if(!(e.model&&e.model[t])){var o=i.TreeUtils.getSelectedNode(e&&e.tableId);if(o){var r=void 0;r=n?n(o):{code:o.code,name:o.name},e.patchModel(((a={})[t]=r,a))}}},e.onFieldChange=function(e,t){return e.formControl(t).valueChanges.pipe(r.takeUntil(e.destroyed$),r.distinctUntilChanged())},e.refreshContainerNavTree=function(e){var t=e.formlyForm.tableId;if(t){var n=t&&i.StatesUtils.getValue(t);if(n&&n.component)n.component.$container.refreshTree=!0}},e}(),w=[u],P=function(){function e(){}return e.prototype.onPopulate=function(e){},e.prototype.initFieldValidation=function(d){if(!d.validators&&(this.initPredefinedFieldValidation(d),d.validators)){var e=function(r){if("validation"!==r){var i,s,l=d.validators[r];l&&"object"==typeof l&&(i=l.errorPath,s=l.message,l=l.expression),d.validators.push(function(e){var t,n,a=l(e,d);if(i&&d.formControl&&d.formControl.get(i))if(a){var o=d.formControl.get(i).errors||{};delete o[r],d.formControl.get(i).setErrors(0===Object.keys(o).length?null:o)}else d.formControl.get(i).setErrors(c({},d.formControl.get(i).errors||{},((t={})[r]={message:s},t)));return a?null:((n={})[r]=!i||{errorPath:i},n)})}else Array.isArray(d.validators.validation)||(d.validators.validation=[d.validators.validation])};for(var t in d.validators)e(t)}},e.prototype.initFieldAsyncValidation=function(e){e.asyncValidators||e.asyncValidators},e.prototype.initPredefinedFieldValidation=function(e){},e}(),T=[],j=new o.InjectionToken("Er_FORMLY_CONFIG"),D=function(){function e(){}return e.decorators=[{type:o.NgModule,args:[{imports:[n.ReactiveFormsModule,d.FormlyModule,s.ErCoreModule,l.ErValidateModule,t.TooltipModule],declarations:f(V,w,T),exports:f(V,w,T)}]}],e}(),R=function(){function t(e,t){t&&e.addConfig(t),e.extensions.hasOwnProperty("field-validation"),e.extensions.hasOwnProperty("field-expression"),e.addConfig({extensions:[{name:"validator",extension:new P}]})}return t.forRoot=function(e){return void 0===e&&(e={}),{ngModule:t,providers:[{provide:j,useValue:e,multi:!0},{provide:o.ANALYZE_FOR_ENTRY_COMPONENTS,useValue:e,multi:!0}]}},t.decorators=[{type:o.NgModule,args:[{imports:[n.ReactiveFormsModule,s.ErCoreModule,l.ErValidateModule,d.FormlyModule.forRoot(O)],declarations:f(x)}]}],t.ctorParameters=function(){return[{type:d.FormlyConfig},{type:undefined,decorators:[{type:o.Optional},{type:o.Inject,args:[j]}]}]},t}();e.ErFormlyModule=D,e.ErFormlyRootModule=R,e.ErFormlyFieldType=y,e.ErFormlyFieldWrapper=h,e.FormlyFormComponent=v,e.Components=V,e.FORMLY_WRAPPER_COMPONENTS=x,e.DynamicWrapperComponent=b,e.HorizontalWrapperComponent=N,e.PanelWrapperComponent=C,e.VerticalWrapperComponent=M,e.FormlyTypes={array:"array",group:"group",dynamic:"dynamic",value:"value"},e.FormlyWrappers=F,e.ER_FORMLY_CONFIG=O,e.FormlyUtils=I,e.ɵc=w,e.ɵb=u,e.ɵa=j,e.ɵd=T,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=er-formly.umd.min.js.map