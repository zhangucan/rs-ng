{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@er/formly/lib/directives/props/directive.ts","ng://@er/formly/lib/base/field-type.ts","ng://@er/formly/lib/base/field-wrapper.ts","ng://@er/formly/lib/components/form/component.ts","ng://@er/formly/lib/components/all.ts","ng://@er/formly/lib/field-wrappers/dynamic/wrapper.ts","ng://@er/formly/lib/field-wrappers/horizontal/wrapper.ts","ng://@er/formly/lib/field-wrappers/panel/wrapper.ts","ng://@er/formly/lib/field-wrappers/vertical/wrapper.ts","ng://@er/formly/lib/field-wrappers/all.ts","ng://@er/formly/lib/types/field-wrappers/type.ts","ng://@er/formly/lib/config/all.ts","ng://@er/formly/lib/utils/index.ts","ng://@er/formly/lib/directives/all.ts","ng://@er/formly/lib/extensions/field-validation.ts","ng://@er/formly/lib/pipes/all.ts","ng://@er/formly/lib/er-formly.module.ts","ng://@er/formly/lib/types/field-types/type.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","FormlyPropsBindDirective","tslib_1.__extends","defineProperty","viewComponent","viewComponentRef","field","ngOnInit","hostComponentInst","Directive","args","selector","PropsBindDirective","ErFormlyFieldType","_super","formControl","val","setValue","component","key","form","data$","control","get","fieldProps","props","fields","filter","prop","undefined","ngAfterViewInit","_widgets","widgets","toArray","ComponentUtils","getHostComponentInst","map","widget","validateMessage","showError","defaultProps","CommonsUtils","defaults","ViewChildren","read","ViewContainerRef","ViewChild","ValidationMessageDirective","FieldType","ErFormlyFieldWrapper","FieldWrapper","FormlyFormComponent","cd","_this","options","valueChanges$","Subject","fieldChanges","valid","getFormErrorFields","labels_1","forEach","formlyField","label","templateOptions","replace","join","valueChanges","$subscriptions","subscribe","event","formlyForm","getEventContext","other","formOptions","formProps","Component","template","ChangeDetectorRef","Input","BaseFormComponent","Components","DynamicWrapperComponent","HorizontalWrapperComponent","PanelWrapperComponent","VerticalWrapperComponent","FORMLY_WRAPPER_COMPONENTS","FormlyWrappers","vertical","horizontal","panel","tab","dynamic","collapse","FORMLY_VALIDATORS","name","validation","NgValidators","letter","digit","character","chinese","integer","numeric","fullWidth","halfWidth","phone","idCard","match","required","accept","email","url","date","json","base64","creditCard","password","after","before","between","dateFormat","age","equalTo","notEqualTo","minLength","maxLength","min","max","pattern","rangeLength","range","gt","gte","lt","lte","minDate","maxDate","equal","notEqual","equalTo2","notEqualTo2","FORMLY_VALIDATION_MESSAGES","message","NgValidateMessages","maxlength","minlength","number","dateBefore","dateAfter","dataBetween","condition","not_matching","unique","ER_FORMLY_CONFIG","wrappers","validators","validationMessages","FormlyUtils","resolveDistinctFieldValue","ctx","entity","nextSeqProps","console","log","fieldName","seqKey","currentValue","model","DataUtils","checkDistinct","apiProps","apiEntry","query","searchFields","queryValue","id","getNextValue","pipe","result","initFieldValueFromSelectedTreeNode","valueResolver","node","TreeUtils","getSelectedNode","code","patchModel","_a","onFieldChange","takeUntil","destroyed$","distinctUntilChanged","refreshContainerNavTree","tableId","table","StatesUtils","getValue","$container","refreshTree","Directives","FormlyFieldValidatorExtension","onPopulate","initFieldValidation","initPredefinedFieldValidation","validatorName","errorPath_1","message_1","validator_1","errorPath","expression","isValid","errors","setErrors","keys","_b","isArray","initFieldAsyncValidation","asyncValidators","Pipes","Er_FORMLY_CONFIG","InjectionToken","ErFormlyModule","NgModule","imports","ReactiveFormsModule","FormlyModule","ErCoreModule","ErValidateModule","TooltipModule","declarations","exports","ErFormlyRootModule","formlyConfig","erFormlyConfigOption","addConfig","extensions","extension","forRoot","config","ngModule","providers","provide","useValue","multi","ANALYZE_FOR_ENTRY_COMPONENTS","FormlyConfig","Optional","type","Inject","array","group"],"mappings":"gqBAgBA,IAAIA,EAAgB,SAASC,EAAGC,GAI5B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOA,EAAEM,eAAeD,KAAIN,EAAEM,GAAKL,EAAEK,MACpDN,EAAGC,IAG5B,SAAgBO,EAAUR,EAAGC,GAEzB,SAASQ,IAAOC,KAAKC,YAAcX,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEY,UAAkB,OAANX,EAAaC,OAAOW,OAAOZ,IAAMQ,EAAGG,UAAYX,EAAEW,UAAW,IAAIH,GAG5E,IAAIK,EAAW,WAQlB,OAPAA,EAAWZ,OAAOa,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIZ,KADTW,EAAIG,UAAUF,GACOhB,OAAOU,UAAUL,eAAee,KAAKL,EAAGX,KAAIU,EAAEV,GAAKW,EAAEX,IAE9E,OAAOU,IAEKO,MAAMb,KAAMU,YAGhC,SA6EgBI,EAAOC,EAAGN,GACtB,IAAIO,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBI,EAAYC,EAA3BZ,EAAIQ,EAAEJ,KAAKG,GAAOM,EAAK,GAC3B,IACI,WAAc,IAANZ,GAAsB,EAANA,QAAcU,EAAIX,EAAEc,QAAQC,MAAMF,EAAGG,KAAKL,EAAEM,OAExE,MAAOC,GAASN,EAAI,CAAEM,MAAOA,WAEzB,IACQP,IAAMA,EAAEI,OAASP,EAAIR,EAAU,YAAIQ,EAAEJ,KAAKJ,WAExC,GAAIY,EAAG,MAAMA,EAAEM,OAE7B,OAAOL,EAGX,SAAgBM,IACZ,IAAK,IAAIN,EAAK,GAAIb,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3Ca,EAAKA,EAAGO,OAAOd,EAAOJ,UAAUF,KACpC,OAAOa,oBCtIX,SAAAQ,mDAmBA,OAlB8CC,EAAAA,EAAAA,GAE5CtC,OAAAuC,eAAIF,EAAA3B,UAAA,QAAK,KAAT,eACQ8B,EAAgBhC,KAAKiC,iBAC3B,GAAID,EACF,OAAOA,EAAcE,uCAIzBL,EAAA3B,UAAAiC,SAAA,WACMnC,KAAKoC,oBACPpC,KAAKoC,kBAAuB,IAAChC,EAAA,GACxBJ,KAAKoC,kBAAuB,KAAK,GAAE,CACtCF,MAAOlC,KAAKkC,QAEdlC,KAAKoC,kBAA+B,YAAIpC,KAAKkC,4BAhBlDG,EAAAA,UAASC,KAAA,CAAC,CAACC,SAAU,wBAmBtBV,GAlB8CW,EAAAA,oBCK9CC,EAAA,SAAAC,GAAA,SAAAD,mDAwEA,OAxEgDX,EAAAA,EAAAA,GAQ9CtC,OAAAuC,eAAIU,EAAAvC,UAAA,QAAK,KAAT,WACE,OAAOF,KAAKkC,MAAa,OAAK,oCAGhC1C,OAAAuC,eAAIU,EAAAvC,UAAA,QAAK,KAAT,WACE,OAAOF,KAAKkC,MAAa,OAAK,oCAGhC1C,OAAAuC,eAAIU,EAAAvC,UAAA,UAAO,KAAX,WACE,OAAOF,KAAKkC,MAAe,SAAK,oCAGlC1C,OAAAuC,eAAIU,EAAAvC,UAAA,QAAK,KAAT,WACE,OAAOF,KAAK2C,YAAYlB,WAG1B,SAAUmB,GACR5C,KAAK2C,YAAYE,SAASD,oCAG5BH,EAAAvC,UAAA4C,UAAA,SAAUC,GACR,OAAO/C,KAAKgD,KAAiB,YAC3BhD,KAAKgD,KAAiB,WAAED,GAAO/C,KAAKkC,MAAMa,MAG9CN,EAAAvC,UAAA+C,MAAA,SAAMF,GACJ,OAAO/C,KAAKgD,KAAiB,YAC3BhD,KAAKgD,KAAiB,WAAED,GAAO/C,KAAKkC,MAAMa,MAC1C/C,KAAKgD,KAAiB,WAAED,GAAO/C,KAAKkC,MAAMa,KAAKE,OAGnDR,EAAAvC,UAAAgD,QAAA,SAAQH,GACN,OAAO/C,KAAKgD,KAAKG,IAAIJ,IAGvBN,EAAAvC,UAAAkD,WAAA,SAAWL,OACHM,EAAQrD,KAAKkC,MAAiB,UAAEoB,OAAOC,OAAO,SAAAC,GAAQ,OAAAA,EAAKT,MAAQA,IACzE,OAAQM,GAA0B,IAAjBA,EAAM1C,OAAgB0C,EAAM,GAAKI,WAGpDhB,EAAAvC,UAAAwD,gBAAA,eAEMZ,EADEa,EAAW3D,KAAK4D,QAAQC,UAEN,IAApBF,EAAShD,OACXmC,EAAYgB,EAAAA,eAAeC,qBAAqBJ,EAAS,IAC9B,EAAlBA,EAAShD,SAClBmC,EAAYa,EAASK,IAAI,SAAAC,GAAU,OAAAH,EAAAA,eAAeC,qBAAqBE,MAErEjE,KAAKkE,kBACPlE,KAAKkE,gBAAgBC,UAAYnE,KAAKmE,YAAa,GAEhDnE,KAAKgD,KAAiB,aACzBhD,KAAKgD,KAAiB,WAAI,IAE5BhD,KAAKgD,KAAiB,WAAEhD,KAAKkC,MAAMa,KAAOD,GAG5CL,EAAAvC,UAAAiC,SAAA,WACEnC,KAAKkC,MAAa,MAAIlC,KAAKkC,MAAa,OAAK,GACzClC,KAAKoE,eACPpE,KAAKkC,MAAa,MAAImC,EAAAA,aAAaC,SAAS,GAAItE,KAAKkC,MAAa,MAAGlC,KAAKoE,eAE5EpE,KAAKkC,MAAmB,YAAIlC,uCAlE7BuE,EAAAA,aAAYjC,KAAA,CAACT,EAA0B,CAAC2C,KAAMC,EAAAA,4CAE9CC,EAAAA,UAASpC,KAAA,CAACqC,EAAAA,+BAkEblC,EAxEA,CAAgDmC,EAAAA,yBCNhD,SAAAC,mDAEA,OAFmD/C,EAAAA,EAAAA,GAEnD+C,GAFmDC,EAAAA,4BCmBjD,SAAAC,EAAsBC,GAAtB,IAAAC,EACEvC,EAAA9B,KAAAZ,KAAMgF,IAAGhF,YADWiF,EAAAD,GAAAA,EANbC,EAAAC,QAA6B,GAItCD,EAAAE,cAAiD,IAAIC,EAAAA,UAuDvD,OA/DyCtD,EAAAA,EAAAA,GAcvCtC,OAAAuC,eAAIgD,EAAA7E,UAAA,gBAAa,KAAjB,WACE,OAAAE,EAAA,CACEiF,aAAcrF,KAAKmF,eAChBnF,KAAKkF,0CAIZ1F,OAAAuC,eAAIgD,EAAA7E,UAAA,aAAU,KAAd,WAAA,IAAA+E,EAAAjF,KACE,IAAKA,KAAKgD,KAAKsC,MAAO,KACdhC,EAAStD,KAAKuF,qBACdC,EAAS,GAQf,OAPAlC,EAAOmC,QAAQ,SAAAvD,OACPwD,EAAcT,EAAKS,YAAYxD,GACrC,GAAIwD,EAAa,KACTC,EAAQD,EAAYE,iBAAmBF,EAAYE,gBAAgBD,OAASzD,EAClFsD,EAAOhE,KAAKmE,EAAME,QAAQ,IAAK,QAG5B,aAAaL,EAAOM,KAAK,uCAIpCf,EAAA7E,UAAAiC,SAAA,WAAA,IAAA8C,EAAAjF,KACE0C,EAAAxC,UAAMiC,SAAQvB,KAAAZ,UACRmF,EAAgBnF,KAAKkF,QAAQG,cAAgBrF,KAAKmF,cACpDnF,KAAK+F,eACP/F,KAAKgG,eAAiBb,EAAcc,UAAU,SAAAC,GAC5CjB,EAAKc,aAAY3F,EAAA,GACZ8F,EAAK,CACRC,WAAYlB,SAMpBF,EAAA7E,UAAAkG,gBAAA,SAAgBC,GACd,OAAO3D,EAAAxC,UAAMkG,gBAAexF,KAAAZ,KAAC,CAC3BsD,OAAQtD,KAAKsD,OACbgD,YAAatG,KAAKkF,QAClBqB,UAAWvG,KAAKuG,UAChBJ,WAAYnG,QAIhB+E,EAAA7E,UAAAwF,YAAA,SAAY3C,OACJM,EAAQrD,KAAKsD,OAAOC,OAAO,SAAAC,GAAQ,OAAAA,EAAKT,MAAQA,IACtD,OAAQM,GAA0B,IAAjBA,EAAM1C,OAAgB0C,EAAM,GAAKI,+BAhErD+C,EAAAA,UAASlE,KAAA,CAAC,CACTC,SAAU,iBACVkE,SAAA,ssEAVMC,EAAAA,qDAcLC,EAAAA,uBAEAA,EAAAA,SA2DH5B,GA/DyC6B,EAAAA,mBCR5BC,EAAa,CACxB9B,iBCMF,SAAA+B,mDAoBA,OAF6ChF,EAAAA,EAAAA,uBAlB5C0E,EAAAA,UAASlE,KAAA,CAAC,CACTmE,SAAU,ooBAkBT/B,EAAAA,UAASpC,KAAA,CAAC,iBAAkB,CAACkC,KAAMC,EAAAA,sBACtCqC,GAF6ChC,EAAAA,4BC1B7C,SAAAiC,mDAkCA,OAFgDjF,EAAAA,EAAAA,uBAhC/C0E,EAAAA,UAASlE,KAAA,CAAC,CACTmE,SAAU,8vCAgCT/B,EAAAA,UAASpC,KAAA,CAAC,iBAAkB,CAAEkC,KAAMC,EAAAA,sBACvCsC,GAFgDjC,EAAAA,4BC/BhD,SAAAkC,mDAmBA,OAF2ClF,EAAAA,EAAAA,uBAjB1C0E,EAAAA,UAASlE,KAAA,CAAC,CACTmE,SAAU,mvBAiBT/B,EAAAA,UAASpC,KAAA,CAAC,iBAAkB,CAACkC,KAAMC,EAAAA,sBACtCuC,GAF2ClC,EAAAA,4BClB3C,SAAAmC,mDA8BA,OAF8CnF,EAAAA,EAAAA,uBA5B7C0E,EAAAA,UAASlE,KAAA,CAAC,CACTmE,SAAU,8oCA4BT/B,EAAAA,UAASpC,KAAA,CAAC,iBAAkB,CAAEkC,KAAMC,EAAAA,sBACvCwC,GAF8CnC,EAAAA,cCrBjCoC,EAA4B,CACvCD,EACAF,EACAC,EACAF,GCdWK,EAAiB,CAC5BC,SAAU,WACVC,WAAY,aACZC,MAAO,QACPC,IAAK,MACLC,QAAS,UACTC,SAAU,YCENC,EAAuC,CAE3C,CAACC,KAAM,SAAUC,WAAYC,EAAAA,aAAaC,QAC1C,CAACH,KAAM,QAASC,WAAYC,EAAAA,aAAaE,OACzC,CAACJ,KAAM,YAAaC,WAAYC,EAAAA,aAAaG,WAC7C,CAACL,KAAM,UAAWC,WAAYC,EAAAA,aAAaI,SAC3C,CAACN,KAAM,UAAWC,WAAYC,EAAAA,aAAaK,SAC3C,CAACP,KAAM,UAAWC,WAAYC,EAAAA,aAAaM,SAC3C,CAACR,KAAM,OAAQC,WAAYC,EAAAA,aAAaO,WACxC,CAACT,KAAM,OAAQC,WAAYC,EAAAA,aAAaQ,WACxC,CAACV,KAAM,QAASC,WAAYC,EAAAA,aAAaS,OACzC,CAACX,KAAM,SAAUC,WAAYC,EAAAA,aAAaU,QAC1C,CAACZ,KAAM,QAASC,WAAYC,EAAAA,aAAaW,OACzC,CAACb,KAAM,WAAYC,WAAYC,EAAAA,aAAaY,UAC5C,CAACd,KAAM,SAAUC,WAAYC,EAAAA,aAAaa,QAC1C,CAACf,KAAM,QAASC,WAAYC,EAAAA,aAAac,OACzC,CAAChB,KAAM,MAAOC,WAAYC,EAAAA,aAAae,KACvC,CAACjB,KAAM,OAAQC,WAAYC,EAAAA,aAAagB,MACxC,CAAClB,KAAM,OAAQC,WAAYC,EAAAA,aAAaiB,MACxC,CAACnB,KAAM,SAAUC,WAAYC,EAAAA,aAAakB,QAC1C,CAACpB,KAAM,aAAcC,WAAYC,EAAAA,aAAamB,YAC9C,CAACrB,KAAM,WAAYC,WAAYC,EAAAA,aAAaoB,UAC5C,CAACtB,KAAM,QAASC,WAAYC,EAAAA,aAAaqB,OACzC,CAACvB,KAAM,SAAUC,WAAYC,EAAAA,aAAasB,QAC1C,CAACxB,KAAM,UAAWC,WAAYC,EAAAA,aAAauB,SAC3C,CAACzB,KAAM,aAAcC,WAAYC,EAAAA,aAAawB,YAC9C,CAAC1B,KAAM,MAAOC,WAAYC,EAAAA,aAAayB,KACvC,CAAC3B,KAAM,UAAWC,WAAYC,EAAAA,aAAa0B,SAC3C,CAAC5B,KAAM,aAAcC,WAAYC,EAAAA,aAAa2B,YAC9C,CAAC7B,KAAM,YAAaC,WAAYC,EAAAA,aAAa4B,WAC7C,CAAC9B,KAAM,YAAaC,WAAYC,EAAAA,aAAa6B,WAC7C,CAAC/B,KAAM,MAAOC,WAAYC,EAAAA,aAAa8B,KACvC,CAAChC,KAAM,MAAOC,WAAYC,EAAAA,aAAa+B,KACvC,CAACjC,KAAM,UAAWC,WAAYC,EAAAA,aAAagC,SAC3C,CAAClC,KAAM,cAAeC,WAAYC,EAAAA,aAAaiC,aAC/C,CAACnC,KAAM,QAASC,WAAYC,EAAAA,aAAakC,OACzC,CAACpC,KAAM,KAAMC,WAAYC,EAAAA,aAAamC,IACtC,CAACrC,KAAM,MAAOC,WAAYC,EAAAA,aAAaoC,KACvC,CAACtC,KAAM,KAAMC,WAAYC,EAAAA,aAAaqC,IACtC,CAACvC,KAAM,MAAOC,WAAYC,EAAAA,aAAasC,KACvC,CAACxC,KAAM,UAAWC,WAAYC,EAAAA,aAAauC,SAC3C,CAACzC,KAAM,UAAWC,WAAYC,EAAAA,aAAawC,SAC3C,CAAC1C,KAAM,QAASC,WAAYC,EAAAA,aAAayC,OACzC,CAAC3C,KAAM,WAAYC,WAAYC,EAAAA,aAAa0C,UAC5C,CAAC5C,KAAM,WAAYC,WAAYC,EAAAA,aAAa2C,UAC5C,CAAC7C,KAAM,cAAeC,WAAYC,EAAAA,aAAa4C,cAG3CC,EAAwD,CAC5D,CAAC/C,KAAM,WAAYgD,QAASC,EAAAA,mBAAmBnC,UAC/C,CAACd,KAAM,YAAagD,QAASC,EAAAA,mBAAmBC,WAChD,CAAClD,KAAM,YAAagD,QAASC,EAAAA,mBAAmBE,WAChD,CAACnD,KAAM,MAAOgD,QAASC,EAAAA,mBAAmBjB,KAC1C,CAAChC,KAAM,MAAOgD,QAASC,EAAAA,mBAAmBhB,KAC1C,CAACjC,KAAM,UAAWgD,QAASC,EAAAA,mBAAmBf,SAC9C,CAAClC,KAAM,SAAUgD,QAASC,EAAAA,mBAAmB9C,QAC7C,CAACH,KAAM,QAASgD,QAASC,EAAAA,mBAAmB7C,OAC5C,CAACJ,KAAM,YAAagD,QAASC,EAAAA,mBAAmB5C,WAChD,CAACL,KAAM,UAAWgD,QAASC,EAAAA,mBAAmB3C,SAC9C,CAACN,KAAM,UAAWgD,QAASC,EAAAA,mBAAmB1C,SAC9C,CAACP,KAAM,SAAUgD,QAASC,EAAAA,mBAAmBG,QAC7C,CAACpD,KAAM,OAAQgD,QAASC,EAAAA,mBAAmBxC,WAC3C,CAACT,KAAM,OAAQgD,QAASC,EAAAA,mBAAmBvC,WAC3C,CAACV,KAAM,QAASgD,QAASC,EAAAA,mBAAmBtC,OAC5C,CAACX,KAAM,SAAUgD,QAASC,EAAAA,mBAAmBrC,QAC7C,CAACZ,KAAM,MAAOgD,QAASC,EAAAA,mBAAmBtB,KAC1C,CAAC3B,KAAM,WAAYgD,QAASC,EAAAA,mBAAmB3B,UAC/C,CAACtB,KAAM,aAAcgD,QAASC,EAAAA,mBAAmBI,YACjD,CAACrD,KAAM,YAAagD,QAASC,EAAAA,mBAAmBK,WAChD,CAACtD,KAAM,cAAegD,QAASC,EAAAA,mBAAmBM,aAClD,CAACvD,KAAM,YAAagD,QAASC,EAAAA,mBAAmBO,WAChD,CAACxD,KAAM,QAASgD,QAASC,EAAAA,mBAAmBjC,OAC5C,CAAChB,KAAM,eAAgBgD,QAASC,EAAAA,mBAAmBQ,cACnD,CAACzD,KAAM,SAAUgD,QAASC,EAAAA,mBAAmBS,QAC7C,CAAC1D,KAAM,cAAegD,QAASC,EAAAA,mBAAmBd,aAClD,CAACnC,KAAM,KAAMgD,QAASC,EAAAA,mBAAmBZ,IACzC,CAACrC,KAAM,MAAOgD,QAASC,EAAAA,mBAAmBX,KAC1C,CAACtC,KAAM,KAAMgD,QAASC,EAAAA,mBAAmBV,IACzC,CAACvC,KAAM,MAAOgD,QAASC,EAAAA,mBAAmBT,KAC1C,CAACxC,KAAM,MAAOgD,QAASC,EAAAA,mBAAmBT,KAC1C,CAACxC,KAAM,QAASgD,QAASC,EAAAA,mBAAmBb,OAC5C,CAACpC,KAAM,MAAOgD,QAASC,EAAAA,mBAAmBhC,KAC1C,CAACjB,KAAM,OAAQgD,QAASC,EAAAA,mBAAmB/B,MAC3C,CAAClB,KAAM,UAAWgD,QAASC,EAAAA,mBAAmBR,SAC9C,CAACzC,KAAM,UAAWgD,QAASC,EAAAA,mBAAmBP,SAC9C,CAAC1C,KAAM,OAAQgD,QAASC,EAAAA,mBAAmB9B,MAC3C,CAACnB,KAAM,SAAUgD,QAASC,EAAAA,mBAAmB7B,QAC7C,CAACpB,KAAM,QAASgD,QAASC,EAAAA,mBAAmBN,OAC5C,CAAC3C,KAAM,WAAYgD,QAASC,EAAAA,mBAAmBL,UAC/C,CAAC5C,KAAM,UAAWgD,QAASC,EAAAA,mBAAmBrB,SAC9C,CAAC5B,KAAM,aAAcgD,QAASC,EAAAA,mBAAmBpB,aAGtC8B,EAAiC,CAC5CC,SAAU,CACR,CAAC5D,KAAMR,EAAeC,SAAUtE,UAAWmE,GAC3C,CAACU,KAAMR,EAAeE,WAAYvE,UAAWiE,GAC7C,CAACY,KAAMR,EAAeG,MAAOxE,UAAWkE,GACxC,CAACW,KAAMR,EAAeK,QAAS1E,UAAWgE,IAE5C0E,WAAY9D,EACZ+D,mBAAoBf,gBCvGtB,SAAAgB,KAkEA,OAhESA,EAAAC,0BAAP,SAAiCC,EAAKC,EAAoBC,GACxDC,QAAQC,IAAIJ,OACRK,EAAY,OACZH,IACFG,EAAYH,EAAaI,QAAU,YAE/BC,EAAeP,EAAIQ,MAAMH,GAC/B,OAAKE,EAWIE,EAAAA,UAAUC,cAAc,CAC7BC,SAAU,CACRC,SAAUX,EAAOW,SACjBC,MAAOX,GAAgBA,EAAaW,MACpCC,aAAcT,EACdU,WAAYR,GAEdS,GAAIhB,EAAIQ,MAAU,KAjBbC,EAAAA,UAAUQ,aAAYzM,EAAA,GACxB0L,GAAgB,GAAE,CACrBU,SAAUX,EAAOW,YAChBM,KACD9I,EAAAA,IAAI,SAAA+I,GAEF,OADAnB,EAAIQ,MAAMH,GAAac,GAChB,MAgBRrB,EAAAsB,mCAAP,SAA0C7G,EAAY8F,EAAmBgB,SAEvE,KADmB9G,EAAWiG,OAASjG,EAAWiG,MAAMH,IACvC,KACTiB,EAAOC,EAAAA,UAAUC,gBAAgBjH,GAAcA,EAAoB,SACzE,GAAI+G,EAAM,KACJtK,OAAG,EAELA,EADEqK,EACIA,EAAcC,GAEd,CAACG,KAAMH,EAAW,KAAGvF,KAAMuF,EAAW,MAE9C/G,EAAWmH,aAAUC,EAAA,IAAGtB,GAAYrJ,EAAG2K,OAKtC7B,EAAA8B,cAAP,SAAqBrH,EAAY8F,GAC/B,OAAO9F,EAAWxD,YAAYsJ,GAAWlG,aACtC+G,KACCW,EAAAA,UAAUtH,EAAWuH,YACrBC,EAAAA,yBAICjC,EAAAkC,wBAAP,SAA+BhC,OACvBiC,EAAUjC,EAAIzF,WAAW0H,QAC/B,GAAIA,EAAS,KACLC,EAAQD,GAAWE,EAAAA,YAAYC,SAASH,GAC9C,GAAIC,GAASA,EAAMhL,UACCgL,EAAMhL,UAAUmL,WACxBC,aAAc,IAIhCxC,KCtEayC,EAAa,CACxBtM,GCAFuM,EAAA,WAAA,SAAAA,KAuGA,OArGEA,EAAAlO,UAAAmO,WAAA,SAAWnM,KAMHkM,EAAAlO,UAAAoO,oBAAR,SAA4BpM,GAC1B,IAAIA,EAAMsJ,aAGVxL,KAAKuO,8BAA8BrM,GAC/BA,EAAMsJ,YAAY,gBACTgD,GACT,GAAsB,eAAlBA,EAAgC,KAE9BC,EACAC,EAFAC,EAAYzM,EAAMsJ,WAAWgD,GAG7BG,GAAkC,iBAAdA,IACtBF,EAAYE,EAAUC,UACtBF,EAAUC,EAAUhE,QACpBgE,EAAYA,EAAUE,YAGxB3M,EAAMsJ,WAAWhK,KAAK,SAAC0B,WACf4L,EAAUH,EAAUzL,EAAShB,GACnC,GAAIuM,GAAavM,EAAMS,aAAeT,EAAMS,YAAYQ,IAAIsL,GAC1D,GAAKK,EAKE,KACCC,EAAU7M,EAAMS,YAAYQ,IAAIsL,GAAWM,QAAU,UACpDA,EAAOP,GACdtM,EAAMS,YAAYQ,IAAIsL,GAAWO,UAAyC,IAA/BxP,OAAOyP,KAAKF,GAAQpO,OAAe,KAAOoO,QAPrF7M,EAAMS,YAAYQ,IAAIsL,GAAWO,UAAS5O,EAAA,GACpC8B,EAAMS,YAAYQ,IAAIsL,GAAWM,QAAU,KAAExB,EAAA,IAChDiB,GAAgB,CAAE7D,QAAO+D,GAAEnB,KASlC,OAAOuB,EAAU,OAAII,EAAA,IAAMV,IAAgBC,GAAY,CAAEG,UAASH,GAASS,UAGxEvP,MAAMwP,QAAQjN,EAAMsJ,WAAW5D,cAClC1F,EAAMsJ,WAAW5D,WAAa,CAAC1F,EAAMsJ,WAAW5D,cA9BtD,IAAK,IAAM4G,KAAiBtM,EAAMsJ,aAAvBgD,KAuCPJ,EAAAlO,UAAAkP,yBAAR,SAAiClN,GAC3BA,EAAMmN,iBAINnN,EAAMmN,iBAwBJjB,EAAAlO,UAAAqO,8BAAR,SAAsCrM,KAqBxCkM,EAvGA,GCHakB,EAAQ,GCaRC,EAAmB,IAAIC,EAAAA,eAA6B,oBAGjEC,EAAA,WAAA,SAAAA,KAqBA,2BArBCC,EAAAA,SAAQpN,KAAA,CAAC,CACRqN,QAAS,CACPC,EAAAA,oBACAC,EAAAA,aACAC,EAAAA,aACAC,EAAAA,iBACAC,EAAAA,eAEFC,aAAYtO,EACPkF,EACAsH,EACAmB,GAELY,QAAOvO,EACFkF,EACAsH,EACAmB,OAKPG,EArBA,gBAqCE,SAAAU,EAAYC,EACsCC,GAC5CA,GACFD,EAAaE,UAAUD,GAErBD,EAAaG,WAAW1Q,eAAe,oBAGvCuQ,EAAaG,WAAW1Q,eAAe,oBAG3CuQ,EAAaE,UAAU,CACrBC,WAAY,CACV,CAAC5I,KAAM,YAAa6I,UAAW,IAAIpC,MAc3C,OATS+B,EAAAM,QAAP,SAAeC,GACb,YADa,IAAAA,IAAAA,EAAA,IACN,CACLC,SAAUR,EACVS,UAAW,CACT,CAACC,QAAStB,EAAkBuB,SAAUJ,EAAQK,OAAO,GACrD,CAACF,QAASG,EAAAA,6BAA8BF,SAAUJ,EAAQK,OAAO,0BApCxErB,EAAAA,SAAQpN,KAAA,CAAC,CACRqN,QAAS,CACPC,EAAAA,oBACAE,EAAAA,aACAC,EAAAA,iBACAF,EAAAA,aAAaY,QAAQnF,IAEvB2E,aAAYtO,EACPuF,gDA5Ce+J,EAAAA,gDAkDPC,EAAAA,UAAQ,CAAAC,KAAIC,EAAAA,OAAM9O,KAAA,CAACiN,QA0BlCY,mSChF2B,CACzBkB,MAAO,QACPC,MAAO,QACP9J,QAAS,UACT/F,MAAO","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Directive, OnInit} from '@angular/core';\nimport {PropsBindDirective} from '@er/core';\n\n@Directive({selector: '[formlyPropsBind]'})\nexport class FormlyPropsBindDirective extends PropsBindDirective implements OnInit {\n\n  get field() {\n    const viewComponent = this.viewComponentRef;\n    if (viewComponent) {\n      return viewComponent.field;\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.hostComponentInst) {\n      this.hostComponentInst['ctx'] = {\n        ...this.hostComponentInst['ctx'] || {},\n        field: this.field\n      };\n      this.hostComponentInst['formlyField'] = this.field;\n    }\n  }\n}\n","import {AfterViewInit, OnInit, QueryList, ViewChild, ViewChildren, ViewContainerRef} from '@angular/core';\nimport {AbstractControl} from '@angular/forms';\nimport {ComponentUtils} from '@er/core';\nimport {CommonsUtils} from '@er/utils';\nimport {ValidationMessageDirective} from '@er/validate';\nimport {FieldType} from '@ngx-formly/core';\nimport {FormlyPropsBindDirective} from '../directives/props/directive';\nimport {ErFormlyFieldConfig} from './field-config';\n\nexport abstract class ErFormlyFieldType extends FieldType<ErFormlyFieldConfig> implements OnInit, AfterViewInit {\n\n  defaultProps: {};\n\n  @ViewChildren(FormlyPropsBindDirective, {read: ViewContainerRef}) widgets: QueryList<ViewContainerRef>;\n\n  @ViewChild(ValidationMessageDirective) validateMessage: ValidationMessageDirective;\n\n  get attrs() {\n    return this.field['attrs'] || {};\n  }\n\n  get props() {\n    return this.field['props'] || {};\n  }\n\n  get context() {\n    return this.field['context'] || {};\n  }\n\n  get value() {\n    return this.formControl.value;\n  }\n\n  set value(val) {\n    this.formControl.setValue(val);\n  }\n\n  component(key?) {\n    return this.form['components'] &&\n      this.form['components'][key || this.field.key];\n  }\n\n  data$(key?) {\n    return this.form['components'] &&\n      this.form['components'][key || this.field.key] &&\n      this.form['components'][key || this.field.key].data$;\n  }\n\n  control(key?: string | string[]): AbstractControl {\n    return this.form.get(key);\n  }\n\n  fieldProps(key) {\n    const props = this.field['formProps'].fields.filter(prop => prop.key === key);\n    return (props && props.length === 1) ? props[0] : undefined;\n  }\n\n  ngAfterViewInit(): void {\n    const _widgets = this.widgets.toArray();\n    let component;\n    if (_widgets.length === 1) {\n      component = ComponentUtils.getHostComponentInst(_widgets[0]);\n    } else if (_widgets.length > 1) {\n      component = _widgets.map(widget => ComponentUtils.getHostComponentInst(widget));\n    }\n    if (this.validateMessage) {\n      this.validateMessage.showError = this.showError || true;\n    }\n    if (!this.form['components']) {\n      this.form['components'] = {};\n    }\n    this.form['components'][this.field.key] = component;\n  }\n\n  ngOnInit(): void {\n    this.field['props'] = this.field['props'] || {};\n    if (this.defaultProps) {\n      this.field['props'] = CommonsUtils.defaults({}, this.field['props'], this.defaultProps);\n    }\n    this.field['formlyField'] = this;\n  }\n}\n","import {FieldWrapper} from '@ngx-formly/core';\nimport {ErFormlyFieldConfig} from './field-config';\n\nexport abstract class ErFormlyFieldWrapper extends FieldWrapper {\n  field: ErFormlyFieldConfig;\n}\n","import {ChangeDetectorRef, Component, Input} from '@angular/core';\nimport {BaseFormComponent} from '@er/core';\nimport {FormProps} from '@er/types';\nimport {FormlyFormOptions} from '@ngx-formly/core';\nimport {FormlyValueChangeEvent} from '@ngx-formly/core/lib/components/formly.field.config';\nimport {Subject} from 'rxjs';\nimport {ErFormlyFieldConfig} from '../../base/field-config';\n\n@Component({\n  selector: 'er-formly-form',\n  templateUrl: 'tpl.html'\n})\nexport class FormlyFormComponent extends BaseFormComponent {\n\n  @Input() fields: ErFormlyFieldConfig[];\n\n  @Input() options: FormlyFormOptions = {};\n\n  formProps: FormProps;\n\n  valueChanges$: Subject<FormlyValueChangeEvent> = new Subject();\n\n  constructor(protected cd: ChangeDetectorRef) {\n    super(cd);\n  }\n\n  get formlyOptions(): FormlyFormOptions {\n    return {\n      fieldChanges: this.valueChanges$,\n      ...this.options\n    };\n  }\n\n  get submitTips() {\n    if (!this.form.valid) {\n      const fields = this.getFormErrorFields();\n      const labels = [];\n      fields.forEach(field => {\n        const formlyField = this.formlyField(field);\n        if (formlyField) {\n          const label = formlyField.templateOptions && formlyField.templateOptions.label || field;\n          labels.push(label.replace(':', ''));\n        }\n      });\n      return `è¯·æ­£ç¡®åä»¥ä¸ä¿¡æ¯ï¸ï¼${labels.join(',')}`;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    const valueChanges$ = this.options.fieldChanges || this.valueChanges$;\n    if (this.valueChanges) {\n      this.$subscriptions = valueChanges$.subscribe(event => {\n        this.valueChanges({\n          ...event,\n          formlyForm: this\n        });\n      });\n    }\n  }\n\n  getEventContext(other?) {\n    return super.getEventContext({\n      fields: this.fields,\n      formOptions: this.options,\n      formProps: this.formProps,\n      formlyForm: this\n    });\n  }\n\n  formlyField(key) {\n    const props = this.fields.filter(prop => prop.key === key);\n    return (props && props.length === 1) ? props[0] : undefined;\n  }\n\n}\n","import {FormlyFormComponent} from './form/component';\n\nexport {FormlyFormComponent} from './form/component';\n\nexport const Components = [\n  FormlyFormComponent\n];\n","import {Component, ViewChild, ViewContainerRef} from '@angular/core';\nimport {Context, DynaContent} from '@er/types';\nimport {FieldWrapper} from '@ngx-formly/core';\n\nexport interface DynamicProps {\n  before?: boolean;\n  after?: boolean;\n  content?: DynaContent;\n  context?: Context;\n}\n\n@Component({\n  template: `\n    <ng-container *ngIf=\"to['before']\">\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n    </ng-container>\n    <ng-container #fieldComponent></ng-container>\n    <ng-container *ngIf=\"to['after']\">\n      <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n    </ng-container>\n    <ng-template #content>\n      <er-dyna-content [content]=\"to['content']\"\n                       [context]=\"to['context']\"\n                       [styleClass]=\"to['styleClass']\"\n                       [style]=\"to['style']\"\n      ></er-dyna-content>\n    </ng-template>\n  `\n})\nexport class DynamicWrapperComponent extends FieldWrapper {\n  @ViewChild('fieldComponent', {read: ViewContainerRef}) fieldComponent: ViewContainerRef;\n}\n","import {Component, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FieldWrapper} from '@ngx-formly/core';\n\n@Component({\n  template: `\n    <div class=\"form-group row\">\n      <label [attr.for]=\"id\" class=\"col-sm-2 col-form-label\" *ngIf=\"to.label\">\n        <span [innerHTML]=\"to.label\"></span>\n        <span *ngIf=\"to.required && to['hideRequiredMarker'] !== true\" class=\"red\">*</span>\n      </label>\n      <div class=\"col-sm-10\">\n      \n        <ng-container *ngIf=\"to['before'] && to['before'].content\">\n          <er-dyna-content [content]=\"to['before'].content\" [context]=\"to['before'].context\"></er-dyna-content>\n        </ng-container>\n        \n        <ng-template #fieldComponent></ng-template>\n\n        <div *ngIf=\"showError\" class=\"invalid-feedback\" [style.display]=\"'block'\">\n          <er-validate-messages [formlyField]=\"field\"></er-validate-messages>\n        </div>\n\n        <small *ngIf=\"to.description\" class=\"form-text text-muted\">\n          <i class=\"text-primary fa fa-info-circle\"></i>\n          <span [innerHTML]=\"to.description\"></span>\n        </small>\n        \n        <ng-container *ngIf=\"to['after'] && to['after'].content\">\n          <er-dyna-content [content]=\"to['after'].content\" [context]=\"to['after'].context\"></er-dyna-content>\n        </ng-container>\n      \n      </div>\n    </div>\n  `,\n})\nexport class HorizontalWrapperComponent extends FieldWrapper {\n  @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\n}\n","import {Component, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FieldWrapper} from '@ngx-formly/core';\n\n\n@Component({\n  template: `\n    <div class=\"card\">\n      <h3 class=\"card-header\"><i [ngClass]=\"to['icon']\"></i> <span [innerHTML]=\"to['header']|erSafeHtml\"></span></h3>\n      <div class=\"card-body\">\n        <div *ngIf=\"to['before']\" class=\"card-before\">\n          <er-dyna-content [content]=\"to['before']\" [context]=\"model\"></er-dyna-content>\n        </div>\n        <ng-container #fieldComponent></ng-container>\n        <div *ngIf=\"to['after']\" class=\"card-after\">\n          <er-dyna-content [content]=\"to['after']\" [context]=\"model\"></er-dyna-content>\n        </div>\n      </div>\n      <div *ngIf=\"to['footer']\" class=\"card-footer\"><span [innerHTML]=\"to['footer']|erSafeHtml\"></span> </div>\n    </div>\n  `,\n})\nexport class PanelWrapperComponent extends FieldWrapper {\n  @ViewChild('fieldComponent', {read: ViewContainerRef}) fieldComponent: ViewContainerRef;\n}\n","import {Component, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FieldWrapper} from '@ngx-formly/core';\n\n@Component({\n  template: `\n    <div class=\"form-group\" [class.has-error]=\"showError\">\n      <label *ngIf=\"to.label && to['hideLabel'] !== true\" [attr.for]=\"id\">\n       <span *ngIf=\"to.required && to['hideRequiredMarker'] !== true\" style=\"color: red\">*</span> {{ to.label }}\n      </label>\n     \n      <ng-container *ngIf=\"to['before'] && to['before'].content\">\n        <er-dyna-content [content]=\"to['before'].content\" [context]=\"to['before'].context\"></er-dyna-content>\n      </ng-container>\n    \n      <ng-template #fieldComponent></ng-template>\n      \n      <div *ngIf=\"showError\" class=\"invalid-feedback\" [style.display]=\"'block'\">\n        <er-validate-messages [formlyField]=\"field\"></er-validate-messages>\n      </div>\n\n      <small *ngIf=\"to.description\" class=\"form-text text-muted\">\n        <i class=\"text-primary fa fa-info-circle\"></i> {{ to.description }}\n      </small>\n\n      <ng-container *ngIf=\"to['after'] && to['after'].content\">\n        <er-dyna-content [content]=\"to['after'].content\" [context]=\"to['after'].context\"></er-dyna-content>\n      </ng-container>\n      \n    </div>\n  `,\n})\nexport class VerticalWrapperComponent extends FieldWrapper {\n  @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\n}\n","import {DynamicWrapperComponent} from './dynamic/wrapper';\nimport {HorizontalWrapperComponent} from './horizontal/wrapper';\nimport {PanelWrapperComponent} from './panel/wrapper';\nimport {VerticalWrapperComponent} from './vertical/wrapper';\n\nexport * from './dynamic/wrapper';\nexport * from './horizontal/wrapper';\nexport * from './panel/wrapper';\nexport * from './vertical/wrapper';\n\nexport const FORMLY_WRAPPER_COMPONENTS = [\n  VerticalWrapperComponent,\n  HorizontalWrapperComponent,\n  PanelWrapperComponent,\n  DynamicWrapperComponent\n];\n\n\n\n","export const FormlyWrappers = {\n  vertical: 'vertical',\n  horizontal: 'horizontal',\n  panel: 'panel',\n  tab: 'tab',\n  dynamic: 'dynamic',\n  collapse: 'collapse',\n};\n","import {NgValidateMessages, NgValidators} from '@er/validate';\nimport {ConfigOption, ValidationMessageOption, ValidatorOption} from '@ngx-formly/core/lib/services/formly.config';\nimport {DynamicWrapperComponent} from '../field-wrappers/dynamic/wrapper';\nimport {HorizontalWrapperComponent} from '../field-wrappers/horizontal/wrapper';\nimport {PanelWrapperComponent} from '../field-wrappers/panel/wrapper';\nimport {VerticalWrapperComponent} from '../field-wrappers/vertical/wrapper';\nimport {FormlyWrappers} from '../types/field-wrappers/type';\n\nconst FORMLY_VALIDATORS: ValidatorOption[] = [\n  // {name: 'async', validation: NgAsyncValidator},\n  {name: 'letter', validation: NgValidators.letter},\n  {name: 'digit', validation: NgValidators.digit},\n  {name: 'character', validation: NgValidators.character},\n  {name: 'chinese', validation: NgValidators.chinese},\n  {name: 'integer', validation: NgValidators.integer},\n  {name: 'numeric', validation: NgValidators.numeric},\n  {name: 'full', validation: NgValidators.fullWidth},\n  {name: 'half', validation: NgValidators.halfWidth},\n  {name: 'phone', validation: NgValidators.phone},\n  {name: 'idCard', validation: NgValidators.idCard},\n  {name: 'match', validation: NgValidators.match},\n  {name: 'required', validation: NgValidators.required},\n  {name: 'accept', validation: NgValidators.accept},\n  {name: 'email', validation: NgValidators.email},\n  {name: 'url', validation: NgValidators.url},\n  {name: 'date', validation: NgValidators.date},\n  {name: 'json', validation: NgValidators.json},\n  {name: 'base64', validation: NgValidators.base64},\n  {name: 'creditCard', validation: NgValidators.creditCard},\n  {name: 'password', validation: NgValidators.password},\n  {name: 'after', validation: NgValidators.after},\n  {name: 'before', validation: NgValidators.before},\n  {name: 'between', validation: NgValidators.between},\n  {name: 'dateFormat', validation: NgValidators.dateFormat},\n  {name: 'age', validation: NgValidators.age},\n  {name: 'equalTo', validation: NgValidators.equalTo},\n  {name: 'notEqualTo', validation: NgValidators.notEqualTo},\n  {name: 'minLength', validation: NgValidators.minLength},\n  {name: 'maxLength', validation: NgValidators.maxLength},\n  {name: 'min', validation: NgValidators.min},\n  {name: 'max', validation: NgValidators.max},\n  {name: 'pattern', validation: NgValidators.pattern},\n  {name: 'rangeLength', validation: NgValidators.rangeLength},\n  {name: 'range', validation: NgValidators.range},\n  {name: 'gt', validation: NgValidators.gt},\n  {name: 'gte', validation: NgValidators.gte},\n  {name: 'lt', validation: NgValidators.lt},\n  {name: 'lte', validation: NgValidators.lte},\n  {name: 'minDate', validation: NgValidators.minDate},\n  {name: 'maxDate', validation: NgValidators.maxDate},\n  {name: 'equal', validation: NgValidators.equal},\n  {name: 'notEqual', validation: NgValidators.notEqual},\n  {name: 'equalTo2', validation: NgValidators.equalTo2},\n  {name: 'notEqualTo2', validation: NgValidators.notEqualTo2}\n];\n\nconst FORMLY_VALIDATION_MESSAGES: ValidationMessageOption[] = [\n  {name: 'required', message: NgValidateMessages.required},\n  {name: 'maxlength', message: NgValidateMessages.maxlength},\n  {name: 'minlength', message: NgValidateMessages.minlength},\n  {name: 'min', message: NgValidateMessages.min},\n  {name: 'max', message: NgValidateMessages.max},\n  {name: 'pattern', message: NgValidateMessages.pattern},\n  {name: 'letter', message: NgValidateMessages.letter},\n  {name: 'digit', message: NgValidateMessages.digit},\n  {name: 'character', message: NgValidateMessages.character},\n  {name: 'chinese', message: NgValidateMessages.chinese},\n  {name: 'integer', message: NgValidateMessages.integer},\n  {name: 'number', message: NgValidateMessages.number},\n  {name: 'full', message: NgValidateMessages.fullWidth},\n  {name: 'half', message: NgValidateMessages.halfWidth},\n  {name: 'phone', message: NgValidateMessages.phone},\n  {name: 'idCard', message: NgValidateMessages.idCard},\n  {name: 'age', message: NgValidateMessages.age},\n  {name: 'password', message: NgValidateMessages.password},\n  {name: 'dateBefore', message: NgValidateMessages.dateBefore},\n  {name: 'dateAfter', message: NgValidateMessages.dateAfter},\n  {name: 'dataBetween', message: NgValidateMessages.dataBetween},\n  {name: 'condition', message: NgValidateMessages.condition},\n  {name: 'email', message: NgValidateMessages.email},\n  {name: 'not_matching', message: NgValidateMessages.not_matching},\n  {name: 'unique', message: NgValidateMessages.unique},\n  {name: 'rangeLength', message: NgValidateMessages.rangeLength},\n  {name: 'gt', message: NgValidateMessages.gt},\n  {name: 'gte', message: NgValidateMessages.gte},\n  {name: 'lt', message: NgValidateMessages.lt},\n  {name: 'lte', message: NgValidateMessages.lte},\n  {name: 'lte', message: NgValidateMessages.lte},\n  {name: 'range', message: NgValidateMessages.range},\n  {name: 'url', message: NgValidateMessages.url},\n  {name: 'date', message: NgValidateMessages.date},\n  {name: 'minDate', message: NgValidateMessages.minDate},\n  {name: 'maxDate', message: NgValidateMessages.maxDate},\n  {name: 'json', message: NgValidateMessages.json},\n  {name: 'base64', message: NgValidateMessages.base64},\n  {name: 'equal', message: NgValidateMessages.equal},\n  {name: 'notEqual', message: NgValidateMessages.notEqual},\n  {name: 'equalTo', message: NgValidateMessages.equalTo},\n  {name: 'notEqualTo', message: NgValidateMessages.notEqualTo}\n];\n\nexport const ER_FORMLY_CONFIG: ConfigOption = {\n  wrappers: [\n    {name: FormlyWrappers.vertical, component: VerticalWrapperComponent},\n    {name: FormlyWrappers.horizontal, component: HorizontalWrapperComponent},\n    {name: FormlyWrappers.panel, component: PanelWrapperComponent},\n    {name: FormlyWrappers.dynamic, component: DynamicWrapperComponent}\n  ],\n  validators: FORMLY_VALIDATORS,\n  validationMessages: FORMLY_VALIDATION_MESSAGES\n};\n\n\n","import {DataUtils, NextSeqProps} from '@er/core';\nimport {DataEntity} from '@er/types';\nimport {StatesUtils, TreeUtils} from '@er/utils';\nimport {Observable} from 'rxjs';\nimport {distinctUntilChanged, map, takeUntil} from 'rxjs/operators';\n\nexport class FormlyUtils {\n\n  static resolveDistinctFieldValue(ctx, entity: DataEntity, nextSeqProps?: NextSeqProps) {\n    console.log(ctx);\n    let fieldName = 'code';\n    if (nextSeqProps) {\n      fieldName = nextSeqProps.seqKey || 'code';\n    }\n    const currentValue = ctx.model[fieldName];\n    if (!currentValue) {\n      return DataUtils.getNextValue({\n        ...nextSeqProps || {},\n        apiEntry: entity.apiEntry\n      }).pipe(\n        map(result => {\n          ctx.model[fieldName] = result;\n          return true;\n        })\n      );\n    } else {\n      return DataUtils.checkDistinct({\n        apiProps: {\n          apiEntry: entity.apiEntry,\n          query: nextSeqProps && nextSeqProps.query,\n          searchFields: fieldName,\n          queryValue: currentValue\n        },\n        id: ctx.model['id']\n      });\n    }\n  }\n\n  static initFieldValueFromSelectedTreeNode(formlyForm, fieldName: string, valueResolver?: (node) => any) {\n    const fieldValue = formlyForm.model && formlyForm.model[fieldName];\n    if (!fieldValue) {\n      const node = TreeUtils.getSelectedNode(formlyForm && formlyForm['tableId']);\n      if (node) {\n        let val;\n        if (valueResolver) {\n          val = valueResolver(node);\n        } else {\n          val = {code: node['code'], name: node['name']};\n        }\n        formlyForm.patchModel({[fieldName]: val});\n      }\n    }\n  }\n\n  static onFieldChange(formlyForm, fieldName: string): Observable<any> {\n    return formlyForm.formControl(fieldName).valueChanges\n      .pipe(\n        takeUntil(formlyForm.destroyed$),\n        distinctUntilChanged()\n      );\n  }\n\n  static refreshContainerNavTree(ctx) {\n    const tableId = ctx.formlyForm.tableId;\n    if (tableId) {\n      const table = tableId && StatesUtils.getValue(tableId);\n      if (table && table.component) {\n        const container = table.component.$container;\n        container.refreshTree = true;\n      }\n    }\n  }\n}\n","import {FormlyPropsBindDirective} from './props/directive';\n\nexport const Directives = [\n  FormlyPropsBindDirective\n];\n","import {AbstractControl} from '@angular/forms';\nimport {FormlyExtension, FormlyFieldConfig} from '@ngx-formly/core';\n\nexport class FormlyFieldValidatorExtension implements FormlyExtension {\n\n  onPopulate(field: FormlyFieldConfig) {\n    // console.log('FormlyFieldValidatorExtension');\n   // this.initFieldValidation(field);\n   // this.initFieldAsyncValidation(field);\n  }\n\n  private initFieldValidation(field: FormlyFieldConfig) {\n    if (field.validators) {\n      return;\n    }\n    this.initPredefinedFieldValidation(field);\n    if (field.validators) {\n      for (const validatorName in field.validators) {\n        if (validatorName !== 'validation') {\n          let validator = field.validators[validatorName];\n          let errorPath;\n          let message;\n          if (validator && typeof validator === 'object') {\n            errorPath = validator.errorPath;\n            message = validator.message;\n            validator = validator.expression;\n          }\n\n          field.validators.push((control: AbstractControl) => {\n            const isValid = validator(control, field);\n            if (errorPath && field.formControl && field.formControl.get(errorPath)) {\n              if (!isValid) {\n                field.formControl.get(errorPath).setErrors({\n                  ...(field.formControl.get(errorPath).errors || {}),\n                  [validatorName]: { message },\n                });\n              } else {\n                const errors = (field.formControl.get(errorPath).errors || {});\n                delete errors[validatorName];\n                field.formControl.get(errorPath).setErrors(Object.keys(errors).length === 0 ? null : errors);\n              }\n            }\n\n            return isValid ? null : { [validatorName]: errorPath ? { errorPath } : true };\n          });\n        } else {\n          if (!Array.isArray(field.validators.validation)) {\n            field.validators.validation = [field.validators.validation];\n          }\n          // field.validators.validation\n          //   .forEach((validator: any) => field._validators.push(this.wrapNgValidatorFn(field, validator)));\n        }\n      }\n    }\n  }\n\n  private initFieldAsyncValidation(field: FormlyFieldConfig) {\n    if (field.asyncValidators) {\n      return;\n    }\n\n    if (field.asyncValidators) {\n      // for (const validatorName in field.asyncValidators) {\n      //   if (validatorName !== 'validation') {\n      //     let validator = field.asyncValidators[validatorName];\n      //     if (isObject(validator)) {\n      //       validator = validator.expression;\n      //     }\n      //\n      //     field._asyncValidators.push((control: AbstractControl) => new Promise((resolve) => {\n      //       return validator(control, field).then((result: boolean) => {\n      //         resolve(result ? null : { [validatorName]: true });\n      //       });\n      //     }));\n      //   } else {\n      //     if (!Array.isArray(field.asyncValidators.validation)) {\n      //       field.asyncValidators.validation = [field.asyncValidators.validation];\n      //     }\n      //     field.asyncValidators.validation\n      //       .forEach((validator: any) => field._asyncValidators.push(this.wrapNgValidatorFn(field, validator) as any));\n      //   }\n      // }\n    }\n  }\n\n  private initPredefinedFieldValidation(field: FormlyFieldConfig) {\n\n        // const attr = '';\n        //\n        //   switch (attr) {\n        //     case 'required':\n        //       return Validators.required(control);\n        //     case 'pattern':\n        //       return Validators.pattern(value)(control);\n        //     case 'minLength':\n        //       return Validators.minLength(value)(control);\n        //     case 'maxLength':\n        //       return Validators.maxLength(value)(control);\n        //     case 'min':\n        //       return Validators.min(value)(control);\n        //     case 'max':\n        //       return Validators.max(value)(control);\n        //   }\n        //\n\n  }\n}\n","export const Pipes = [\n\n];\n","import {ANALYZE_FOR_ENTRY_COMPONENTS, Inject, InjectionToken, ModuleWithProviders, NgModule, Optional} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {ErCoreModule} from '@er/core';\nimport {ErValidateModule} from '@er/validate';\nimport {ConfigOption, FormlyConfig, FormlyModule} from '@ngx-formly/core';\nimport {TooltipModule} from 'primeng/primeng';\nimport {Components} from './components/all';\nimport {ER_FORMLY_CONFIG} from './config/all';\nimport {Directives} from './directives/all';\nimport {FormlyFieldValidatorExtension} from './extensions/field-validation';\nimport {FORMLY_WRAPPER_COMPONENTS} from './field-wrappers/all';\nimport {Pipes} from './pipes/all';\n\nexport const Er_FORMLY_CONFIG = new InjectionToken<ConfigOption>('Er_FORMLY_CONFIG');\n\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    FormlyModule,\n    ErCoreModule,\n    ErValidateModule,\n    TooltipModule\n  ],\n  declarations: [\n    ...Components,\n    ...Directives,\n    ...Pipes\n  ],\n  exports: [\n    ...Components,\n    ...Directives,\n    ...Pipes\n  ]\n})\nexport class ErFormlyModule {\n\n}\n\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    ErCoreModule,\n    ErValidateModule,\n    FormlyModule.forRoot(ER_FORMLY_CONFIG)\n  ],\n  declarations: [\n    ...FORMLY_WRAPPER_COMPONENTS\n  ]\n})\nexport class ErFormlyRootModule {\n\n  constructor(formlyConfig: FormlyConfig,\n              @Optional() @Inject(Er_FORMLY_CONFIG) erFormlyConfigOption: ConfigOption) {\n    if (erFormlyConfigOption) {\n      formlyConfig.addConfig(erFormlyConfigOption);\n    }\n    if (formlyConfig.extensions.hasOwnProperty('field-validation')) {\n      // delete formlyConfig.extensions['field-validation'];\n    }\n    if (formlyConfig.extensions.hasOwnProperty('field-expression')) {\n      // delete formlyConfig.extensions['field-expression'];\n    }\n    formlyConfig.addConfig({\n      extensions: [\n        {name: 'validator', extension: new FormlyFieldValidatorExtension}\n      ]\n    });\n  }\n\n  static forRoot(config: ConfigOption = {}): ModuleWithProviders {\n    return {\n      ngModule: ErFormlyRootModule,\n      providers: [\n        {provide: Er_FORMLY_CONFIG, useValue: config, multi: true},\n        {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config, multi: true}\n      ]\n    };\n  }\n}\n","export const FormlyTypes = {\n  array: 'array',\n  group: 'group',\n  dynamic: 'dynamic',\n  value: 'value'\n};\n"]}