/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { FieldWrapper } from '@ngx-formly/core';
export class HorizontalWrapperComponent extends FieldWrapper {
}
HorizontalWrapperComponent.decorators = [
    { type: Component, args: [{
                template: `
    <div class="form-group row">
      <label [attr.for]="id" class="col-sm-2 col-form-label" *ngIf="to.label">
        <span [innerHTML]="to.label"></span>
        <span *ngIf="to.required && to['hideRequiredMarker'] !== true" class="red">*</span>
      </label>
      <div class="col-sm-10">
      
        <ng-container *ngIf="to['before'] && to['before'].content">
          <er-dyna-content [content]="to['before'].content" [context]="to['before'].context"></er-dyna-content>
        </ng-container>
        
        <ng-template #fieldComponent></ng-template>

        <div *ngIf="showError" class="invalid-feedback" [style.display]="'block'">
          <er-validate-messages [formlyField]="field"></er-validate-messages>
        </div>

        <small *ngIf="to.description" class="form-text text-muted">
          <i class="text-primary fa fa-info-circle"></i>
          <span [innerHTML]="to.description"></span>
        </small>
        
        <ng-container *ngIf="to['after'] && to['after'].content">
          <er-dyna-content [content]="to['after'].content" [context]="to['after'].context"></er-dyna-content>
        </ng-container>
      
      </div>
    </div>
  `
            }] }
];
HorizontalWrapperComponent.propDecorators = {
    fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]
};
if (false) {
    /** @type {?} */
    HorizontalWrapperComponent.prototype.fieldComponent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JhcHBlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Blci9mb3JtbHkvIiwic291cmNlcyI6WyJsaWIvZmllbGQtd3JhcHBlcnMvaG9yaXpvbnRhbC93cmFwcGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNyRSxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFrQzlDLE1BQU0sT0FBTywwQkFBMkIsU0FBUSxZQUFZOzs7WUFoQzNELFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBNkJUO2FBQ0Y7Ozs2QkFFRSxTQUFTLFNBQUMsZ0JBQWdCLEVBQUUsRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUU7Ozs7SUFBdkQsb0RBQTBGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIFZpZXdDaGlsZCwgVmlld0NvbnRhaW5lclJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0ZpZWxkV3JhcHBlcn0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwIHJvd1wiPlxuICAgICAgPGxhYmVsIFthdHRyLmZvcl09XCJpZFwiIGNsYXNzPVwiY29sLXNtLTIgY29sLWZvcm0tbGFiZWxcIiAqbmdJZj1cInRvLmxhYmVsXCI+XG4gICAgICAgIDxzcGFuIFtpbm5lckhUTUxdPVwidG8ubGFiZWxcIj48L3NwYW4+XG4gICAgICAgIDxzcGFuICpuZ0lmPVwidG8ucmVxdWlyZWQgJiYgdG9bJ2hpZGVSZXF1aXJlZE1hcmtlciddICE9PSB0cnVlXCIgY2xhc3M9XCJyZWRcIj4qPC9zcGFuPlxuICAgICAgPC9sYWJlbD5cbiAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tMTBcIj5cbiAgICAgIFxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwidG9bJ2JlZm9yZSddICYmIHRvWydiZWZvcmUnXS5jb250ZW50XCI+XG4gICAgICAgICAgPGVyLWR5bmEtY29udGVudCBbY29udGVudF09XCJ0b1snYmVmb3JlJ10uY29udGVudFwiIFtjb250ZXh0XT1cInRvWydiZWZvcmUnXS5jb250ZXh0XCI+PC9lci1keW5hLWNvbnRlbnQ+XG4gICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICBcbiAgICAgICAgPG5nLXRlbXBsYXRlICNmaWVsZENvbXBvbmVudD48L25nLXRlbXBsYXRlPlxuXG4gICAgICAgIDxkaXYgKm5nSWY9XCJzaG93RXJyb3JcIiBjbGFzcz1cImludmFsaWQtZmVlZGJhY2tcIiBbc3R5bGUuZGlzcGxheV09XCInYmxvY2snXCI+XG4gICAgICAgICAgPGVyLXZhbGlkYXRlLW1lc3NhZ2VzIFtmb3JtbHlGaWVsZF09XCJmaWVsZFwiPjwvZXItdmFsaWRhdGUtbWVzc2FnZXM+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxzbWFsbCAqbmdJZj1cInRvLmRlc2NyaXB0aW9uXCIgY2xhc3M9XCJmb3JtLXRleHQgdGV4dC1tdXRlZFwiPlxuICAgICAgICAgIDxpIGNsYXNzPVwidGV4dC1wcmltYXJ5IGZhIGZhLWluZm8tY2lyY2xlXCI+PC9pPlxuICAgICAgICAgIDxzcGFuIFtpbm5lckhUTUxdPVwidG8uZGVzY3JpcHRpb25cIj48L3NwYW4+XG4gICAgICAgIDwvc21hbGw+XG4gICAgICAgIFxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwidG9bJ2FmdGVyJ10gJiYgdG9bJ2FmdGVyJ10uY29udGVudFwiPlxuICAgICAgICAgIDxlci1keW5hLWNvbnRlbnQgW2NvbnRlbnRdPVwidG9bJ2FmdGVyJ10uY29udGVudFwiIFtjb250ZXh0XT1cInRvWydhZnRlciddLmNvbnRleHRcIj48L2VyLWR5bmEtY29udGVudD5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICBcbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBIb3Jpem9udGFsV3JhcHBlckNvbXBvbmVudCBleHRlbmRzIEZpZWxkV3JhcHBlciB7XG4gIEBWaWV3Q2hpbGQoJ2ZpZWxkQ29tcG9uZW50JywgeyByZWFkOiBWaWV3Q29udGFpbmVyUmVmIH0pIGZpZWxkQ29tcG9uZW50OiBWaWV3Q29udGFpbmVyUmVmO1xufVxuIl19