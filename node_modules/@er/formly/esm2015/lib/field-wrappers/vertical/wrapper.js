/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { FieldWrapper } from '@ngx-formly/core';
export class VerticalWrapperComponent extends FieldWrapper {
}
VerticalWrapperComponent.decorators = [
    { type: Component, args: [{
                template: `
    <div class="form-group" [class.has-error]="showError">
      <label *ngIf="to.label && to['hideLabel'] !== true" [attr.for]="id">
       <span *ngIf="to.required && to['hideRequiredMarker'] !== true" style="color: red">*</span> {{ to.label }}
      </label>
     
      <ng-container *ngIf="to['before'] && to['before'].content">
        <er-dyna-content [content]="to['before'].content" [context]="to['before'].context"></er-dyna-content>
      </ng-container>
    
      <ng-template #fieldComponent></ng-template>
      
      <div *ngIf="showError" class="invalid-feedback" [style.display]="'block'">
        <er-validate-messages [formlyField]="field"></er-validate-messages>
      </div>

      <small *ngIf="to.description" class="form-text text-muted">
        <i class="text-primary fa fa-info-circle"></i> {{ to.description }}
      </small>

      <ng-container *ngIf="to['after'] && to['after'].content">
        <er-dyna-content [content]="to['after'].content" [context]="to['after'].context"></er-dyna-content>
      </ng-container>
      
    </div>
  `
            }] }
];
VerticalWrapperComponent.propDecorators = {
    fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]
};
if (false) {
    /** @type {?} */
    VerticalWrapperComponent.prototype.fieldComponent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JhcHBlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Blci9mb3JtbHkvIiwic291cmNlcyI6WyJsaWIvZmllbGQtd3JhcHBlcnMvdmVydGljYWwvd3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGtCQUFrQixDQUFDO0FBOEI5QyxNQUFNLE9BQU8sd0JBQXlCLFNBQVEsWUFBWTs7O1lBNUJ6RCxTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBeUJUO2FBQ0Y7Ozs2QkFFRSxTQUFTLFNBQUMsZ0JBQWdCLEVBQUUsRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUU7Ozs7SUFBdkQsa0RBQTBGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIFZpZXdDaGlsZCwgVmlld0NvbnRhaW5lclJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0ZpZWxkV3JhcHBlcn0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCIgW2NsYXNzLmhhcy1lcnJvcl09XCJzaG93RXJyb3JcIj5cbiAgICAgIDxsYWJlbCAqbmdJZj1cInRvLmxhYmVsICYmIHRvWydoaWRlTGFiZWwnXSAhPT0gdHJ1ZVwiIFthdHRyLmZvcl09XCJpZFwiPlxuICAgICAgIDxzcGFuICpuZ0lmPVwidG8ucmVxdWlyZWQgJiYgdG9bJ2hpZGVSZXF1aXJlZE1hcmtlciddICE9PSB0cnVlXCIgc3R5bGU9XCJjb2xvcjogcmVkXCI+Kjwvc3Bhbj4ge3sgdG8ubGFiZWwgfX1cbiAgICAgIDwvbGFiZWw+XG4gICAgIFxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInRvWydiZWZvcmUnXSAmJiB0b1snYmVmb3JlJ10uY29udGVudFwiPlxuICAgICAgICA8ZXItZHluYS1jb250ZW50IFtjb250ZW50XT1cInRvWydiZWZvcmUnXS5jb250ZW50XCIgW2NvbnRleHRdPVwidG9bJ2JlZm9yZSddLmNvbnRleHRcIj48L2VyLWR5bmEtY29udGVudD5cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgIFxuICAgICAgPG5nLXRlbXBsYXRlICNmaWVsZENvbXBvbmVudD48L25nLXRlbXBsYXRlPlxuICAgICAgXG4gICAgICA8ZGl2ICpuZ0lmPVwic2hvd0Vycm9yXCIgY2xhc3M9XCJpbnZhbGlkLWZlZWRiYWNrXCIgW3N0eWxlLmRpc3BsYXldPVwiJ2Jsb2NrJ1wiPlxuICAgICAgICA8ZXItdmFsaWRhdGUtbWVzc2FnZXMgW2Zvcm1seUZpZWxkXT1cImZpZWxkXCI+PC9lci12YWxpZGF0ZS1tZXNzYWdlcz5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8c21hbGwgKm5nSWY9XCJ0by5kZXNjcmlwdGlvblwiIGNsYXNzPVwiZm9ybS10ZXh0IHRleHQtbXV0ZWRcIj5cbiAgICAgICAgPGkgY2xhc3M9XCJ0ZXh0LXByaW1hcnkgZmEgZmEtaW5mby1jaXJjbGVcIj48L2k+IHt7IHRvLmRlc2NyaXB0aW9uIH19XG4gICAgICA8L3NtYWxsPlxuXG4gICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwidG9bJ2FmdGVyJ10gJiYgdG9bJ2FmdGVyJ10uY29udGVudFwiPlxuICAgICAgICA8ZXItZHluYS1jb250ZW50IFtjb250ZW50XT1cInRvWydhZnRlciddLmNvbnRlbnRcIiBbY29udGV4dF09XCJ0b1snYWZ0ZXInXS5jb250ZXh0XCI+PC9lci1keW5hLWNvbnRlbnQ+XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgIFxuICAgIDwvZGl2PlxuICBgLFxufSlcbmV4cG9ydCBjbGFzcyBWZXJ0aWNhbFdyYXBwZXJDb21wb25lbnQgZXh0ZW5kcyBGaWVsZFdyYXBwZXIge1xuICBAVmlld0NoaWxkKCdmaWVsZENvbXBvbmVudCcsIHsgcmVhZDogVmlld0NvbnRhaW5lclJlZiB9KSBmaWVsZENvbXBvbmVudDogVmlld0NvbnRhaW5lclJlZjtcbn1cbiJdfQ==