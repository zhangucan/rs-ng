import { ChangeDetectorRef, OnDestroy } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { DataAwareControlWrapperComponent } from '@er/core';
import { OverlayContext, OverlayType } from '@er/types';
import { Menu, OverlayPanel } from 'primeng/primeng';
import { Table } from 'primeng/table';
import { BehaviorSubject } from 'rxjs';
import { PngTableColumnProps, PngTableProps } from '../../types';
export declare class PngTableComponent extends DataAwareControlWrapperComponent<PngTableProps> implements OnDestroy {
    cd: ChangeDetectorRef;
    private router;
    private activatedRoute;
    OVERLAY_TYPE: typeof OverlayType;
    table: Table;
    overlayPanel: OverlayPanel;
    popupMenu: Menu;
    bodyData$: BehaviorSubject<{}[]>;
    columns$: BehaviorSubject<PngTableColumnProps[]>;
    dataColumnNames: string[];
    dataColumns: PngTableColumnProps[];
    templateNames: {
        caption: string;
        spanHeader: string;
        header: string;
        headerSummary: string;
        body: string;
        frozenRows: string;
        cell: string;
        dataCell: string;
        footer: string;
        footerSummary: string;
        colGroup: string;
        rowExpansion: string;
        paginatorLeft: string;
        paginatorRight: string;
    };
    $defaultProps: PngTableProps;
    simpleQuery: any[];
    complexQuery: {};
    eventQuery: any[];
    selectedRows: any[];
    addBtn: any;
    overlayContext: OverlayContext;
    switch: boolean;
    constructor(cd: ChangeDetectorRef, router: Router, activatedRoute: ActivatedRoute);
    readonly apiEntry: string;
    readonly $id: any;
    onPropsInit(): void;
    updateColumns(event?: any): void;
    updateColAggKeys(event: any): void;
    updateColFilters(event: any): void;
    updateSimpleSearch(event: any): void;
    getColumnByKey(key: any): PngTableColumnProps;
    getRowStyleClass(row: any): any;
    getRowStyle(row: any): any;
    getHeaderStyleClass(column: any): any;
    getHeaderStyle(column: any): any;
    rowSelect(event: any): void;
    load(state?: any): void;
    onDataReady(data: any): void;
    showOverlay(ctx: OverlayContext): void;
    hidePanel(): void;
    resetQuery(): void;
    resetForeignQuery(): void;
    navigate(url: string, commands?: any[], params?: any): void;
    ngOnDestroy(): void;
    getTableQuery(state?: any): any;
    private getColumnsFilters;
    private getColumnsAggs;
    private resoleActionsColumn;
    private getApiDataProps;
}
