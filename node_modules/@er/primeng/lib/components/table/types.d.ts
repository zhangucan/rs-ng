import { AggProps, ApiDataProps, ButtonProps, DataAttr, DataEntity, DataField, DataItemProps, DataType, DynaContent, MenuItem, Overlay, QueryBuilderProps } from '@er/types';
import { Observable } from 'rxjs';
import { PngDataAwareProps } from '../../types/props';
export interface PngTableColumnProps {
    id?: string;
    dataField?: DataField;
    key?: string;
    filterKey?: string;
    filterDataType?: DataType;
    sortKey?: string;
    aggKey?: string;
    order?: number;
    label?: string;
    hidden?: boolean;
    fetch?: boolean;
    isActionColumn?: boolean;
    isDataColumn?: boolean;
    headerOverlays?: Overlay | Overlay[];
    cellIcon?: string | Function;
    dataType?: DataType;
    dataAttr?: DataAttr | DataAttr[];
    contentKey?: string | string[];
    styleClass?: any;
    style?: any;
    headerStyleClass?: any;
    headerStyle?: any;
    cellContent?: DynaContent | MenuItem[] | ButtonProps[] | any;
    defaultCellContent?: any;
    expandViewContent?: DynaContent | MenuItem[] | ButtonProps[] | any;
    cellStyleClass?: string | ((ctx: any) => string);
    cellStyle?: string | ((ctx: any) => string);
    overlays?: Overlay | Overlay[];
    maxLength?: number;
    format?: string;
    formatter?: string | ((val: any) => string);
    toolTip?: string | ((ctx: any) => string);
    sortable?: boolean;
    filterable?: boolean;
    filters?: any;
    aggable?: boolean;
    aggProps?: AggProps[];
    width?: string;
    height?: string;
    frozen?: boolean;
    routLink?: any[] | string;
    routParam?: string | string[] | ((col: any, row: any) => any[]);
    routQueryParams?: string | string[] | ((col: any, row: any) => {});
    colClass?: string | ((col: any, row: any) => string);
    colStyle?: string | ((col: any, row: any) => string);
    aggCellClass?: string | ((col: any, value: any) => string);
    aggCellStyle?: string | ((col: any, value: any) => string);
    headerSummaryStyleClass?: string;
    headerSummaryStyle?: {};
    onClick?: (event: any) => void;
    onMouseEnter?: (event: any) => void;
    onMouseOver?: (event: any) => void;
    onMouseOut?: (event: any) => void;
}
export interface PngTableProps extends PngDataAwareProps {
    entity?: DataEntity;
    caption?: string;
    alwaysShowPaginator?: boolean;
    autoLayout?: boolean;
    columnResizeMode?: 'fit' | 'expand';
    columns?: PngTableColumnProps[];
    compareSelectionBy?: 'equals' | 'deepEquals';
    contextMenu?: Object;
    contextMenuSelection?: Object;
    csvSeparator?: string;
    customSort?: boolean;
    dataKey?: string;
    defaultSortOrder?: number;
    expandedRowKeys?: Object;
    exportFilename?: string;
    first?: number;
    frozenColumns?: PngTableColumnProps[];
    frozenValue?: {}[];
    frozenWidth?: string;
    lazy?: boolean;
    lazyLoadOnInit?: boolean;
    loading?: boolean;
    loadingIcon?: string;
    metaKeySelection?: boolean;
    multiSortMeta?: any[];
    pageLinks?: number;
    paginator?: boolean;
    paginatorDropdownAppendTo?: Object;
    paginatorPosition?: 'both' | 'top' | 'bottom';
    reorderableColumns?: boolean;
    resizableColumns?: boolean;
    responsive?: boolean;
    rowExpandMode?: string;
    rowHover?: boolean;
    rowTrackBy?: Function;
    rows?: number;
    rowsPerPageOptions?: any[];
    scrollHeight?: string;
    scrollWidth?: string;
    scrollable?: boolean;
    selection?: Object;
    selectionMode?: 'single' | 'multiple';
    sortField?: string;
    sortMode?: string;
    sortOrder?: number;
    tableStyle?: {};
    tableStyleClass?: string;
    totalRecords?: number;
    value?: {}[];
    virtualRowHeight?: number;
    virtualScroll?: boolean;
    virtualScrollDelay?: number;
    contextMenuSelectionChange?: (event: any) => void;
    onColReorder?: (event: any) => void;
    onColResize?: (event: any) => void;
    onContextMenuSelect?: (event: any) => void;
    onEditCancel?: (event: any) => void;
    onEditComplete?: (event: any) => void;
    onEditInit?: (event: any) => void;
    onFilter?: (event: any) => void;
    onHeaderCheckboxToggle?: (event: any) => void;
    onLazyLoad?: (event: any) => void;
    onPage?: (event: any) => void;
    onRowCollapse?: (event: any) => void;
    onRowExpand?: (event: any) => void;
    onRowReorder?: (event: any) => void;
    onRowSelect?: (event: any) => void;
    onRowUnselect?: (event: any) => void;
    onSort?: (event: any) => void;
    selectionChange?: (event: any) => void;
    sortFunction?: (event: any) => void;
    $container?: any;
    $ext?: {
        dataItems?: {}[];
        apiDataProps?: ApiDataProps;
        dataItemProps?: DataItemProps;
        pageTitle?: string;
        emptyMessage?: string;
        rowStyleClass?: string | Function;
        rowStyle?: {} | Function;
        rowHeight?: string;
        aggRowStyleClass?: string | Function;
        aggRowStyle?: {} | Function;
        aggRowHeight?: string;
        rowExpandable?: boolean;
        expandRowFields?: string[];
        expandRowStyleClass?: string | Function;
        expandRowStyle?: {} | Function;
        rowActionsPlaceAhead?: boolean;
        frozenActionColumn?: boolean;
        columnSelectorStyleClass?: string;
        columnSelectorStyle?: string;
        hasColumnSelector?: boolean;
        hasRowActions?: boolean;
        hasRowIndex?: boolean;
        hasRowCheckbox?: boolean;
        hasRowRadioButton?: boolean;
        hasHeaderSummary?: boolean;
        hasFooterSummary?: boolean;
        hasPaginatorLeft?: boolean;
        hasPaginatorRight?: boolean;
        hasSearchInput?: boolean | {
            method: boolean | ((ctx: any) => boolean);
        };
        hasSearchBox?: boolean | {
            method: boolean | ((ctx: any) => boolean);
        };
        hasAddAction?: boolean | {
            method: boolean | ((ctx: any) => boolean);
        };
        hasEditAction?: boolean | {
            method: boolean | ((ctx: any) => boolean);
        };
        hasViewAction?: boolean | {
            method: boolean | ((ctx: any) => boolean);
        };
        hasDeleteAction?: boolean | {
            method: boolean | ((ctx: any) => boolean);
        };
        hasAuditAction?: boolean | {
            method: boolean | ((ctx: any) => boolean);
        };
        hasDownloadAction?: boolean | {
            method: boolean | ((ctx: any) => boolean);
        };
        queryBuildProps?: QueryBuilderProps;
        onExpandRowContent?: {
            method: (id: any) => Observable<DynaContent>;
        };
        routerOutlet?: string;
        addRouter?: string | any[];
        viewRouter?: string | any[];
        editRouter?: string | any[];
        deleteRouter?: string | any[];
        auditRouter?: string | any[];
        downloadRouter?: string | any[];
        onSuccessRouter?: string | any[];
        addAuth?: string | string[];
        viewAuth?: string | string[];
        deleteAuth?: string | string[];
        editAuth?: string | string[];
        auditAuth?: string | string[];
        downloadAuth?: string | string[];
        caption?: DynaContent;
        spanHeader?: DynaContent;
        header?: DynaContent;
        headerSummary?: DynaContent;
        body?: DynaContent;
        frozenRows?: DynaContent;
        cell?: DynaContent;
        dataCell?: DynaContent;
        footer?: DynaContent;
        footerSummary?: DynaContent;
        colGroup?: DynaContent;
        rowExpansion?: DynaContent;
        paginatorLeft?: DynaContent;
        paginatorRight?: DynaContent;
    };
}
