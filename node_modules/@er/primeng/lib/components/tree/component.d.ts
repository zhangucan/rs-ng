import { ChangeDetectorRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { DataAwareControlWrapperComponent } from '@er/core';
import { TreeNode } from 'primeng/api';
import { Tree } from 'primeng/tree';
import { Observable } from 'rxjs';
import { PngTreeNodeProps, PngTreeProps } from './types';
export { PngTreeProps, PNG_TREE_NODE_KEYS } from './types';
export declare class PngTreeComponent extends DataAwareControlWrapperComponent<PngTreeProps> implements OnInit, OnDestroy {
    private cd;
    tree: Tree;
    unFilteredValue: PngTreeNodeProps[];
    loading$: Observable<boolean>;
    filtered: boolean;
    filterValue: string;
    expandedNode: TreeNode;
    templateNames: {
        icon: string;
        node: string;
    };
    onEmptyNode: EventEmitter<{}>;
    onLazyLoad: EventEmitter<{}>;
    $defaultProps: PngTreeProps;
    selectedNode: {};
    selectedNodeValues: {}[];
    modelFormatter: (model: any) => any;
    valueParser: (value: any) => any;
    constructor(cd: ChangeDetectorRef);
    private _selection;
    selection: TreeNode | TreeNode[];
    onPropsInit(): void;
    load(): void;
    formatModel(model: any): any;
    parseValue(value: any): any;
    expandAll(): void;
    collapseAll(): void;
    filter(event: any): void;
    applyFilter(filterValue: string): {}[];
    clearFilter(): void;
    getSelectedNodeValues(node: any): {}[];
    onNodeExpand(event: any): void;
    onNodeSelect(event: any): void;
    onNodeUnSelect(event: any): void;
    onTreeDataReady(event: any): void;
    initSelection(treeNodes: any): void;
    ngOnDestroy(): void;
    private getSelectedNodeValue;
    private createTreeNodes;
    private resolveNode;
}
