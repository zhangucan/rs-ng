{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@er/primeng/lib/components/auto-complete/type.ts","ng://@er/primeng/lib/components/auto-complete/component.ts","ng://@er/primeng/lib/components/button/component.ts","ng://@er/primeng/lib/components/buttons/component.ts","ng://@er/primeng/lib/components/calendar/type.ts","ng://@er/primeng/lib/components/calendar/component.ts","ng://@er/primeng/lib/components/chart/component.ts","ng://@er/primeng/lib/components/check-box/type.ts","ng://@er/primeng/lib/components/check-box/component.ts","ng://@er/primeng/lib/components/confirm/defaults.ts","ng://@er/primeng/lib/components/confirm/component.ts","ng://@er/primeng/lib/components/file-upload/type.ts","ng://@er/primeng/lib/components/file-upload/component.ts","ng://@er/primeng/lib/components/image/component.ts","ng://@er/primeng/lib/components/input/component.ts","ng://@er/primeng/lib/components/list/type.ts","ng://@er/primeng/lib/components/list/component.ts","ng://@er/primeng/lib/components/multi-select/type.ts","ng://@er/primeng/lib/components/multi-select/component.ts","ng://@er/primeng/lib/components/notify.alert/component.ts","ng://@er/primeng/lib/components/notify.announce/component.ts","ng://@er/primeng/lib/components/option-item/component.ts","ng://@er/primeng/lib/components/overlay-panel/component.ts","ng://@er/primeng/lib/components/panel/component.ts","ng://@er/primeng/lib/components/popup/defaults.ts","ng://@er/primeng/lib/components/popup/component.ts","ng://@er/primeng/lib/components/radio/type.ts","ng://@er/primeng/lib/components/radio/component.ts","ng://@er/primeng/lib/components/rating/type.ts","ng://@er/primeng/lib/components/rating/component.ts","ng://@er/primeng/lib/components/search-box/component.ts","ng://@er/primeng/lib/components/select-button/type.ts","ng://@er/primeng/lib/components/select-button/component.ts","ng://@er/primeng/lib/components/select/type.ts","ng://@er/primeng/lib/components/select/component.ts","ng://@er/primeng/lib/components/slider/type.ts","ng://@er/primeng/lib/components/slider/component.ts","ng://@er/primeng/lib/components/table/default.ts","ng://@er/primeng/lib/components/table/util/index.ts","ng://@er/primeng/lib/components/table/component/table/component.ts","ng://@er/primeng/lib/components/tool-tip/component.ts","ng://@er/primeng/lib/components/tree/types.ts","ng://@er/primeng/lib/components/tree/component.ts","ng://@er/primeng/lib/components/tree-nav-table/component.ts","ng://@er/primeng/lib/components/wizard/step.component.ts","ng://@er/primeng/lib/components/wizard/component.ts","ng://@er/primeng/lib/components/all.ts","ng://@er/primeng/lib/work-space/component.ts","ng://@er/primeng/lib/shared/shared.module.ts","ng://@er/primeng/lib/components/table/component/body-cell/component.ts","ng://@er/primeng/lib/components/table/component/body-cell-content/component.ts","ng://@er/primeng/lib/components/table/component/body-row/component.ts","ng://@er/primeng/lib/components/table/component/caption/component.ts","ng://@er/primeng/lib/components/table/component/column-selector/component.ts","ng://@er/primeng/lib/components/table/component/expanded-row/component.ts","ng://@er/primeng/lib/components/table/component/footer/component.ts","ng://@er/primeng/lib/components/table/component/head-col/component.ts","ng://@er/primeng/lib/components/table/component/header/component.ts","ng://@er/primeng/lib/components/table/component/query/field-filter/component.ts","ng://@er/primeng/lib/components/table/component/query/fields-builder/component.ts","ng://@er/primeng/lib/components/table/component/query/input/component.ts","ng://@er/primeng/lib/components/table/component/summary/component.ts","ng://@er/primeng/lib/components/table/all.ts","ng://@er/primeng/lib/er-primeng.module.ts","ng://@er/primeng/lib/work-space/footer/component.ts","ng://@er/primeng/lib/work-space/header/component.ts","ng://@er/primeng/lib/work-space/menu/component.ts","ng://@er/primeng/lib/work-space/menu/sub-menu/component.ts","ng://@er/primeng/lib/work-space/profile/component.ts","ng://@er/primeng/lib/work-space/module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","DEFAULT_PNG_AUTO_COMPLETE_PROPS","minLength","size","dropdown","forceSelection","$ext","apiDataProps","dataPath","autoFetch","PngAutoCompleteComponent","_this","_super","valueParser","parseValue","$defaultProps","tslib_1.__extends","onPropsInit","placeholder","$props","withPrefix","withTerm","withWildcard","withPy","withZh","dataItemProps","field","CommonsUtils","isString","labelKey","showCounter","aggProps","fields","returnFields","complete","event","queryValue","query","Component","args","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","DataAwareControlWrapperComponent","PngButtonComponent","defineProperty","hidden","getValue","outputContext","btnProps","copy","menu","forEach","item","command","command_1","onMenuCommand","DEFAULT_BUTTON_PROPS","setState","state","icon","WrapperComponent","PngButtonsComponent","btns","some","btn","overlay","toggle","panel","Input","BaseComponent","DEFAULT_CALENDAR_PROPS","dateFormat","hourFormat","locale","firstDayOfWeek","dayNames","dayNamesShort","dayNamesMin","monthNames","monthNamesShort","today","clear","monthNavigator","yearNavigator","showIcon","readonlyInput","yearRange","showButtonBar","PngCalendarComponent","modelFormatter","formatter","DateUtils","getDay","templateNames","header","footer","date","model","toDate","ControlWrapperComponent","PngChartComponent","type","ChartType","BAR","plugins","responsive","switchable","onDataSelect","EventEmitter","data$","BehaviorSubject","undefined","chartTypes","label","PIE","LINE","RADAR","AREA","DOUGHNUT","data","ngOnChanges","changes","rawData","buildChart","changeType","reBuildChart","$id","IdUtils","getRandom","resolvedRawData","dataSource","ds","resolveDataSource","method","ApiUtils","batchFetch","subscribe","isEmpty","datasets_1","labels_1","isFunction","dimensions","getArrayValue","dimension","index","resolveDimension","chartData","ChartUtils","buildChartData","datasets","labels","changeDetection","ChangeDetectionStrategy","OnPush","Output","DEFAULT_CHECK_BOX_PROPS","inline","PngCheckBoxComponent","formatModel","_chkValue","values","isArray","objectValues_1","matched","filter","v","dataKey","DataItemUtils","getItemValue","valueKey","get","models","isJson","DEFAULT_CONFIRM_DIALOG_PROPS","width","closeOnEscape","rtl","closable","acceptLabel","acceptIcon","acceptVisible","rejectLabel","rejectIcon","rejectVisible","PngConfirmDialogComponent","confirmationService","cd","options","onAccept","onReject","dlgOptions","ngOnInit","content","acceptEvent","rejectEvent","$subscriptions","StatesUtils","observe","StateNames","confirm","pipe","open","getConfirmation","detectChanges","modal","message","accept","bind","reject","emit","context","ConfirmationService","ChangeDetectorRef","DEFAULT_PNG_FILE_UPLOAD_PROPS","name","files","multiple","previewWidth","invalidFileSizeMessageSummary","invalidFileSizeMessageDetail","invalidFileTypeMessageSummary","invalidFileTypeMessageDetail","chooseLabel","uploadLabel","cancelLabel","attrsName","waterMark","maxSize","maxHeight","maxWidth","smallSize","storeTo","PngFileUploadComponent","imageToolsService","sanitizer","selectedFiles$","uploadedFiles","showUpload","uploadProgress$","Subject","processing$","fileAttrs","fileIcon","file","ext","fileUpload","getFileExtension","toLowerCase","substring","indexOf","writeValue","url","ConfigUtils","getConfig","api","servers","image","uri","LogUtils","debug","onSelect","this_1","resizeImage","result","compressImage","final","bypassSecurityTrustUrl","URL","createObjectURL","map","f","delete","splice","remove","fileId","HttpUtils","request","HttpMethod","DELETE","resp","success","setFileAttr","target","onBeforeSend","formData","append","keys","key","onProgress","progress","onUploadSuccess","_b","__values","tslib_1.__values","_c","response","JSON","parse","xhr","responseText","notify","title","k","onUploadFailed","level","NotifyLevel","ERROR","ImageToolsService","DomSanitizer","ViewChild","PngImageComponent","imageViewStyle","max-height","max-width","overflow","showDescription","descriptionChange","_description","description","fileId_1","src","images","fullImage","source","responseType","HttpResponseType","BLOB","objectURL","window","body","descriptions","headers","getAll","viewImage","imageViewer","show","center","DialogUtils","info","imageViewTpl","PngInputComponent","DEFAULT_PNG_LIST_BOX_PROPS","optionLabel","checkbox","showToggleAll","itemStyleClass","PngListBoxComponent","DEFAULT_PNG_MULTI_SELECT_PROPS","defaultLabel","selectedItemsLabel","PngMultiSelectComponent","DEFAULT_ALERT_PROPS","animation","duration","immutable","autoZIndex","position","UiPosition","rightTop","PngAlertComponent","messageService","alert","defaultNotifyType","NotifyType","ALERT","getNotifyModel","add","severity","INFO","summary","detail","sticky","life","MessageService","DEFAULT_ANNOUNCE_PROPS","baseZIndex","PngAnnounceComponent","announce","ANNOUNCE","PngOptionItemComponent","_label","getItemLabel","props","dropDownOptionKey","PngOverlayPanelComponent","hide","OverlayPanel","PngPanelComponent","collapsed","toggleable","showHeader","ngAfterViewInit","titleBar","panelEle","nativeElement","querySelector","barStyleClass","DomUtils","addClasses","barStyle","DiUtils","Renderer2","setStyle","read","ElementRef","DEFAULT_POPUP_DIALOG_PROPS","draggable","minHeight","minWidth","resizable","dismissableMask","maximizable","blockScroll","breakpoint","showFooter","closeLabel","closeIcon","PngPopupDialogComponent","onClose","onAction","dlgOptions$","of","resolveDlgOptions","popup","takeUntil","destroyed$","opt","contentMaxHeight","contentMaxWidth","contentStyle","showEvent","dlg","emitEvent","scope","closeDlg","canClose","visible","DEFAULT_RADIO_PROPS","PngRadioComponent","_rbValue","DEFAULT_PNG_RATING_PROPS","stars","iconOnClass","iconOffClass","iconCancelClass","PngRatingComponent","PngSearchBoxComponent","searched","onSearch","onSearchChange","search","searchKey","keyChange","clearSearch","showHelp","DEFAULT_SELECT_BUTTON_PROPS","PngSelectButtonComponent","DEFAULT_PNG_SELECT_PROPS","autoWidth","showClear","editable","PngSelectComponent","group","groupKey","Dropdown","DEFAULT_PNG_SLIDER_PROPS","min","max","range","orientation","PngSliderComponent","join","initValue","defaultPngColumnProps","cellStyleClass","sortable","filterable","aggable","defaultPngTableProps","tableStyleClass","alwaysShowPaginator","autoLayout","columnResizeMode","compareSelectionBy","defaultSortOrder","resizableColumns","reorderableColumns","filterDelay","filters","rowHover","loadingIcon","lazy","lazyLoadOnInit","rows","pageLinks","rowsPerPageOptions","paginator","paginatorPosition","rowExpandMode","sortMode","sortOrder","emptyMessage","hasColumnSelector","columnSelectorStyleClass","rowHeight","rowActionsPlaceAhead","frozenActionColumn","hasSearchInput","hasSearchBox","hasRowIndex","hasRowCheckbox","hasHeaderSummary","hasPaginatorLeft","hasPaginatorRight","rowExpandable","hasAddAction","hasDeleteAction","hasAuditAction","hasDownloadAction","routerOutlet","addRouter","viewRouter","editRouter","auditRouter","downloadRouter","defaultRowIndexColumn","cellClass","order","isDataColumn","cellContent","rowIndex","defaultActionColumn","dataAttr","DataAttr","BUTTONS","isActionColumn","defaultAddButton","styleClass","onClick","pngTable","navigate","tableId","defaultViewButton","row","defaultEditButton","defaultDeleteButton","deleteById","apiEntry","load","update","deleted","defaultAuditButton","action","defaultDownloadButton","PngTableUtils","resolveColumnByDataField","column","dataField","merge","DataFieldUtils","getFieldDefaultProps","_a","dataType","sortKey","DataType","getDefaultFieldName","id","defaults","pickBy","lodash","identity","PngTableComponent","router","activatedRoute","OVERLAY_TYPE","OverlayType","bodyData$","columns$","caption","spanHeader","headerSummary","frozenRows","cell","dataCell","footerSummary","colGroup","rowExpansion","paginatorLeft","paginatorRight","eventQuery","selectedRows","switch","entity","columns","resoleActionsColumn","order_1","scrollable","scrollWidth","endsWith","overlays","headerOverlays","virtualScroll","set","frozenColumns","frozen","frozenWidth_1","Number","substr","frozenWidth","updateColumns","getApiDataProps","skip","table","first","dataItems","items","total","component","sort","a","dataColumns","fetch","dataColumnNames","compact","updateColAggKeys","column_1","aggProps_1","methods","aggKey","AggMethodsProps","updateColFilters","updateSimpleSearch","simpleQuery","esb.simpleQueryStringQuery","getColumnByKey","getRowStyleClass","rowStyleClass","getRowStyle","style","rowStyle","getHeaderStyleClass","headerStyleClass","getHeaderStyle","headerStyle","rowSelect","updateTouch","markForCheck","onDataReady","showOverlay","ctx","overlayContext","dismissable","showCloseIcon","overlayPanel","$event","hidePanel","resetQuery","complexQuery","resetForeignQuery","commands","params","outlets","relativeTo","skipLocationChange","queryParams","ngOnDestroy","deleteState","getTableQuery","getColumnsFilters","gApiDataProps","apiFilter","getColumnsAggs","tableMetaData","createLazyLoadMetadata","tableSort","sortField","Order","ASC","DESC","filterDataType","STRING","NUMBER","DATE","esb.rangeQuery","filterKey","gte","lte","esb.matchQuery","aggs","actionColumn","actionColumnIndex","removeByIndex","addBtn","buttons","hasViewAction","hasEditAction","tableQuery","from","requestOptions","tag","Router","ActivatedRoute","Menu","ValidateMessageTooltipComponent","domHandler","controlContainer","tooltipPosition","control","form","formDirective","FormUtils","getFormControl","path","controlName","onMouseEnter","invalid","showErrMsg","onMouseLeave","onFocusIn","onFocusOut","onKeyup","errorMessage","getErrorMsg","errMsgs","ValidateUtils","getErrorMessage","errors","messages","container","findSingle","innerText","left","top","offset","getOffset","in","targetTop","targetLeft","display","getOuterWidth","getOuterHeight","zIndex","document","createElement","tooltipStyleClass","className","tooltipArrow","appendChild","tooltipText","innerHTML","positionStyle","parentElement","removeChild","DomHandler","ControlContainer","decorators","Optional","HostListener","PNG_TREE_NODE_KEYS","idKey","parentKey","childrenKey","leafKey","expandedKey","DEFAULT_PNG_TREE_PROPS","max-height.px","max-width.px","nodesFormat","autoExpandLevel","expandedIcon","collapsedIcon","PngTreeComponent","node","onEmptyNode","onLazyLoad","_selection","selection","filtered","loading$","HTTP_TAG_STATE$","selectedNodeValues","flattenDeep","getSelectedNodeValues","flatten","unique","orderBy","expandAll","TreeUtils","expandNode","collapseAll","applyFilter","filterValue","unFilteredValue","py","PinyinUtil","getFirstLetter","sVal","sLab","test","startsWith","RegUtils","clearFilter","getSelectedNodeValue","onNodeExpand","expandedNode","children","getEventContext","resolveNode","onNodeSelect","selectedNode","onNodeUnSelect","onTreeDataReady","treeNodes","createTreeNodes","initSelection","nodeId","parent","tree","propagateUp","found","findNode","nodes","val","typeKey","transNodes","root","initNode","rootNode","virtualRoot","child","PngTreeNavTableComponent","hideTree","events","NavigationEnd","isFormOutlet","isRestore","refresh","_isFormOutlet","formOutlet","pngTree","refreshTree","beforeRoutePropsBind","afterRoutePropsBind","$container","closeTree","back","aux","animations","ANIMATIONS","zoomIn","fadeIn","RouteBindComponent","PngStepComponent","active","PngWizardComponent","activeIndex","stepChange","ngAfterContentInit","steps","toArray","step","stepStyleClass","prop","curIndex_1","currentValue","selected","previous","previousValue","firstChange","isFirstChange","ContentChildren","PngComponents","STATIC","OVERLAY","SLIM","HORIZONTAL","PngAdminWorkSpaceComponent","renderer","menuOrientation","MenuOrientation","darkMenu","onInitMenu","profileMode","rootMenuToggleStateName","topbar","main","profile","settings","notifications","_toggleMainMenu","appTitle","appName","appLogo","setTimeout","layoutMenuScrollerViewChild","moveBar","onLayoutClick","topbarItemClick","activeTopbarItem","topbarMenuActive","menuClick","isHorizontal","isSlim","resetMenu","overlayMenuActive","staticMenuMobileActive","hideOverlayMenu","menuHoverActive","onMenuClick","onTopbarMenuButtonClick","preventDefault","onTopbarItemClick","onTopbarSubItemClick","rotateMenuButton","isTablet","innerWidth","isDesktop","isMobile","isOverlay","changeToStaticMenu","changeToOverlayMenu","changeToHorizontalMenu","changeToSlimMenu","rootMenu","dark","staticMenuDesktopInactive","PrimeNgComponentsModule","NgModule","exports","AutoCompleteModule","AccordionModule","BreadcrumbModule","ConfirmDialogModule","CardModule","CalendarModule","ChipsModule","CheckboxModule","ChartModule","EditorModule","InputTextModule","InputTextareaModule","FieldsetModule","DialogModule","ButtonModule","FileUploadModule","MessagesModule","KeyFilterModule","TableModule","TabViewModule","MultiSelectModule","SliderModule","DropdownModule","RadioButtonModule","PaginatorModule","TooltipModule","LightboxModule","ListboxModule","InputMaskModule","InputSwitchModule","OverlayPanelModule","OrganizationChartModule","PanelModule","RatingModule","TreeModule","SelectButtonModule","SplitButtonModule","SpinnerModule","MenuModule","ScrollPanelModule","StepsModule","ToastModule","ToggleButtonModule","PngTableBodyCellComponent","height","cellContext","onMouseOver","onMouseOut","HostBinding","PngTableBodyCellContentComponent","DATA_ATTR","DATA_TYPE","defaultCellContent","contentKey","format","isTemplateStr","templateStr","getFieldDisplayContent","maxLength","cellIcon","toolTip","cellStyle","routLink","routeParams","routerLink","routParam","param","routQueryParams","params_1","iconClass","trim","hasAttr","attr","overlayStyleClass","overlayStyle","treeContent","overlayTreeContext","TREE","MENU","cellClick","toggleTip","tipText","ViewChildren","SelectorDirective","PngTableBodyRowComponent","expanded","chk","tableService","selectionSource$","colContext","col","rowContext","getColStyleClass","getColStyle","PngTableCaptionComponent","onSimpleSearch","openPanel","searchBuilderPanel","PngTableColumnSelectorComponent","onColumnsChange","changeColumns","PngTableExpandedRowComponent","customerContent","rowId","onExpandRowContent","expandContent$","getById","payload","expandRowFields","rowData","console","log","c","trans_1","sub","getText","PngTableFooterComponent","PngTableHeaderColComponent","onFilterBtnClick","onAggsBtnClick","colClass","colStyle","headerContext","filterClick","aggsClick","PngTableHeaderComponent","onFiltersSet","onAggKeysSet","showFilterPanel","filterColumn","filterPanel","clearFilterColumn","clearAggColumn","aggColumn","showAggsPanel","availableAggs","aggMethods","aggProp","dataTypes","aggPanel","setAggs","updateFilters","PngTableFieldDataFilterComponent","onFilterChange","_column","queryKey","queryDataType","queryDataAttr","_dataField","onFilter","PngTableQueryBuilderComponent","qbConfig","switches","operators","EsQueryMethods","PngQueryInputComponent","queryValueChange","isTime","autoCompleteProps$","_queryValue","autoProps","inputStyle","min-width","appendTo","searchFields","ITEM_LABEL_KEY","sliderProps","AggMethods","MAX","MIN","attrs","TIME","PngTableSummaryComponent","aggValues","colAggValues","agg","aggCellClass","aggCellStyle","PngTableSubComponents","ErPrimeNgModule","imports","FormsModule","ReactiveFormsModule","ErCoreModule","declarations","entryComponents","WorkSpaceFooterComponent","ws","httpTimer","distinctUntilChanged","WorkSpaceTopBarComponent","toggleMainMenu","WorkSpaceMainMenuComponent","theme","layout","version","menus$","menuItems","changeTheme","themeLink","getElementById","href","changeLayout","special","layoutLink","changeVersion","WorkSpaceSubMenuComponent","wsMenu","_reset","_parentActive","itemClick","disabled","originalEvent","isActive","trigger","transition","animate","WorkSpaceProfileComponent","profileRouter","auth","changePwdRouter","avatar","AuthUtils","getCurrentUser","logout","change","RouteUtils","nav","PngAdminWorkSpaceModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {PngDataAwareProps} from '../../types/props';\n\nexport interface PngAutoCompleteProps extends PngDataAwareProps {\n  field?: string;\n  scrollHeight?: string;\n  dropdown?: boolean;\n  multiple?: boolean;\n  minLength?: number;\n  delay?: number;\n  inputStyle?: any;\n  inputStyleClass?: any;\n  inputId?: string;\n  placeholder?: string;\n  readonly?: boolean;\n  maxlength?: number;\n  size?: number;\n  appendTo?: any;\n  tabindex?: number;\n  dataKey?: string;\n  autoHighlight?: boolean;\n  type?: string;\n  emptyMessage?: string;\n  immutable?: boolean;\n  required?: boolean;\n  forceSelection?: boolean;\n  dropdownMode?: string;\n  completeMethod?: Function;\n  onFocus?: Function;\n  onBlur?: Function;\n  onKeyUp?: Function;\n  onSelect?: Function;\n  onUnselect?: Function;\n  onDropdownClick?: Function;\n  onClear?: Function;\n}\n\nexport const DEFAULT_PNG_AUTO_COMPLETE_PROPS: PngAutoCompleteProps = {\n  minLength: 0,\n  size: 10,\n  dropdown: true,\n  forceSelection: true,\n  $ext: {\n    apiDataProps: {\n      dataPath: 'items',\n      autoFetch: false\n    }\n  }\n};\n","import {Component, forwardRef} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DataAwareControlWrapperComponent} from '@er/core';\nimport {CommonsUtils} from '@er/utils';\nimport {DEFAULT_PNG_AUTO_COMPLETE_PROPS, PngAutoCompleteProps} from './type';\n\nexport {PngAutoCompleteProps} from './type';\n\n@Component({\n  selector: 'png-auto-complete',\n  template: `\n    <div class=\"inner-addon\">\n      <p-autoComplete\n        [(ngModel)]=\"value\"\n        erPropsBind\n        [props]=\"$props\"\n        [context]=\"ctx\"\n        [erApiData]=\"apiDataProps\"\n        (completeMethod)=\"complete($event)\"\n        [suggestions]=\"data$|async\"\n        (onBlur)=\"updateTouch()\"\n      >\n        <ng-template let-item pTemplate=\"item\">\n          <er-data-item [customerTpl]=\"template('_')\"\n                        [item]=\"item\"\n                        [props]=\"$props.$ext.dataItemProps\"\n          >\n          </er-data-item>\n        </ng-template>\n      </p-autoComplete>\n      <i *ngIf=\"value && resettable && !disabled\" title=\"æ¸é¤è¾å¥åå®¹\" class=\"fa fa-trash text-muted right\" [ngClass]=\"$props.dropdown? 'clear1': 'clear2'\" (click)=\"reset()\"></i>\n    </div>\n  `,\n  styleUrls: ['styles.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PngAutoCompleteComponent),\n    multi: true\n  }]\n})\n\nexport class PngAutoCompleteComponent extends DataAwareControlWrapperComponent<PngAutoCompleteProps> {\n\n  valueParser = this.parseValue;\n\n  $defaultProps = DEFAULT_PNG_AUTO_COMPLETE_PROPS;\n\n  onPropsInit() {\n    super.onPropsInit();\n    let placeholder = 'è¯·è¾å¥';\n    if (this.$props.$ext.apiDataProps) {\n\n      if (!this.$props.$ext.apiDataProps.withPrefix &&\n        !this.$props.$ext.apiDataProps.withTerm &&\n        !this.$props.$ext.apiDataProps.withWildcard) {\n        this.$props.$ext.apiDataProps.withPy = this.$props.$ext.apiDataProps.withPy || true;\n        this.$props.$ext.apiDataProps.withZh = this.$props.$ext.apiDataProps.withZh || true;\n      }\n\n      if (!this.$props.placeholder) {\n        if (this.$props.$ext.apiDataProps.withPy) {\n          placeholder += 'æ¼é³é¦å­æ¯ï¼';\n        }\n        if (this.$props.$ext.apiDataProps.withZh) {\n          placeholder += 'æ±å­å³é®å­';\n        }\n        placeholder += 'ç­é';\n        this.$props.placeholder = placeholder;\n      }\n    }\n\n    if (this.$props.$ext.dataItemProps) {\n      if (!this.$props.field && CommonsUtils.isString(this.$props.$ext.dataItemProps.labelKey)) {\n        this.$props.field = <string>this.$props.$ext.dataItemProps.labelKey;\n      }\n      if (this.$props.$ext.dataItemProps.showCounter) {\n        if (!this.$props.$ext.apiDataProps.aggProps) {\n          const fields = this.$props.$ext.apiDataProps.returnFields;\n          this.$props.$ext.apiDataProps.aggProps = fields;\n        }\n      }\n    }\n  }\n\n  complete(event) {\n    this.apiDataProps = {\n      ...this.apiDataProps,\n      queryValue: event.query\n    };\n  }\n}\n","import {Component} from '@angular/core';\nimport {WrapperComponent} from '@er/core';\nimport {DEFAULT_BUTTON_PROPS} from '@er/presets';\nimport {ButtonProps} from '@er/types';\nimport {CommonsUtils} from '@er/utils';\n\n@Component({\n  selector: 'png-button',\n  templateUrl: 'tpl.html'\n})\nexport class PngButtonComponent extends WrapperComponent<ButtonProps> {\n\n  icon: string;\n\n  get isHidden() {\n    if (this.$props && this.$props.hidden) {\n      return CommonsUtils.getValue(this.$props.hidden, this.outputContext) || false;\n    }\n    return false;\n  }\n\n  onPropsInit() {\n    const btnProps = CommonsUtils.copy(this.$props || {});\n    if (btnProps.menu) {\n      btnProps.menu.forEach(item => {\n        if (item.command) {\n          const command = item.command;\n          item.command = (event) => this.onMenuCommand(command, event);\n        }\n      });\n    }\n    this.$props = {\n      ...DEFAULT_BUTTON_PROPS,\n      ...btnProps\n    };\n  }\n\n  onMenuCommand(command, event) {\n    command.call(this, {\n      ...event || {},\n      ...this.outputContext || {}\n    });\n  }\n\n  setState(state) {\n    this.icon = state ? 'fa fa-cog fa-spin' : this.$props['icon'];\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {ButtonProps} from '@er/types';\n\n@Component({\n  selector: 'png-buttons',\n  templateUrl: 'tpl.html',\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PngButtonsComponent extends BaseComponent {\n\n  @Input() context: any;\n\n  @Input() btns: ButtonProps[];\n\n  @Input() style: {};\n\n  @Input() styleClass: string;\n\n  get hasOverlay() {\n    return this.btns && this.btns.some(btn => !!btn.overlay);\n  }\n\n  toggle(event, panel) {\n    panel.toggle(event);\n  }\n\n}\n","import {PngProps} from '../../types/props';\n\n\nexport const CALENDAR_LOCAL_CN = {\n  firstDayOfWeek: 0,\n  dayNames: ['å¨æ¥', 'å¨ä¸', 'å¨äº', 'å¨ä¸', 'å¨å', 'å¨äº', 'å¨å­'],\n  dayNamesShort: ['å¨æ¥', 'å¨ä¸', 'å¨äº', 'å¨ä¸', 'å¨å', 'å¨äº', 'å¨å­'],\n  dayNamesMin: ['å¨æ¥', 'å¨ä¸', 'å¨äº', 'å¨ä¸', 'å¨å', 'å¨äº', 'å¨å­'],\n  monthNames: ['ä¸æ', 'äºæ', 'ä¸æ', 'åæ', 'äºæ', 'å­æ', 'ä¸æ', 'å«æ', 'ä¹æ', 'åæ', 'åä¸æ', 'åäºæ'],\n  monthNamesShort: ['ä¸æ', 'äºæ', 'ä¸æ', 'åæ', 'äºæ', 'å­æ', 'ä¸æ', 'å«æ', 'ä¹æ', 'åæ', 'åä¸æ', 'åäºæ'],\n  today: 'ä»å¤©',\n  clear: 'æ¸é¤'\n};\n\nexport interface PngCalendarProps extends PngProps {\n  defaultDate?: Date;\n  inputStyle?: any;\n  inputId?: string;\n  inputStyleClass?: string;\n  placeholder?: string;\n  dateFormat?: string;\n  inline?: boolean;\n  showOtherMonths?: boolean;\n  selectOtherMonths?: boolean;\n  showIcon?: boolean;\n  icon?: string;\n  locale?: {};\n  appendTo?: any;\n  readonlyInput?: boolean;\n  shortYearCutoff?: any;\n  monthNavigator?: boolean;\n  yearNavigator?: boolean;\n  yearRange?: string;\n  hourFormat?: string;\n  timeOnly?: boolean;\n  showTime?: boolean;\n  stepHour?: number;\n  stepMinute?: number;\n  stepSecond?: number;\n  showSeconds?: boolean;\n  showOnFocus?: boolean;\n  dataType?: string;\n  selectionMode?: string;\n  maxDateCount?: number;\n  showButtonBar?: boolean;\n  todayButtonStyleClass?: string;\n  clearButtonStyleClass?: string;\n  autoZIndex?: boolean;\n  baseZIndex?: number;\n  panelStyleClass?: string;\n  panelStyle?: any;\n  keepInvalid?: boolean;\n  hideOnDateTimeSelect?: boolean;\n  numberOfMonths?: number;\n  view?: string;\n  touchUI?: boolean;\n  onSelect?: (event) => void;\n  onBlur?: (event) => void;\n  onFocus?: (event) => void;\n  onClose?: (event) => void;\n  onInput?: (event) => void;\n  onTodayClick?: (event) => void;\n  onClearClick?: (event) => void;\n  onMonthChange?: (event) => void;\n  onYearChange?: (event) => void;\n\n}\n\nexport const DEFAULT_CALENDAR_PROPS: PngCalendarProps = {\n  dateFormat: 'yy-mm-dd',\n  hourFormat: '24',\n  locale: CALENDAR_LOCAL_CN,\n  monthNavigator: true,\n  yearNavigator: true,\n  showIcon: true,\n  readonlyInput: false,\n  yearRange: '2000:2030',\n  showButtonBar: true\n};\n","import {Component, forwardRef} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {ControlWrapperComponent} from '@er/core';\nimport {DateUtils} from '@er/utils';\nimport {DEFAULT_CALENDAR_PROPS, PngCalendarProps} from './type';\n\nexport {PngCalendarProps} from './type';\n\n@Component({\n  selector: 'png-calendar',\n  template: `\n    <p-calendar\n      [(ngModel)]=\"value\"\n      erPropsBind\n      [props]=\"$props\"\n      [context]=\"ctx\"\n      [monthNavigator]=\"$props.monthNavigator\"\n      [yearNavigator]=\"$props.yearNavigator\"\n      [yearRange]=\"$props.yearRange\"\n      (onBlur)=\"updateTouch()\"\n    >\n      <p-header *ngIf=\"template(templateNames.header)\">\n        <ng-container *ngTemplateOutlet=\"template(templateNames.header)\"></ng-container>\n      </p-header>\n\n      <p-footer *ngIf=\"template(templateNames.footer)\">\n        <ng-container *ngTemplateOutlet=\"template(templateNames.footer)\"></ng-container>\n      </p-footer>\n      \n      <ng-template pTemplate=\"date\" let-date>\n        <ng-container *ngTemplateOutlet=\"template(templateNames.date, dateTpl);context:{$implicit: date}\"></ng-container>\n      </ng-template>\n    </p-calendar>\n\n    <ng-template #dateTpl let-date>\n      <span [ngClass]=\"{'bg-red white': (date.day === today)}\"\n            style=\"border-radius:50%;\">{{date.day}}</span>\n    </ng-template>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PngCalendarComponent),\n    multi: true\n  }]\n})\n\nexport class PngCalendarComponent extends ControlWrapperComponent<PngCalendarProps> {\n\n  modelFormatter = this.formatter;\n\n  today = DateUtils.getDay();\n\n  templateNames = {\n    header: 'header',\n    footer: 'footer',\n    date: 'date'\n  };\n\n  $defaultProps = DEFAULT_CALENDAR_PROPS;\n\n  formatter(model) {\n    if (model) {\n      return DateUtils.toDate(model);\n    }\n  }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {ApiUtils, BaseComponent} from '@er/core';\nimport {ApiDataProps, ChartDataProps, ChartDataSetsProps, ChartDimension, ChartType, DataItemProps, DataSource} from '@er/types';\nimport {ChartUtils, CommonsUtils, IdUtils} from '@er/utils';\nimport {Query} from 'elastic-builder';\nimport {BehaviorSubject} from 'rxjs';\n\n@Component({\n  selector: 'png-chart',\n  template: `\n    <p-panel [toggleable]=\"true\" [showHeader]=\"!!caption\">\n      <p-header>\n        <i [ngClass]=\"captionIcon || 'fa fa-bar-chart'\"></i>\n        <span [innerHTML]=\"caption|erSafeHtml\"></span>\n        <ng-container *ngTemplateOutlet=\"templates[templateNames.header]\"></ng-container>\n      </p-header>\n      <er-http-status class=\"mr-2\" [tag]=\"$id\"></er-http-status>\n      <div class=\"p-3\" *ngIf=\"switchable\">\n        <p-selectButton erPosition=\"center\" [options]=\"chartTypes\" [(ngModel)]=\"type\" (onChange)=\"changeType()\"></p-selectButton>\n      </div>\n      <p-chart\n        [type]=\"type\"\n        [options]=\"options\"\n        [data]=\"data$|async\"\n        [plugins]=\"plugins\"\n        [width]=\"width \"\n        [height]=\"height\"\n        [responsive]=\"responsive\"\n        (onDataSelect)=\"onDataSelect.emit($event)\"\n      >\n      </p-chart>\n    </p-panel>\n\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PngChartComponent extends BaseComponent implements OnInit, OnChanges {\n\n  @Input() $id: string;\n  @Input() type = ChartType.BAR;\n  @Input() rawData: {}[];\n  @Input() options: {};\n  @Input() caption: string;\n  @Input() captionIcon: string;\n  @Input() query?: Query | Query[];\n  @Input() plugins: any[] = [];\n  @Input() width: string;\n  @Input() height: string;\n  @Input() responsive = true;\n  @Input() switchable = true;\n  @Input() dataSource: DataSource | ApiDataProps | ApiDataProps[];\n  @Input() dataItemProps: DataItemProps;\n  @Input() dimensions: ChartDimension | ChartDimension[] | ((rawData) => ChartDataProps);\n  @Input() resolveDataSource: { method: ((ds: DataSource) => DataSource) };\n  @Input() resolveDimension: { method: ((dimension: ChartDimension) => ChartDimension) };\n\n  templateNames = {\n    header: 'header'\n  };\n\n  @Output() onDataSelect: EventEmitter<any> = new EventEmitter();\n\n  data$: BehaviorSubject<{}> = new BehaviorSubject<{}>(undefined);\n\n  chartTypes = [\n    {label: 'æ±ç¶å¾', value: ChartType.BAR, icon: 'fa fa-bar-chart'},\n    {label: 'åé¥¼å¾', value: ChartType.PIE, icon: 'fa fa-pie-chart'},\n    {label: 'æ²çº¿å¾', value: ChartType.LINE, icon: 'fa fa-line-chart'},\n    {label: 'é·è¾¾å¾', value: ChartType.RADAR, icon: 'fa fa-bar'},\n    {label: 'åºåå¾', value: ChartType.AREA, icon: 'fa fa-area-chart'},\n    {label: 'ç¯å½¢å¾', value: ChartType.DOUGHNUT, icon: 'fa fa-circle'}\n  ];\n\n  @Input() get data() {\n    return this.data$.value;\n  }\n\n  set data(data) {\n    this.data$.next(data || {});\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.rawData = undefined;\n    this.buildChart();\n  }\n\n  changeType() {\n    this.buildChart();\n  }\n\n  reBuildChart() {\n    this.rawData = undefined;\n    this.buildChart();\n  }\n\n  buildChart() {\n    if (!this.$id) {\n      this.$id = IdUtils.getRandom();\n    }\n    if (this.rawData) {\n      this.resolvedRawData(this.rawData);\n    } else if (this.dataSource) {\n      let ds = this.dataSource;\n      if (!ds.hasOwnProperty('apiDataProps')) {\n        const apiDataProps = ds;\n        ds = {};\n        ds['apiDataProps'] = apiDataProps;\n      }\n\n      if (this.resolveDataSource) {\n        ds = this.resolveDataSource.method(<DataSource>ds);\n      }\n\n      ApiUtils.batchFetch(ds, this.$id)\n        .subscribe(data => {\n          this.rawData = data;\n          this.resolvedRawData(this.rawData);\n        });\n    }\n  }\n\n  resolvedRawData(rawData) {\n    if (!CommonsUtils.isEmpty(rawData)) {\n      let data: ChartDataProps;\n      const datasets: ChartDataSetsProps[] = [];\n      let labels: string[] = [];\n      if (CommonsUtils.isFunction(this.dimensions)) {\n        data = (<Function>this.dimensions)(rawData);\n      } else {\n        if (this.dimensions) {\n          const dimensions = CommonsUtils.getArrayValue(this.dimensions);\n          dimensions.forEach((dimension, index) => {\n            if (this.resolveDimension) {\n              dimension = this.resolveDimension.method(dimension);\n            }\n            const chartData = ChartUtils.buildChartData(rawData, {\n              type: this.type,\n              dimension: dimension,\n              dataItemProps: this.dataItemProps\n            }, index);\n            datasets.push(...chartData.datasets);\n            if (labels.length === 0) {\n              labels = chartData.labels;\n            }\n          });\n          data = {labels, datasets};\n        } else {\n          data = ChartUtils.buildChartData(rawData, {\n            type: this.type,\n            dataItemProps: this.dataItemProps\n          });\n        }\n      }\n      this.data = data;\n    } else {\n      this.data = {};\n    }\n  }\n}\n","import {ApiDataProps, DataItemProps} from '@er/types';\nimport {PngProps} from '../../types/props';\n\nexport interface PngCheckboxProps extends PngProps {\n  label?: string;\n  labelStyleClass?: string;\n  $ext: {\n    inline?: boolean;\n    dataItems?: {}[];\n    apiDataProps?: ApiDataProps,\n    dataItemProps?: DataItemProps\n  };\n}\n\nexport const DEFAULT_CHECK_BOX_PROPS: PngCheckboxProps = {\n  $ext: {\n    inline: true\n  }\n};\n","import {Component, forwardRef} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DataAwareControlWrapperComponent} from '@er/core';\nimport {CommonsUtils, DataItemUtils} from '@er/utils';\nimport {DEFAULT_CHECK_BOX_PROPS, PngCheckboxProps} from './type';\n\nexport {PngCheckboxProps} from './type';\n\n@Component({\n  selector: 'png-check-box',\n  template: `\n    <ng-container *ngIf=\"$props.label;else multiTpl\">\n      <p-checkbox\n        class=\"m-2\"\n        [(ngModel)]=\"value\"\n        erPropsBind\n        [props]=\"$props\"\n        [context]=\"ctx\"\n        binary=\"true\"\n        (onChange)=\"updateTouch()\"\n      >\n      </p-checkbox>\n    </ng-container>\n    <ng-template #multiTpl>\n      <div class=\"d-flex pb-2\"\n           [ngClass]=\"$props.$ext['inline']===false?'flex-column':'flex-wrap'\"\n           [erApiData]=\"apiDataProps\"\n      >\n        <ng-container *ngFor=\"let option of data$|async|erDataItems:$props.$ext.dataItemProps;let i=index\">\n          <span class=\"d-flex align-items-center\">\n             <p-checkbox\n               class=\"m-2\"\n               [(ngModel)]=\"chkValue\"\n               [attr.index]=\"i\"\n               erPropsBind\n               [props]=\"$props\"\n               [context]=\"ctx\"\n               [value]=\"option.data|erValue:dataKey\"\n               (onChange)=\"updateTouch()\"\n             >\n             </p-checkbox>\n             <span class=\"mr-4\" [innerHTML]=\"option.label|erSafeHtml\"></span>\n          </span>\n        </ng-container>\n      </div>\n    </ng-template>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PngCheckBoxComponent),\n    multi: true\n  }]\n})\n\nexport class PngCheckBoxComponent extends DataAwareControlWrapperComponent<PngCheckboxProps> {\n\n  valueParser = this.parseValue;\n\n  modelFormatter = this.formatModel;\n\n  $defaultProps = DEFAULT_CHECK_BOX_PROPS;\n\n  private _chkValue: any[];\n\n\n  get chkValue(): any[] {\n    return this._chkValue;\n  }\n\n  set chkValue(values: any[]) {\n    this._chkValue = values;\n    const data = this.data$.value;\n    if (CommonsUtils.isArray(data)) {\n      const objectValues = [];\n      values.forEach(value => {\n        const matched = (<{}[]>data).filter(v => v[this.dataKey] === value);\n        if (matched.length === 1) {\n          objectValues.push(DataItemUtils.getItemValue(matched[0], this.valueKey));\n        }\n      });\n      this.value = objectValues.length > 0 ? objectValues : null;\n    } else {\n      this.value = values;\n    }\n  }\n\n  get dataKey() {\n    return CommonsUtils.get(this.$props, '$ext.dataItemProps.idKey', 'value');\n  }\n\n  get valueKey() {\n    return CommonsUtils.get(this.$props, '$ext.dataItemProps.valueKey', 'value');\n  }\n\n  formatModel(model) {\n    if (this.$props && !this.$props.label && model) {\n      const models = CommonsUtils.getArrayValue(model);\n      this._chkValue = [];\n      models.forEach(m => {\n        if (CommonsUtils.isJson(m)) {\n          this._chkValue.push(DataItemUtils.getItemValue(m, this.dataKey));\n        } else {\n          this._chkValue.push(m);\n        }\n      });\n      return models;\n    } else {\n      return model;\n    }\n  }\n}\n","import {ConfirmDialogProp} from '@er/types';\n\nexport const DEFAULT_CONFIRM_DIALOG_PROPS: ConfirmDialogProp = {\n  width: 300,\n  closeOnEscape: true,\n  rtl: false,\n  closable: true,\n  responsive: true,\n  header: 'æä½ç¡®è®¤',\n  icon: 'fa fa-question-circle-o text-danger',\n  acceptLabel: 'ç¡®å®',\n  acceptIcon: 'fa-check text-success',\n  acceptVisible: true,\n  rejectLabel: 'åæ¶',\n  rejectIcon: 'fa-close text-danger',\n  rejectVisible: true\n};\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {ConfirmDialogProp, StateNames} from '@er/types';\nimport {StatesUtils} from '@er/utils';\nimport {Confirmation, ConfirmationService} from 'primeng/api';\nimport {filter} from 'rxjs/operators';\nimport {DEFAULT_CONFIRM_DIALOG_PROPS} from './defaults';\n\n\n@Component({\n  selector: 'png-confirm-dialog',\n  template: `\n    <p-confirmDialog #dlg>\n      <p-footer>\n        <button type=\"button\" class=\"ui-button-rounded ui-button-success\" *ngIf=\"dlgOptions.acceptVisible\" pButton icon=\"pi pi-check\"\n                [label]=\"dlgOptions.acceptLabel\"\n                (click)=\"dlg.accept()\"></button>\n        <button type=\"button\" class=\"ui-button-rounded ui-button-danger\" *ngIf=\"dlgOptions.rejectVisible\" pButton icon=\"pi pi-times\"\n                [label]=\"dlgOptions.rejectLabel\"\n                (click)=\"dlg.reject()\"></button>\n      </p-footer>\n    </p-confirmDialog>`,\n  providers: [ConfirmationService],\n  styleUrls: ['styles.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PngConfirmDialogComponent extends BaseComponent implements OnInit {\n\n  @Input() header: string;\n  @Input() content: string;\n  @Input() options: ConfirmDialogProp = {};\n\n  @Output() onAccept = new EventEmitter<any>();\n  @Output() onReject = new EventEmitter<any>();\n\n  dlgOptions: ConfirmDialogProp = {};\n\n  constructor(private confirmationService: ConfirmationService, private cd: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.dlgOptions = {\n      ...DEFAULT_CONFIRM_DIALOG_PROPS,\n      header: this.header,\n      content: this.content,\n      acceptEvent: this.onAccept,\n      rejectEvent: this.onReject,\n      ...this.options\n    };\n\n    this.$subscriptions = StatesUtils.observe(StateNames.confirm)\n      .pipe(\n        filter(state => state && state.open)\n      )\n      .subscribe(state => {\n        this.open(state);\n      });\n  }\n\n  open(options?) {\n    if (options) {\n      this.dlgOptions = {\n        ...DEFAULT_CONFIRM_DIALOG_PROPS,\n        ...options\n      };\n    }\n    this.confirmationService.confirm(this.getConfirmation(this.dlgOptions));\n    this.cd.detectChanges();\n  }\n\n  getConfirmation(modal: ConfirmDialogProp): Confirmation {\n    return {\n      message: modal.content,\n      icon: modal.icon,\n      header: modal.header,\n      acceptVisible: modal.acceptVisible,\n      rejectVisible: modal.rejectVisible,\n      acceptLabel: modal.acceptLabel,\n      rejectLabel: modal.rejectLabel,\n      accept: this.accept.bind(this),\n      reject: this.reject.bind(this)\n    };\n  }\n\n  accept() {\n    this.onAccept.emit();\n    if (this.dlgOptions.onAccept) {\n      this.dlgOptions.onAccept.call(this.dlgOptions.context, true);\n    }\n    StatesUtils.create(StateNames.confirm, {\n      open: false,\n      accept: true,\n      reject: false\n    });\n  }\n\n  reject() {\n    this.onReject.emit();\n    if (this.options.onReject) {\n      this.options.onReject.call(this.options.context, false);\n    }\n    StatesUtils.create(StateNames.confirm, {\n      open: false,\n      accept: false,\n      reject: true\n    });\n  }\n}\n\n","import {PngProps} from '../../types/props';\n\nexport interface PngFileUploadProps extends PngProps {\n  name?: string;\n  url?: string;\n  method?: string;\n  multiple?: boolean;\n  accept?: string;\n  auto?: boolean;\n  withCredentials?: boolean;\n  maxFileSize?: number;\n  invalidFileSizeMessageSummary?: string;\n  invalidFileSizeMessageDetail?: string;\n  invalidFileTypeMessageSummary?: string;\n  invalidFileTypeMessageDetail?: string;\n  previewWidth?: number;\n  chooseLabel?: string;\n  uploadLabel?: string;\n  cancelLabel?: string;\n  showUploadButton?: boolean;\n  showCancelButton?: boolean;\n  mode?: 'advanced' | 'basic';\n  customUpload?: boolean;\n  files?: File[];\n  onBeforeUpload?: Function;\n  onBeforeSend?: Function;\n  onUpload?: Function;\n  onError?: Function;\n  onClear?: Function;\n  onRemove?: Function;\n  onSelect?: Function;\n  onProgress?: Function;\n  uploadHandler?: Function;\n  $ext?: {\n    attrsName?: string;\n    waterMark?: string;\n    maxSize?: number;\n    maxWidth?: number;\n    maxHeight?: number;\n    smallSize?: number;\n    largeSize?: number;\n    storeTo?: 'db' | 'file'\n  };\n}\n\nexport const DEFAULT_PNG_FILE_UPLOAD_PROPS = <PngFileUploadProps> {\n  accept: 'image/*',\n  name: 'files',\n  files: [],\n  multiple: false,\n  previewWidth: 50,\n  invalidFileSizeMessageSummary: '\"{0}: æä»¶å¤§å°æ æ, \"',\n  invalidFileSizeMessageDetail: '\"æå¤§ä¸ä¼ æä»¶å¤§å° {0}.\"',\n  invalidFileTypeMessageSummary: '\"{0}: æ æçæä»¶ç±»å, \"',\n  invalidFileTypeMessageDetail: '\"å¯ä¸ä¼ çæä»¶ç±»å: {0}.\"',\n  chooseLabel: 'éæ©',\n  uploadLabel: 'ä¸ä¼ ',\n  cancelLabel: 'åæ¶',\n  $ext: {\n    attrsName: 'attrs',\n    waterMark: 'å¬å¸åç§°',\n    maxSize: 0.5,\n    maxHeight: 200,\n    maxWidth: 300,\n    smallSize: 50,\n    storeTo: 'db'\n  }\n};\n","import {ChangeDetectorRef, Component, forwardRef, Input, OnChanges, SimpleChanges, ViewChild} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {ControlWrapperComponent, HttpUtils, LogUtils} from '@er/core';\nimport {ImageToolsService} from '@er/image-editor';\nimport {HttpMethod, NotifyLevel, StateNames} from '@er/types';\nimport {CommonsUtils, ConfigUtils, StatesUtils} from '@er/utils';\nimport {FileUpload} from 'primeng/primeng';\nimport {BehaviorSubject, Subject} from 'rxjs';\n\nimport {DEFAULT_PNG_FILE_UPLOAD_PROPS, PngFileUploadProps} from './type';\n\nexport {PngFileUploadProps} from './type';\n\n@Component({\n  selector: 'png-file-upload',\n  template: `\n    <ng-container *ngIf=\"showUpload\">\n      <p-fileUpload\n        #fileUpload\n        erPropsBind\n        [props]=\"$props || {}\"\n        [context]=\"ctx\"\n        (onSelect)=\"onSelect($event)\"\n        (onUpload)=\"onUploadSuccess($event)\"\n        (onError)=\"onUploadFailed($event)\"\n        (onProgress)=\"onProgress($event)\"\n        (onBeforeSend)=\"onBeforeSend($event)\"\n      >\n        <ng-template pTemplate=\"toolbar\">\n          <div *ngIf=\"uploadProgress$|async as uploadProgress\">\n            <p-progressBar [value]=\"uploadProgress\"></p-progressBar>\n          </div>\n        </ng-template>\n        <ng-template pTemplate=\"file\"></ng-template>\n        <ng-template pTemplate=\"content\">\n          <span class=\"text-muted small\" *ngIf=\"!fileUpload.hasFiles()\">æ¨ä¹å¯ä»¥æå¨æä»¶å°è¿é</span>\n        </ng-template>\n      </p-fileUpload>\n      <div *ngIf=\"processing$|async\"><i class=\"fa fa-spin fa-gears\"></i>æ­£å¨å¤çå¾ç</div>\n      <div class=\"ui-fileupload-row\" *ngFor=\"let file of selectedFiles$|async; let i = index\">\n      <div>\n        <span class=\"badge badge-info\">{{i + 1}}</span>\n      </div>\n      <div>\n        <png-image *ngIf=\"fileUpload.isImage(file)\"\n                   [src]=\"file['objectURL']\" [imageStyle]=\"{width: $props.previewWidth + 'px'}\">\n        </png-image>\n        <span *ngIf=\"!fileUpload.isImage(file)\" class=\"fa fa-2x text-primary fa-{{fileIcon(file)}}\"></span>\n      </div>\n      <div>{{file.name}}</div>\n      <div>{{fileUpload.formatSize(file.size)}}<span class=\"text-danger\">(åç¼©å)</span></div>\n      <div>\n        <input pInputText placeholder=\"å¾çæè¿°ä¿¡æ¯\" size=\"50\" (change)=\"setFileAttr($event,file)\"/>\n      </div>\n      <div>\n        <button type=\"button\" icon=\"pi pi-times white\" pButton (click)=\"delete($event,i)\"></button>\n      </div>\n    </div>\n    </ng-container>\n\n    <div *ngIf=\"uploadValue && uploadValue.length>0\">\n      <div style=\"text-decoration: underline;font-weight: bold\">å·²ä¸ä¼ æä»¶ï¼</div>\n      <div class=\"ui-fileupload-row\" *ngFor=\"let fileId of uploadValue\">\n        <div>\n          <png-image [fileId]=\"fileId\" size=\"small\"\n                     styleClass=\"d-flex align-items-center\"\n                     imageStyleClass=\"mr-3\"\n                     [imageStyle]=\"{width:$props.previewWidth}\">\n          </png-image>\n        </div>\n        <div>\n          <button type=\"button\" icon=\"pi pi-times white\" pButton (click)=\"remove(fileId)\"></button>\n        </div>\n      </div>\n    </div>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PngFileUploadComponent),\n    multi: true\n  }]\n})\n\nexport class PngFileUploadComponent extends ControlWrapperComponent<PngFileUploadProps> implements OnChanges {\n\n  @Input() maxSize: number;\n\n  selectedFiles$: BehaviorSubject<File[]> = new BehaviorSubject([]);\n\n  uploadedFiles: any[] = [];\n\n  $defaultProps = DEFAULT_PNG_FILE_UPLOAD_PROPS;\n\n  currentFile: File;\n\n  showUpload = true;\n\n  uploadProgress$: Subject<number> = new Subject();\n\n  processing$: Subject<boolean> = new Subject();\n\n  @ViewChild('fileUpload') fileUpload: FileUpload;\n\n  fileAttrs: { [key: string]: string } = {};\n\n  constructor(private imageToolsService: ImageToolsService, public sanitizer: DomSanitizer, private cd: ChangeDetectorRef) {\n    super();\n  }\n\n  get uploadValue() {\n    if (!this.value) {\n      return this.value;\n    }\n    return CommonsUtils.getArrayValue(this.value);\n  }\n\n  fileIcon(file) {\n    let ext = (this.fileUpload.getFileExtension(file) || '').toLowerCase();\n    ext = ext.substring(1, 4);\n    const exts = ['txt', 'doc', 'xls', '.pdf', '.zip'];\n    let icon;\n    switch (ext) {\n      case 'txt':\n        icon = 'text';\n        break;\n      case 'xls':\n        icon = 'excel';\n        break;\n      case 'doc':\n        icon = 'word';\n        break;\n      case 'zip':\n        icon = 'zip';\n        break;\n      case 'pdf':\n        icon = 'pdf';\n        break;\n      case 'mp3':\n        icon = 'audio';\n        break;\n      case 'mp4':\n        icon = 'video';\n        break;\n      default:\n        icon = exts.indexOf(ext) >= 0 ? ext : undefined;\n    }\n    return icon ? `file-${icon}-o` : 'file-o';\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n  }\n\n  writeValue(model) {\n    super.writeValue(model);\n    this.showUpload = !((model && this.$props && !this.$props.multiple));\n    this.cd.detectChanges();\n  }\n\n  onPropsInit() {\n    super.onPropsInit();\n    if (!this.$props.url) {\n      this.$props.url = `${ConfigUtils.getConfig().api.servers.image.uri}`;\n      LogUtils.debug(this, 'æä»¶ä¸ä¼ è·¯å¾', this.$props.url);\n    }\n  }\n\n  onSelect(event) {\n    const files = event.files;\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      this.processing$.next(true);\n      this.imageToolsService.resizeImage(file, this.$props.$ext.maxWidth, this.$props.$ext.maxHeight).subscribe(result => {\n        this.imageToolsService.compressImage(result, this.$props.$ext.maxSize).subscribe(final => {\n          final['objectURL'] = this.sanitizer.bypassSecurityTrustUrl((URL.createObjectURL(final)));\n          this.selectedFiles$.next(this.selectedFiles$.value.concat(final));\n          this.processing$.next(false);\n          this.fileUpload.files = this.fileUpload.files.map(f => f.name === file.name ? final : f);\n        });\n      });\n    }\n  }\n\n  delete(event, i) {\n    const files = this.selectedFiles$.value;\n    files.splice(i, 1);\n    this.selectedFiles$.next(files);\n    this.fileUpload.remove(event, i);\n  }\n\n  remove(fileId) {\n    this.$subscriptions = HttpUtils.request({\n        uri: `${ConfigUtils.getConfig().api.servers.image.uri}/${fileId}`,\n        method: HttpMethod.DELETE\n      }\n    ).subscribe(resp => {\n      if (resp && resp.success) {\n        if (this.$props.multiple) {\n          this.value = this.value.filter(v => v !== fileId);\n        } else {\n          this.value = undefined;\n        }\n        this.showUpload = true;\n        this.cd.detectChanges();\n      }\n    });\n  }\n\n  setFileAttr(event, file) {\n    this.fileAttrs[file.name] = event.target.value;\n  }\n\n  onBeforeSend(event) {\n    const formData = event.formData;\n    formData.append(this.$props.$ext.attrsName, `waterMark=${this.$props.$ext.waterMark}`);\n    formData.append(this.$props.$ext.attrsName, `smallSize=${this.$props.$ext.smallSize}`);\n    formData.append(this.$props.$ext.attrsName, `storeTo=${this.$props.$ext.storeTo}`);\n    if (!CommonsUtils.isEmpty(this.fileAttrs)) {\n      Object.keys(this.fileAttrs).forEach(key => {\n        formData.append(this.$props.$ext.attrsName, `${key}=${this.fileAttrs[key]}`);\n      });\n    }\n  }\n\n  onProgress(event) {\n    this.uploadProgress$.next(event.progress);\n  }\n\n  onUploadSuccess(event) {\n    for (const file of event.files) {\n      this.uploadedFiles.push(file);\n    }\n    const response = JSON.parse(event.xhr.responseText);\n    if (response.success) {\n      StatesUtils.create(StateNames.notify, {\n        message: 'æä»¶ä¸ä¼ æå',\n        title: 'æç¤º'\n      });\n      if (this.$props.multiple) {\n        this.value = [\n          ...this.value || [],\n          ...Object.keys(response.content).map(k => response.content[k])\n        ];\n      } else {\n        this.value = Object.keys(response.content).map(k => response.content[k])[0];\n        this.showUpload = false;\n      }\n      this.fileAttrs = {};\n      this.selectedFiles$.next([]);\n      this.uploadProgress$.next(undefined);\n      this.cd.detectChanges();\n    }\n  }\n\n  onUploadFailed(event) {\n    const response = JSON.parse(event.xhr.responseText);\n    StatesUtils.create(StateNames.notify, {\n      level: NotifyLevel.ERROR,\n      message: response.message,\n      title: 'æä»¶ä¸ä¼ å¤±è´¥'\n    });\n    this.uploadProgress$.next(undefined);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {BaseComponent, HttpUtils} from '@er/core';\nimport {HttpResponseType, PopupDialogProp} from '@er/types';\nimport {CommonsUtils, ConfigUtils, DialogUtils} from '@er/utils';\nimport {Lightbox} from 'primeng/primeng';\n\n\n@Component({\n  selector: 'png-image',\n  template: `\n    <div [ngClass]=\"styleClass\" [ngStyle]=\"style\">\n      <img *ngIf=\"image\"\n           style=\"margin: 5px\"\n           [src]=\"image\"\n           [ngClass]=\"imageStyleClass\"\n           [ngStyle]=\"imageStyle\"\n           [title]=\"description || ''\"\n           (click)=\"viewImage()\"/>\n      <div *ngIf=\"showDescription\" [ngClass]=\"descriptionStyleClass\" [ngStyle]=\"descriptionStyle\">\n        {{description}}\n      </div>\n    </div>\n    <ng-template #imageView>\n      <img [src]=\"fullImage\" [ngStyle]=\"imageViewStyle\" [ngClass]=\"imageViewStyleClass\"/>\n    </ng-template>\n    <ng-template #imagesView>\n      <p-lightbox [images]=\"images\" [styleClass]=\"boxStyleClass\" [style]=\"boxStyle\"></p-lightbox>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PngImageComponent extends BaseComponent implements OnChanges {\n  @Input() src: any;\n  @Input() styleClass: any;\n  @Input() style: any;\n  @Input() imageStyleClass: any;\n  @Input() imageStyle: any;\n  @Input() descriptionStyleClass: any;\n  @Input() descriptionStyle: any;\n  @Input() boxStyleClass: any;\n  @Input() boxStyle: any;\n  @Input() imageViewStyleClass: any;\n  @Input() imageViewStyle: any = {'max-height': '300px', 'max-width': '500px', 'overflow': 'auto'};\n  @Input() showDescription = true;\n\n  @Input() size: 'small' | 'medium';\n  @Input() fileId: string;\n\n  @ViewChild('imageView') imageViewTpl: TemplateRef<any>;\n\n  @ViewChild('imagesView') imageViewer: Lightbox;\n\n  image: any;\n\n  fullImage: any;\n\n  images: {}[];\n  @Output() descriptionChange = new EventEmitter();\n\n  constructor(private cd: ChangeDetectorRef, public sanitizer: DomSanitizer) {\n    super();\n  }\n\n  _description: string;\n\n  get description() {\n    return this._description;\n  }\n\n  set description(description) {\n    this._description = description;\n    this.descriptionChange.emit(description);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.src) {\n      if (CommonsUtils.isArray(this.src)) {\n        if (this.src.length === 1) {\n          this.images = undefined;\n          this.image = this.src[0];\n          this.fullImage = this.src[0];\n        } else {\n          this.images = [];\n          this.image = this.src[0];\n          this.fullImage = this.src[0];\n          (<any[]>this.src).forEach(image => {\n            if (CommonsUtils.isString(image)) {\n              this.images.push({source: image});\n            } else {\n              this.images.push(image);\n            }\n          });\n        }\n      } else {\n        this.images = undefined;\n        this.image = this.src;\n        this.fullImage = this.src;\n      }\n    }\n    if (changes.fileId) {\n      let fileId;\n      if (!this.fileId) {\n        this.images = undefined;\n        this.image = null;\n      } else {\n        if (CommonsUtils.isArray(this.fileId)) {\n          if (this.fileId.length === 0) {\n            this.images = undefined;\n            this.image = null;\n            return;\n          } else {\n            fileId = this.fileId[0];\n          }\n        } else {\n          fileId = this.fileId;\n        }\n        HttpUtils.request(\n          {\n            uri: `${ConfigUtils.getConfig().api.servers['image'].uri}/${fileId}${this.size ? '?' + this.size : ''}`,\n            observe: 'events',\n            responseType: HttpResponseType.BLOB\n          }).subscribe(response => {\n          const objectURL = this.sanitizer.bypassSecurityTrustUrl((window.URL.createObjectURL(response.body)));\n          this.images = undefined;\n          this.image = objectURL;\n          this.fullImage = `${ConfigUtils.getConfig().api.servers['image'].uri}/${fileId}`;\n          const descriptions = response.headers.getAll('description');\n          if (descriptions && descriptions.length > 0) {\n            this.description = descriptions[0];\n          }\n          this.cd.detectChanges();\n        });\n      }\n    }\n  }\n\n  viewImage() {\n    if (this.images) {\n      this.imageViewer.show();\n      this.imageViewer.center();\n    } else if (this.image) {\n      DialogUtils.info('å¾çé¢è§', this.imageViewTpl, <PopupDialogProp>{});\n    }\n  }\n}\n","import {Component, forwardRef, Input} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {ControlWrapperComponent} from '@er/core';\nimport {PngInputAttrs} from './type';\n\nexport {PngInputAttrs} from './type';\n\n@Component({\n  selector: 'png-input',\n  template: `\n    <div class=\"ui-inputgroup\">\n      <ng-container *ngIf=\"attrs?.$ext?.preIcon || attrs?.$ext?.preText\">\n        <span class=\"ui-inputgroup-addon\"><i [ngClass]=\"attrs?.$ext?.preIcon\"></i>{{attrs?.$ext?.preText}}</span>\n      </ng-container>\n      <png-buttons *ngIf=\"attrs?.$ext?.preButtons\" [btns]=\"attrs.$ext.preButtons\" [context]=\"ctx\"></png-buttons>\n      <ng-container *ngIf=\"attrs?.$ext?.floatLabel;else inputTpl\">\n       <span class=\"ui-float-label\">\n         <ng-container *ngTemplateOutlet=\"inputTpl\"></ng-container>\n         <label style=\"font-weight: bold;\">{{attrs?.$ext.label}}</label>\n       </span>\n      </ng-container>\n      <ng-template #inputTpl>\n        <span class=\"w-100 inner-addon\">\n          <input pInputText\n                 [(ngModel)]=\"value\"\n                 type=\"{{attrs?.type || 'text'}}\"\n                 erPropsBind\n                 [attrs]=\"attrs\"\n                 [context]=\"ctx\"\n                 [pKeyFilter]=\"attrs?.$ext?.inputRule || 'alphanum'\"\n                 (blur)=\"updateTouch()\"/>\n          <i *ngIf=\"value && !disabled && resettable\" title=\"æ¸é¤è¾å¥åå®¹\" class=\"fa fa-trash gray right\" (click)=\"reset()\"></i>\n       </span>\n      </ng-template>\n      <ng-container *ngIf=\"attrs?.$ext?.postIcon || attrs?.$ext?.postText\">\n        <span class=\"ui-inputgroup-addon\"><i [ngClass]=\"attrs?.$ext?.postIcon\"></i>{{attrs?.$ext?.postText}}</span>\n      </ng-container>\n      <png-buttons *ngIf=\"attrs?.$ext?.postButtons\" [btns]=\"attrs.$ext.postButtons\" [context]=\"ctx\"></png-buttons>\n    </div>\n  `,\n  styles: [`\n    .ui-float-label {\n      width: 100%\n    }\n\n    .ui-float-label > label {\n      font-size: 1em;\n      color: inherit\n    }\n  `\n  ],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PngInputComponent),\n    multi: true\n  }]\n})\n\nexport class PngInputComponent extends ControlWrapperComponent {\n  @Input() attrs: PngInputAttrs;\n}\n","import {ApiDataProps, DataItemProps} from '@er/types';\nimport {PngDataAwareProps} from '../../types/props';\n\nexport interface PngListBoxProps extends PngDataAwareProps {\n  multiple?: boolean;\n  listStyle?: any;\n  readonly?: boolean;\n  disabled?: boolean;\n  checkbox?: boolean;\n  filter?: boolean;\n  filterMode?: string;\n  metaKeySelection?: boolean;\n  dataKey?: string;\n  showToggleAll?: boolean;\n  optionLabel?: string;\n  onDblClick?: (ctx) => void;\n  onChange?: (ctx) => void;\n  $ext?: {\n    showValue?: boolean;\n    field?: string;\n    dataItems?: {}[];\n    apiDataProps?: ApiDataProps,\n    dataItemProps?: DataItemProps,\n    header?: (ctx) => string,\n    footer?: (ctx) => string,\n  };\n}\n\nexport const DEFAULT_PNG_LIST_BOX_PROPS: PngListBoxProps = {\n  optionLabel: 'label',\n  checkbox: true,\n  multiple: true,\n  showToggleAll: true,\n  $ext: {\n    dataItemProps: {\n      itemStyleClass: 'd-inline-flex ml-2'\n    }\n  }\n};\n","import {Component, forwardRef, Input} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DataAwareControlWrapperComponent} from '@er/core';\nimport {DEFAULT_PNG_LIST_BOX_PROPS, PngListBoxProps} from './type';\n\nexport {PngListBoxProps} from './type';\n\n@Component({\n  selector: 'png-list-box',\n  template: `\n    <p-listbox\n      [(ngModel)]=\"value\"\n      erPropsBind\n      [props]=\"$props\"\n      [context]=\"ctx\"\n      [erApiData]=\"apiDataProps\"\n      [options]=\"data$|async\"\n      (onChange)=\"updateTouch()\"\n    >\n      <p-header *ngIf=\"template(templateNames.header)\">\n        <ng-container *ngTemplateOutlet=\"template(templateNames.header)\"></ng-container>\n      </p-header>\n\n      <p-header *ngIf=\"header\">\n        <div [innerHTML]=\"header\"></div>\n      </p-header>\n\n      <p-footer *ngIf=\"template(templateNames.footer)\">\n        <ng-container *ngTemplateOutlet=\"template(templateNames.footer)\"></ng-container>\n      </p-footer>\n\n      <p-footer *ngIf=\"$props.$ext['showValue'] || footer\">\n        <ng-container *ngIf=\"$props.$ext['showValue']\">\n          éä¸­å¼ï¼{{value | erValue: $props.$ext['field']}}\n        </ng-container>\n        <ng-container *ngIf=\"footer\">\n          <div [innerHTML]=\"footer\"></div>\n        </ng-container>\n      </p-footer>\n\n      <ng-template let-item let-i=\"index\" pTemplate=\"item\">\n        <er-data-item [customerTpl]=\"template(templateNames.item)\"\n                      [item]=\"item.value\"\n                      [props]=\"$props.$ext.dataItemProps\">\n        </er-data-item>\n      </ng-template>\n    </p-listbox>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PngListBoxComponent),\n    multi: true\n  }]\n})\n\nexport class PngListBoxComponent extends DataAwareControlWrapperComponent<PngListBoxProps> {\n\n  @Input() header: Function;\n\n  @Input() footer: Function;\n\n  templateNames = {\n    header: 'header',\n    footer: 'footer',\n    item: 'item'\n  };\n\n  $defaultProps = DEFAULT_PNG_LIST_BOX_PROPS;\n}\n","import {PngDataAwareProps} from '../../types/props';\n\nexport interface PngMultiSelectProps extends PngDataAwareProps {\n  scrollHeight?: string;\n  defaultLabel?: string;\n  panelStyle?: any;\n  panelStyleClass?: string;\n  inputId?: string;\n  disabled?: boolean;\n  filter?: boolean;\n  filterPlaceHolder?: string;\n  overlayVisible?: boolean;\n  tabindex?: number;\n  appendTo?: any;\n  dataKey?: string;\n  name?: string;\n  displaySelectedLabel?: boolean;\n  maxSelectedLabels?: number;\n  selectionLimit?: number;\n  selectedItemsLabel?: string;\n  showToggleAll?: boolean;\n  resetFilterOnHide?: boolean;\n  dropdownIcon?: string;\n  optionLabel?: string;\n  showHeader?: boolean;\n  autoZIndex?: boolean;\n  baseZIndex?: number;\n  showTransitionOptions?: string;\n}\n\nexport const DEFAULT_PNG_MULTI_SELECT_PROPS: PngMultiSelectProps = {\n  defaultLabel: 'è¯·éæ©',\n  selectedItemsLabel: 'éä¸­{0} é¡¹',\n  filter: false,\n  showToggleAll: true,\n  $ext: {\n    dataItemProps: {\n      itemStyleClass: 'd-inline-flex ml-2'\n    }\n  }\n};\n","import {Component, forwardRef} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DataAwareControlWrapperComponent} from '@er/core';\nimport {DEFAULT_PNG_MULTI_SELECT_PROPS, PngMultiSelectProps} from './type';\n\nexport {PngMultiSelectProps} from './type';\n\n@Component({\n  selector: 'png-multi-select',\n  template: `\n    <p-multiSelect\n      [(ngModel)]=\"value\"\n      erPropsBind\n      [props]=\"$props\"\n      [context]=\"ctx\"\n      [erApiData]=\"apiDataProps\"\n      [options]=\"data$|async|erDataItems:$props.$ext.dataItemProps\"\n      (onBlur)=\"updateTouch()\"\n    >\n      <ng-template let-item pTemplate=\"item\">\n        <er-data-item [customerTpl]=\"template('_')\"\n                         [item]=\"item.data\"\n                         [props]=\"$props.$ext.dataItemProps\">\n        </er-data-item>\n      </ng-template>\n    </p-multiSelect>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PngMultiSelectComponent),\n    multi: true\n  }]\n})\n\nexport class PngMultiSelectComponent extends DataAwareControlWrapperComponent<PngMultiSelectProps> {\n\n  $defaultProps = DEFAULT_PNG_MULTI_SELECT_PROPS;\n\n}\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {NotifyLevel, NotifyProp, NotifyType, StateNames, UiPosition} from '@er/types';\nimport {ConfigUtils, StatesUtils} from '@er/utils';\nimport {MessageService} from 'primeng/api';\nimport {Message} from 'primeng/components/common/message';\nimport {filter} from 'rxjs/operators';\n\n\nexport const DEFAULT_ALERT_PROPS: NotifyProp = {\n  animation: true,\n  duration: 3000,\n  immutable: true,\n  closable: true,\n  autoZIndex: true,\n  position: UiPosition.rightTop\n};\n\n@Component({\n  selector: 'png-alert',\n  template: `\n    <p-toast [styleClass]=\"alert.styleClass\"\n             [style]=\"alert.style\"\n             [position]=\"alert.position\"\n             [autoZIndex]=\"alert.autoZIndex\"\n    ></p-toast>\n  `,\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PngAlertComponent extends BaseComponent implements OnInit {\n\n  alert: NotifyProp;\n\n  private defaultNotifyType: NotifyType;\n\n  constructor(private messageService: MessageService, private cd: ChangeDetectorRef) {\n    super();\n    this.alert = {\n      ...DEFAULT_ALERT_PROPS,\n      ...ConfigUtils.getConfig().alert || {}\n    };\n    this.defaultNotifyType = ConfigUtils.getConfig().notify || NotifyType.ALERT;\n  }\n\n  ngOnInit() {\n    this.$subscriptions = StatesUtils.observe(StateNames.notify)\n      .pipe(\n        filter(notify => notify && notify.message),\n        filter(notify => notify.type === NotifyType.ALERT || (!notify.type && this.defaultNotifyType === NotifyType.ALERT))\n      ).subscribe(notify => {\n        const model = this.getNotifyModel(notify);\n        this.messageService.add(model);\n        this.cd.detectChanges();\n      });\n  }\n\n  getNotifyModel(notify: NotifyProp): Message {\n    return {\n      key: notify.key,\n      severity: notify.level || NotifyLevel.INFO,\n      summary: notify.title,\n      detail: notify.message,\n      sticky: notify.sticky || false,\n      life: notify.duration || notify.level === NotifyLevel.ERROR ? DEFAULT_ALERT_PROPS.duration * 2 : DEFAULT_ALERT_PROPS.duration,\n      closable: notify.closable || true,\n      data: notify.data\n    };\n  }\n\n}\n\n\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {NotifyLevel, NotifyProp, NotifyType, StateNames} from '@er/types';\nimport {ConfigUtils, StatesUtils} from '@er/utils';\nimport {MessageService} from 'primeng/api';\nimport {Message} from 'primeng/components/common/message';\nimport {filter} from 'rxjs/operators';\n\n\nexport const DEFAULT_ANNOUNCE_PROPS: NotifyProp = {\n  level: NotifyLevel.INFO,\n  animation: true,\n  closable: true,\n  baseZIndex: 2000\n};\n\n@Component({\n  selector: 'png-announce',\n  template: `\n    <p-messages [styleClass]=\"announce.styleClass\"\n                [style]=\"announce.style\"\n                [closable]=\"announce.closable\"\n    ></p-messages>\n  `,\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PngAnnounceComponent extends BaseComponent implements OnInit {\n\n  announce: NotifyProp;\n\n  private defaultNotifyType: NotifyType;\n\n  constructor(private messageService: MessageService, private cd: ChangeDetectorRef) {\n    super();\n    this.announce = {\n      ...DEFAULT_ANNOUNCE_PROPS,\n      ...ConfigUtils.getConfig().announce || {}\n    };\n    this.defaultNotifyType = ConfigUtils.getConfig().notify;\n  }\n\n  ngOnInit() {\n    this.$subscriptions = StatesUtils.observe(StateNames.notify)\n      .pipe(\n        filter(notify => notify && notify.message),\n        filter(notify => notify.type === NotifyType.ANNOUNCE || (!notify.type && this.defaultNotifyType === NotifyType.ANNOUNCE))\n      ).subscribe(notify => {\n        const model = this.getNotifyModel(notify);\n        this.messageService.add(model);\n        this.cd.detectChanges();\n      });\n  }\n\n  getNotifyModel(notify: NotifyProp): Message {\n    return {\n      key: notify.key,\n      severity: notify.level || NotifyLevel.INFO,\n      summary: notify.title,\n      detail: notify.message,\n      closable: notify.closable,\n      data: notify.data\n    };\n  }\n\n}\n\n\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {DataItemProps} from '@er/types';\nimport {CommonsUtils, DataItemUtils} from '@er/utils';\n\n@Component({\n  selector: 'png-option-item',\n  template: `\n    <ng-container *ngIf=\"customerTpl;else default\">\n      <ng-container *ngTemplateOutlet=\"customerTpl;context:{$implicit:item}\"></ng-container>\n    </ng-container>\n    <ng-template #default>\n      <div class=\"d-flex option-item\" [ngClass]=\"props.itemStyleClass || 'ui-helper-clearfix'\">\n          <span class=\"label mr-3\" *ngFor=\"let label of labels\" [ngClass]=\"props.labelStyleClass\" [innerHTML]=\"label\"></span>\n          <span class=\"pull-right count\" *ngIf=\"props.showCounter && item['count']\">\n          <span [ngClass]=\"props.counterStyleClass || 'badge badge-pill badge-info'\">{{item['count']}}</span>\n        </span>\n      </div>\n    </ng-template>\n  `,\n  styleUrls: ['styles.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PngOptionItemComponent extends BaseComponent implements OnInit {\n  @Input() item: {};\n  @Input() props: DataItemProps;\n\n  get labels() {\n    const _label = DataItemUtils.getItemLabel(this.item, this.props.dropDownOptionKey || this.props.labelKey || 'label');\n    if (CommonsUtils.isArray(_label)) {\n      return _label;\n    } else {\n      return [_label];\n    }\n  }\n\n  ngOnInit() {\n    if (!this.props) {\n      this.props = {};\n    }\n  }\n\n}\n","import {ChangeDetectionStrategy, Component, Input, ViewChild} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {Context, DynaContent} from '@er/types';\nimport {OverlayPanel} from 'primeng/primeng';\n\n@Component({\n  selector: 'png-overlay-panel',\n  templateUrl: 'tpl.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PngOverlayPanelComponent extends BaseComponent {\n\n  @Input() content: DynaContent;\n\n  @Input() context: Context;\n\n  @ViewChild(OverlayPanel) panel: OverlayPanel;\n\n  show(event) {\n    this.panel.show(event);\n  }\n\n  toggle(event) {\n    this.panel.toggle(event);\n  }\n\n  hide() {\n    this.panel.hide();\n  }\n}\n","import {AfterViewInit, ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewChild} from '@angular/core';\nimport {BaseComponent, DiUtils} from '@er/core';\nimport {DynaContent} from '@er/types';\nimport {DomUtils} from '@er/utils';\n\n@Component({\n  selector: 'png-panel',\n  templateUrl: 'tpl.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PngPanelComponent extends BaseComponent implements AfterViewInit {\n  @Input() barStyle: {};\n  @Input() barStyleClass: string;\n  @Input() style: {};\n  @Input() styleClass: string;\n  @Input() header: DynaContent;\n  @Input() footer: DynaContent;\n  @Input() icon: string;\n  @Input() collapsed = false;\n  @Input() toggleable = false;\n  @Input() showHeader = true;\n\n  @ViewChild('pngPanel', {read: ElementRef}) panelEle: ElementRef;\n\n  templateNames = {\n    header: 'header',\n    footer: 'footer'\n  };\n\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    const titleBar: HTMLDivElement = this.panelEle.nativeElement.querySelector('.ui-panel-titlebar');\n    if (titleBar) {\n      if (this.barStyleClass) {\n        DomUtils.addClasses(titleBar, this.barStyleClass);\n      }\n      if (this.barStyle) {\n        Object.keys(this.barStyle).forEach(name => {\n          DiUtils.get<Renderer2>(Renderer2).setStyle(titleBar, name, this.barStyle[name]);\n        });\n      }\n    }\n  }\n}\n","import {PopupDialogProp} from '@er/types';\n\nexport const DEFAULT_POPUP_DIALOG_PROPS: PopupDialogProp = {\n  draggable: true,\n  minHeight: 100,\n  minWidth: 140,\n  resizable: true,\n  modal: true,\n  closeOnEscape: true,\n  dismissableMask: false,\n  rtl: false,\n  closable: true,\n  responsive: true,\n  maximizable: true,\n  blockScroll: true,\n  breakpoint: 640,\n  showHeader: true,\n  showFooter: true,\n  baseZIndex: 2000,\n  autoZIndex: true,\n  closeLabel: 'å³é­',\n  closeIcon: 'fa fa-close'\n};\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {DynaContent, PopupDialogProp, StateNames} from '@er/types';\nimport {StatesUtils} from '@er/utils';\nimport {Observable, of} from 'rxjs';\nimport {filter, map, takeUntil} from 'rxjs/operators';\nimport {DEFAULT_POPUP_DIALOG_PROPS} from './defaults';\n\n\n@Component({\n  selector: 'png-popup-dialog',\n  templateUrl: 'tpl.html',\n  styleUrls: ['styles.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PngPopupDialogComponent extends BaseComponent implements OnInit {\n\n  @Input() header: string;\n  @Input() content: DynaContent;\n  @Input() canClose: (context) => boolean;\n\n  @Output() onClose = new EventEmitter<any>();\n  @Output() onAction = new EventEmitter<any>();\n\n  dlgOptions$: Observable<PopupDialogProp>;\n\n  templateNames = {\n    header: 'header',\n    content: 'content',\n    footer: 'footer'\n  };\n\n  @Input()\n  set options(options) {\n    this.dlgOptions$ = of(this.resolveDlgOptions(options));\n  }\n\n  ngOnInit(): void {\n    this.dlgOptions$ = StatesUtils.observe(StateNames.popup)\n      .pipe(\n        filter(state => !!state),\n        map(options => this.resolveDlgOptions(options)),\n        takeUntil(this.destroyed$)\n      );\n  }\n\n  resolveDlgOptions(options): PopupDialogProp {\n    const opt = {\n      ...DEFAULT_POPUP_DIALOG_PROPS,\n      header: this.header,\n      content: this.content,\n      ...options\n    };\n    if (options.contentMaxHeight || options.contentMaxWidth) {\n      opt.contentStyle = {\n        ...opt.contentStyle || {},\n        'max-height': `${options.contentMaxHeight || 3000}px`,\n        'max-width': `${options.contentMaxWidth || 3000}px`\n      };\n    }\n    return opt;\n  }\n\n  showEvent(dlg, options) {\n    super.emitEvent('onShow', {\n      scope: options,\n      event: dlg,\n      context: options.context\n    });\n  }\n\n  closeDlg(dlg, options) {\n    if (this.canClose && !this.canClose({\n      scope: options,\n      event: dlg,\n      context: options.context\n    })) {\n      return;\n    }\n    StatesUtils.create(StateNames.popup, {visible: false});\n  }\n\n}\n","import {ApiDataProps, DataItemProps} from '@er/types';\nimport {PngDataAwareProps} from '../../types/props';\n\nexport interface PngRadioProps extends PngDataAwareProps {\n  name?: string;\n  $ext?: {\n    inline?: boolean;\n    dataItems?: {}[];\n    apiDataProps?: ApiDataProps,\n    dataItemProps?: DataItemProps\n  };\n}\n\n\nexport const DEFAULT_RADIO_PROPS: PngRadioProps = {\n  $ext: {\n    inline: false\n  }\n};\n","import {Component, forwardRef} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DataAwareControlWrapperComponent} from '@er/core';\nimport {CommonsUtils, DataItemUtils} from '@er/utils';\nimport {DEFAULT_RADIO_PROPS, PngRadioProps} from './type';\n\nexport {PngRadioProps} from './type';\n\n@Component({\n  selector: 'png-radio',\n  template: `\n    <div class=\"d-flex pb-2\" [erApiData]=\"apiDataProps\" [ngClass]=\"$props.$ext['inline']===false?'flex-column':'flex-wrap'\">\n      <ng-container *ngFor=\"let option of data$|async|erDataItems:$props.$ext.dataItemProps;let i=index\">\n       <span class=\"d-flex align-items-center\">\n        <p-radioButton\n          class=\"m-2\"\n          [(ngModel)]=\"rbValue\"\n          erPropsBind\n          [props]=\"$props\"\n          [context]=\"ctx\"\n          [inputId]=\"i\"\n          [value]=\"option.data|erValue:dataKey\"\n          (onClick)=\"updateTouch()\"\n        >\n        </p-radioButton>\n        <span class=\"mr-4\" [innerHTML]=\"option.label|erSafeHtml\"></span>\n       </span>\n      </ng-container>\n    </div>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PngRadioComponent),\n    multi: true\n  }]\n})\n\nexport class PngRadioComponent extends DataAwareControlWrapperComponent<PngRadioProps> {\n\n  valueParser = this.parseValue;\n\n  modelFormatter = this.formatModel;\n\n  $defaultProps = DEFAULT_RADIO_PROPS;\n\n  _rbValue: string;\n\n  get rbValue(): any {\n    return this._rbValue;\n  }\n\n  set rbValue(value: any) {\n    this._rbValue = value;\n    const values = this.data$.value;\n    if (CommonsUtils.isArray(values)) {\n      const matched = (<{}[]>values).filter(v => v[this.dataKey] === value);\n      if (matched.length === 1) {\n        this.value = DataItemUtils.getItemValue(matched[0], this.valueKey);\n      } else {\n        this.value = null;\n      }\n    } else {\n      this.value = value;\n    }\n  }\n\n  get dataKey() {\n    return CommonsUtils.get(this.$props, '$ext.dataItemProps.idKey', 'value');\n  }\n\n  get valueKey() {\n    return CommonsUtils.get(this.$props, '$ext.dataItemProps.valueKey', 'value');\n  }\n\n  formatModel(model) {\n    if (CommonsUtils.isJson(model)) {\n      this._rbValue = DataItemUtils.getItemValue(model, this.dataKey);\n    }\n    return model;\n  }\n}\n","import {PngProps} from '../../types/props';\n\nexport interface PngRatingProps extends PngProps {\n\n  readonly?: boolean;\n\n  stars?: number;\n\n  cancel?: boolean;\n\n  iconOnClass?: string;\n\n  iconOnStyle?: any;\n\n  iconOffClass?: string;\n\n  iconOffStyle?: any;\n\n  iconCancelClass?: string;\n\n  iconCancelStyle?: any;\n\n  onRate?: Function;\n\n  onCancel?: Function;\n}\n\nexport const DEFAULT_PNG_RATING_PROPS: PngRatingProps = {\n  stars: 5,\n  iconOnClass: 'fa fa-star fa-2x',\n  iconOffClass: 'fa fa-star-o fa-2x',\n  iconCancelClass: 'fa fa-ban fa-2x red'\n};\n","import {Component, forwardRef} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DataAwareControlWrapperComponent} from '@er/core';\nimport {DEFAULT_PNG_RATING_PROPS, PngRatingProps} from './type';\n\nexport {PngRatingProps} from  './type';\n\n@Component({\n  selector: 'png-rating',\n  template: `\n    <p-rating\n      [(ngModel)]=\"value\"\n      erPropsBind\n      [props]=\"$props\"\n      [context]=\"ctx\"\n      (onRate)=\"updateTouch()\"\n    >\n    </p-rating>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PngRatingComponent),\n    multi: true\n  }]\n})\nexport class PngRatingComponent extends DataAwareControlWrapperComponent<PngRatingProps> {\n\n  $defaultProps = DEFAULT_PNG_RATING_PROPS;\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {DialogUtils} from '@er/utils';\n\n@Component({\n  selector: 'png-search-box',\n  template: `\n    <span class=\"inner-addon\" [ngClass]=\"styleClass\" [ngStyle]=\"style\">\n      <i class=\"fa fa-search text-primary left\"></i>\n      <input [title]=\"title\" pInputText placeholder=\"è¾å¥æç´¢å³é®å­ææ¼é³\" [(ngModel)]=\"searchKey\" (keydown.enter)=\"search()\" (keyup)=\"keyChange()\"/>\n      <i *ngIf=\"searchKey\" class=\"fa fa-trash gray right\" [title]=\"title\" (click)=\"clearSearch()\"></i>\n   </span>\n    <span class=\"position-container\"><i title=\"å¤å¼æ¥è¯¢å¸®å©\" class=\"fa fa-question-circle green position-absolute\" style=\"right:2px\"\n                                        (click)=\"showHelp()\"></i></span>\n\n  `\n})\n\nexport class PngSearchBoxComponent extends BaseComponent {\n\n  searchKey: string;\n\n  searched = false;\n\n  @Input() styleClass: string;\n\n  @Input() style: any;\n\n  @Input() title = 'æå³é®å­æç´¢,è¾å¥åè½¦é®æ§è¡';\n\n  @Output() onSearch = new EventEmitter();\n\n  @Output() onSearchChange = new EventEmitter();\n\n  search() {\n    this.searched = true;\n    this.onSearch.emit(this.searchKey);\n  }\n\n  keyChange() {\n    if (!this.searchKey || this.searchKey.length === 0) {\n      this.clearSearch();\n    }\n    this.onSearchChange.emit(this.searchKey);\n  }\n\n  clearSearch() {\n    this.searchKey = undefined;\n    if (this.searched) {\n      this.onSearch.emit(undefined);\n    }\n    this.searched = false;\n  }\n\n  showHelp() {\n    DialogUtils.info('æ¥è¯¢æä½ç¬¦', `\n    <div class=\"ml-3\">\n       <div><b class=\"font-weight-bold\">+</b> å¹¶ä¸</div>\n       <div><b class=\"font-weight-bold\">|</b> æè</div>\n       <div><b class=\"font-weight-bold\">-</b> æé¤</div>\n       <div><b class=\"font-weight-bold\">*</b> å¼å¤´</div>\n       <div><b class=\"font-weight-bold\">( )</b> ä¼å</div>\n    </div>\n    `);\n  }\n}\n","import {ApiDataProps, DataItemProps} from '@er/types';\nimport {PngDataAwareProps} from '../../types/props';\n\nexport interface PngSelectButtonProps extends PngDataAwareProps {\n  optionLabel?: string;\n  multiple?: boolean;\n  dataKey?: string;\n  $ext?: {\n    dataItems?: {\n      label?: string;\n      value?: string;\n      icon?: string;\n      [key: string]: any\n    }[];\n    apiDataProps?: ApiDataProps,\n    dataItemProps?: DataItemProps\n  };\n}\n\n\nexport const DEFAULT_SELECT_BUTTON_PROPS: PngSelectButtonProps = {\n  multiple: false\n};\n","import {Component, forwardRef} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DataAwareControlWrapperComponent} from '@er/core';\nimport {DEFAULT_SELECT_BUTTON_PROPS, PngSelectButtonProps} from './type';\n\nexport {PngSelectButtonProps} from './type';\n\n@Component({\n  selector: 'png-select-button',\n  template: `\n    <p-selectButton\n      [(ngModel)]=\"value\"\n      erPropsBind\n      [props]=\"$props\"\n      [context]=\"ctx\"\n      [erApiData]=\"apiDataProps\"\n      [options]=\"data$|async|erDataItems:$props.$ext.dataItemProps\"\n      (onOptionClick)=\"updateTouch()\"\n    >\n      <ng-template let-item>\n        <er-data-item [customerTpl]=\"template(templateNames.item)\"\n                      [item]=\"item.data\"\n                      [props]=\"$props.$ext.dataItemProps\">\n        </er-data-item>\n      </ng-template>  \n    </p-selectButton>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PngSelectButtonComponent),\n    multi: true\n  }]\n})\n\nexport class PngSelectButtonComponent extends DataAwareControlWrapperComponent<PngSelectButtonProps> {\n\n  $defaultProps = DEFAULT_SELECT_BUTTON_PROPS;\n\n  templateNames = {\n    item: 'item'\n  };\n\n}\n","import {PngDataAwareProps} from '../../types/props';\n\nexport interface PngSelectProps extends PngDataAwareProps {\n  dataKey?: string;\n  autoWidth?: boolean;\n  editable?: boolean;\n  filter?: boolean;\n  filterBy?: string;\n  showClear?: boolean;\n  placeholder?: string;\n  group?: boolean;\n  onClick?: Function;\n  onChange?: Function;\n  onFocus?: Function;\n  onBlur?: Function;\n  onShow?: Function;\n  onHide?: Function;\n}\n\n\nexport const DEFAULT_PNG_SELECT_PROPS: PngSelectProps = {\n  autoWidth: false,\n  placeholder: 'è¯·éæ©',\n  showClear: true,\n  editable: false,\n  $ext: {}\n};\n","import {ChangeDetectorRef, Component, forwardRef, ViewChild} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DataAwareControlWrapperComponent} from '@er/core';\nimport {Dropdown} from 'primeng/primeng';\nimport {DEFAULT_PNG_SELECT_PROPS, PngSelectProps} from './type';\n\nexport {PngSelectProps} from './type';\n\n@Component({\n  selector: 'png-select',\n  template: `\n    <p-dropdown\n      [(ngModel)]=\"value\"\n      erPropsBind\n      [props]=\"$props\"\n      [context]=\"ctx\"\n      [erApiData]=\"apiDataProps\"\n      [options]=\"data$|async|erDataItems:$props?.$ext?.dataItemProps\"\n      (onBlur)=\"updateTouch()\"\n    >\n      <ng-template let-group pTemplate=\"group\">\n        <ng-container *ngTemplateOutlet=\"template(templateNames.group,groupTpl);context:{$implicit:group}\"></ng-container>\n      </ng-template>\n      <ng-template let-group #groupTpl>\n        <span *ngIf=\"group\" style=\"font-size: 1em\"><i class=\"fa fa-group text-primary\"></i> {{group.label}}</span>\n      </ng-template>\n      <ng-template let-item pTemplate=\"item\">\n        <er-data-item [customerTpl]=\"template(templateNames.item)\"\n                      [item]=\"item.data\"\n                      [props]=\"$props.$ext.dataItemProps\">\n        </er-data-item>\n      </ng-template>\n    </p-dropdown>\n  `,\n  styleUrls: ['styles.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PngSelectComponent),\n    multi: true\n  }]\n})\n\nexport class PngSelectComponent extends DataAwareControlWrapperComponent<PngSelectProps> {\n\n  $defaultProps = DEFAULT_PNG_SELECT_PROPS;\n\n  templateNames = {\n    group: 'group',\n    item: 'item'\n  };\n\n  @ViewChild(Dropdown) dropDown: Dropdown;\n\n  constructor(private cd: ChangeDetectorRef) {\n    super();\n  }\n\n  onPropsInit() {\n    super.onPropsInit();\n    if (!this.$props.group && this.$props.$ext && this.$props.$ext.dataItemProps && this.$props.$ext.dataItemProps.groupKey) {\n      this.$props.group = true;\n    }\n  }\n\n}\n","import {PngProps} from '../../types/props';\n\nexport interface PngSliderProps extends PngProps {\n  range?: boolean;\n  min?: number;\n  max?: number;\n  step?: number;\n  orientation?: 'vertical' | 'horizontal';\n}\n\nexport const DEFAULT_PNG_SLIDER_PROPS: PngSliderProps = {\n  min: 0,\n  max: 100,\n  range: false,\n  orientation: 'horizontal'\n};\n","import {Component, forwardRef} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DataAwareControlWrapperComponent} from '@er/core';\nimport {CommonsUtils} from '@er/utils';\nimport {DEFAULT_PNG_SLIDER_PROPS, PngSliderProps} from './type';\n\nexport {PngSliderProps} from './type';\n\n@Component({\n  selector: 'png-slider',\n  template: `\n    <small class=\"d-inline w-25\">å¼ï¼{{current}}</small>\n    <p-slider class=\"d-inline\"\n              [erApiData]=\"apiDataProps\"\n              [(ngModel)]=\"value\"\n              erPropsBind\n              [props]=\"$props\"\n              [min]=\"min\"\n              [max]=\"max\"\n              (onChange)=\"updateTouch()\"\n              (onDataReady)=\"initValue($event)\"\n    >\n    </p-slider>\n\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PngSliderComponent),\n    multi: true\n  }]\n})\n\nexport class PngSliderComponent extends DataAwareControlWrapperComponent<PngSliderProps> {\n\n  $defaultProps = DEFAULT_PNG_SLIDER_PROPS;\n\n  min: number;\n\n  max: number;\n\n  get current() {\n    return CommonsUtils.join(this.value, 'ââ');\n  }\n\n  initValue(event) {\n    if (event.hasOwnProperty('min') && event.hasOwnProperty('max')) {\n      this.min = event.min;\n      this.max = event.max;\n      this.value = [event.min, event.max];\n    } else {\n      this.value = event;\n    }\n  }\n}\n","import {ApiUtils} from '@er/core';\nimport {ButtonProps, DataAttr} from '@er/types';\nimport {StatesUtils} from '@er/utils';\nimport {PngTableColumnProps, PngTableProps} from './types';\n\n\nexport const defaultPngColumnProps: PngTableColumnProps = {\n  cellStyleClass: 'text-right',\n  sortable: true,\n  filterable: true,\n  aggable: true,\n  width: '150px'\n};\n\nexport const defaultPngTableProps: PngTableProps = {\n  value: [],\n  tableStyleClass: 'rounded shadow',\n  dataKey: 'id',\n  alwaysShowPaginator: true,\n  autoLayout: true,\n  columnResizeMode: 'expand',\n  compareSelectionBy: 'equals',\n  defaultSortOrder: 1,\n  resizableColumns: true,\n  reorderableColumns: true,\n  responsive: true,\n  filterDelay: 300,\n  filters: {},\n  rowHover: true,\n  loadingIcon: 'fa fa-spin fa-2x fa-circle-o-notch',\n  lazy: true,\n  lazyLoadOnInit: false,\n  rows: 10,\n  pageLinks: 5,\n  rowsPerPageOptions: [10, 30, 50],\n  paginator: true,\n  paginatorPosition: 'both',\n  rowExpandMode: 'multiple',\n  sortMode: 'single',\n  sortOrder: 1,\n  $ext: {\n    emptyMessage: 'æ²¡ææ¾ç¤ºåå®¹',\n    hasColumnSelector: true,\n    columnSelectorStyleClass: 'd-inline-block align-middle pull-right',\n    rowHeight: '30px',\n    rowActionsPlaceAhead: false,\n    frozenActionColumn: false,\n    hasSearchInput: true,\n    hasSearchBox: false,\n    hasRowIndex: false,\n    hasRowCheckbox: false,\n    hasHeaderSummary: false,\n    hasPaginatorLeft: true,\n    hasPaginatorRight: false,\n    rowExpandable: false,\n    hasAddAction: false,\n    hasDeleteAction: false,\n    hasAuditAction: false,\n    hasDownloadAction: false,\n    routerOutlet: 'aux',\n    addRouter: 'add',\n    viewRouter: 'view',\n    editRouter: 'edit',\n    auditRouter: 'audit',\n    downloadRouter: 'download'\n  }\n};\n\nexport const defaultRowIndexColumn = <PngTableColumnProps> {\n  label: 'è¡å·',\n  width: '50px',\n  cellClass: 'text-right',\n  sortable: false,\n  filterable: false,\n  aggable: false,\n  order: -100,\n  isDataColumn: false,\n  cellContent: (data) => data.rowIndex + 1\n};\n\nexport const defaultOrderedRowIndexColumn = {\n  label: 'è¡å·',\n  width: '50px',\n  cellClass: 'text-right',\n  sortable: false,\n  filterable: false,\n  aggable: false,\n  order: -100,\n  isDataColumn: false,\n  cellContent: (data) => data.rowIndex + 1,\n  cellStyleClass: (ctx) => {\n    if (ctx.rowIndex === 0) {\n      return 'badge badge-pill white bg-red No-1';\n    } else if (ctx.rowIndex === 1) {\n      return 'badge badge-pill black bg-yellow No-2';\n    } else if (ctx.rowIndex === 2) {\n      return 'badge badge-pill white bg-blue No-3';\n    } else {\n      return 'badge badge-pill badge-dark';\n    }\n  }\n};\n\nexport const defaultActionColumn = <PngTableColumnProps> {\n  label: 'æä½',\n  width: '150px',\n  cellStyleClass: 'text-left',\n  sortable: false,\n  filterable: false,\n  aggable: false,\n  dataAttr: DataAttr.BUTTONS,\n  isActionColumn: true,\n  cellContent: <ButtonProps[]> []\n};\n\nexport const defaultAddButton = <ButtonProps> {\n  $id: 'add',\n  title: 'æ°å»ºä¸æ¡ä¿¡æ¯',\n  label: 'æ°å»º',\n  icon: 'fa fa-plus',\n  styleClass: 'ui-button-rounded ui-button-success',\n  onClick: (event) => {\n    event.pngTable.navigate(event.pngTable.$props.$ext.addRouter, [], {tableId: event.pngTable.$id});\n  }\n};\n\nexport const defaultViewButton = <ButtonProps> {\n  $id: 'view',\n  title: 'æ¥ç',\n  icon: 'fa fa-edit',\n  styleClass: 'ui-button-rounded ui-button-info',\n  onClick: (event) => {\n    event.pngTable.navigate(event.pngTable.$props.$ext.viewRouter, [event.row['id']]);\n  }\n};\n\nexport const defaultEditButton = <ButtonProps> {\n  $id: 'edit',\n  title: 'ä¿®æ¹',\n  icon: 'fa fa-edit',\n  styleClass: 'ui-button-rounded ui-button-warning',\n  onClick: (event) => {\n    event.pngTable.navigate(event.pngTable.$props.$ext.editRouter, [event.row['id']], {tableId: event.pngTable.$id});\n  }\n};\n\nexport const defaultDeleteButton = <ButtonProps> {\n  $id: 'delete',\n  title: 'å é¤',\n  icon: 'fa fa-trash',\n  styleClass: 'ui-button-rounded ui-button-danger',\n  onClick: (event) => {\n    ApiUtils.deleteById(event.pngTable.$props.$ext.apiDataProps.apiEntry, event.row['id'])\n      .subscribe(() => {\n        event.pngTable.load();\n        StatesUtils.update(event.pngTable.$props.$id, {deleted: event.row['id']});\n      });\n  }\n};\n\nexport const defaultAuditButton = <ButtonProps> {\n  $id: 'audit',\n  title: 'å®¡æ ¸',\n  icon: 'fa fa-check',\n  styleClass: 'ui-button-rounded ui-button-success',\n  onClick: (event) => {\n    event.pngTable.navigate(event.pngTable.$props.$ext.auditRouter, [event.row['id']], {action: 'audit', tableId: event.pngTable.$id});\n  }\n};\n\nexport const defaultDownloadButton = <ButtonProps> {\n  $id: 'download',\n  title: 'ä¸è½½',\n  icon: 'fa fa-download',\n  overlay: true,\n  styleClass: 'ui-button-rounded ui-button-success',\n  onClick: (event) => {\n    event.pngTable.navigate(event.pngTable.$props.$ext.downloadRouter, [event.row['id']]);\n  }\n};\n\nexport const defaultOverlayColumnProps = {\n  sortable: false,\n  filterable: false,\n  aggable: false\n};\n\nexport const defaultOverlayTableProps = {\n  alwaysShowPaginator: false,\n  scrollable: true,\n  scrollWidth: '800px',\n  paginatorPosition: 'bottom'\n};\n","import {DataFieldUtils} from '@er/core';\nimport {DataType} from '@er/types';\nimport {CommonsUtils} from '@er/utils';\nimport {PngTableColumnProps} from '../types';\n\nexport class PngTableUtils {\n\n  static resolveColumnByDataField(column: PngTableColumnProps) {\n    if (!column.dataField) {\n      return;\n    }\n    column.dataField = CommonsUtils.merge(\n      DataFieldUtils.getFieldDefaultProps(column.dataField),\n      column.dataField\n    );\n    const {key, label, dataType, dataAttr, order, hidden} = column.dataField;\n    let sortKey = column.dataField.key;\n    if (!column.sortKey && column.dataField.dataType === DataType.JSON) {\n      sortKey = column.dataField.sortKey || `${column.dataField.key}.${DataFieldUtils.getDefaultFieldName(column.dataField)}`;\n    }\n\n    const id = column.id || column.key || column.dataField.key;\n\n    CommonsUtils.defaults(column, CommonsUtils.pickBy({\n      id,\n      key,\n      label,\n      dataType,\n      dataAttr,\n      order,\n      hidden,\n      sortKey\n    }, CommonsUtils.lodash().identity));\n  }\n}\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, forwardRef, OnDestroy, ViewChild} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {DataAwareControlWrapperComponent} from '@er/core';\nimport {AggMethodsProps, AggProps, ApiDataProps, DataType, Order, OverlayContext, OverlayType} from '@er/types';\nimport {CommonsUtils, DataItemUtils, StatesUtils} from '@er/utils';\nimport * as esb from 'elastic-builder';\nimport {Menu, OverlayPanel} from 'primeng/primeng';\nimport {Table} from 'primeng/table';\nimport {BehaviorSubject} from 'rxjs';\nimport {filter, skip} from 'rxjs/operators';\nimport {\n  defaultActionColumn,\n  defaultAddButton,\n  defaultAuditButton,\n  defaultDeleteButton,\n  defaultDownloadButton,\n  defaultEditButton,\n  defaultPngColumnProps,\n  defaultPngTableProps,\n  defaultRowIndexColumn,\n  defaultViewButton\n} from '../../default';\nimport {PngTableColumnProps, PngTableProps} from '../../types';\nimport {PngTableUtils} from '../../util';\n\n\n@Component({\n  selector: 'png-table',\n  templateUrl: 'tpl.html',\n  styleUrls: ['styles.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PngTableComponent),\n    multi: true\n  }],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PngTableComponent extends DataAwareControlWrapperComponent<PngTableProps> implements OnDestroy {\n\n  OVERLAY_TYPE = OverlayType;\n\n  @ViewChild('pngTable') table: Table;\n\n  @ViewChild('overlayPanel') overlayPanel: OverlayPanel;\n\n  @ViewChild(Menu) popupMenu: Menu;\n\n  bodyData$: BehaviorSubject<{}[]> = new BehaviorSubject<PngTableColumnProps[]>([]);\n\n  columns$: BehaviorSubject<PngTableColumnProps[]> = new BehaviorSubject<PngTableColumnProps[]>(undefined);\n\n  dataColumnNames: string[];\n\n  dataColumns: PngTableColumnProps[];\n\n  templateNames = {\n    caption: 'caption',\n    spanHeader: 'spanHeader',\n    header: 'header',\n    headerSummary: 'headerSummary',\n    body: 'body',\n    frozenRows: 'frozenRows',\n    cell: 'cell',\n    dataCell: 'dataCell',\n    footer: 'footer',\n    footerSummary: 'summary',\n    colGroup: 'colgroup',\n    rowExpansion: 'rowexpansion',\n    paginatorLeft: 'paginatorLeft',\n    paginatorRight: 'paginatorRight'\n  };\n\n  $defaultProps = defaultPngTableProps;\n\n  simpleQuery: any[];\n\n  complexQuery: {};\n\n  eventQuery = [];\n\n  selectedRows = [];\n\n  addBtn: any;\n\n  overlayContext: OverlayContext;\n\n  switch = true;\n\n  constructor(public cd: ChangeDetectorRef, private router: Router, private activatedRoute: ActivatedRoute) {\n    super();\n  }\n\n  get apiEntry() {\n    return this.$props.$ext.apiDataProps && this.$props.$ext.apiDataProps.apiEntry;\n  }\n\n  get $id() {\n    return this.$props.$id;\n  }\n\n  onPropsInit() {\n    if (this.$props.entity) {\n      if (!this.$props.caption || this.$props.caption['method']) {\n        const caption = CommonsUtils.getValue(this.$props.caption, this.$props.entity.label);\n        this.$props.caption = caption || `æµè§${this.$props.entity.label || ''}`;\n      }\n      if (!this.$props.$ext.apiDataProps) {\n        this.$props.$ext.apiDataProps = {};\n      }\n      if (!this.$props.$ext.apiDataProps.apiEntry) {\n        this.$props.$ext.apiDataProps.apiEntry = this.$props.entity.apiEntry || '';\n      }\n    }\n\n    if (this.$props.columns) {\n      this.resoleActionsColumn(this.$props);\n      let order = 0;\n      this.$props.columns.forEach(column => {\n        PngTableUtils.resolveColumnByDataField(column);\n        CommonsUtils.defaults(column, defaultPngColumnProps);\n        if (!column.order) {\n          column.order = ++order;\n        }\n        if (this.$props.scrollable && this.$props.scrollWidth && column.width && column.width.endsWith('%')) {\n          column.width = defaultPngColumnProps.width;\n        }\n        if (column.overlays) {\n          column.overlays = CommonsUtils.getArrayValue(column.overlays);\n        }\n        if (column.headerOverlays) {\n          column.headerOverlays = CommonsUtils.getArrayValue(column.headerOverlays);\n        }\n      });\n    }\n    if (this.$props.virtualScroll) {\n      this.$props.alwaysShowPaginator = false;\n      this.$props.paginator = false;\n    }\n    if (this.$props.scrollable) {\n      CommonsUtils.set(this.$props, 'style.width', this.$props.scrollWidth);\n    }\n    const frozenColumns = this.$props.columns.filter(column => column.frozen);\n    if (frozenColumns.length > 0) {\n      this.$props.frozenColumns = frozenColumns;\n      if (!this.$props.$ext.rowHeight) {\n        this.$props.$ext.rowHeight = '30px';\n      }\n      let frozenWidth = 0;\n      frozenColumns.forEach(column => {\n        let width = 150;\n        if (column.width) {\n          width = Number(column.width.substr(0, column.width.length - 2));\n        }\n        frozenWidth += width || 150;\n        column.styleClass = column.styleClass || '' + ' table-frozen-column';\n      });\n      this.$props.frozenWidth = `${frozenWidth}px`;\n    }\n    this.updateColumns();\n    this.apiDataProps = this.getApiDataProps();\n    this.$subscriptions = StatesUtils.observe(this.$id)\n      .pipe(\n        filter(state => !!state),\n        skip(1)\n      )\n      .subscribe(state => {\n        this.table.first = 0;\n        this.load(state);\n      });\n    if (this.$props.$ext.dataItems) {\n      this.data$.next({\n        items: this.$props.$ext.dataItems,\n        total: this.$props.$ext.dataItems.length\n      });\n    }\n    StatesUtils.create(this.$id, {\n      component: this\n    }, true);\n  }\n\n  updateColumns(event?) {\n    let columns;\n    if (!event) {\n      columns = this.$props.columns.filter(column => !column.frozen) || [];\n    } else {\n      columns = event.value;\n    }\n    columns.sort((a, b) => a.order - b.order);\n    this.dataColumns = columns.filter(column => !column.isActionColumn || !(column.hidden && !column.fetch));\n    if (!event) {\n      columns = columns.filter(column => !column.hidden);\n    }\n    this.dataColumnNames = CommonsUtils.compact(this.dataColumns.map(column => column.key));\n    if (this.$props.frozenColumns) {\n      this.$props.frozenColumns.forEach(column => {\n        if (column.key) {\n          this.dataColumnNames.push(column.key);\n        }\n      });\n    }\n    this.columns$.next(columns);\n    if (event) {\n      this.load();\n    }\n  }\n\n  updateColAggKeys(event) {\n    if (event.column) {\n      const column = event.column;\n      const aggProps = [];\n      if (event.methods && event.methods.length > 0) {\n        event.methods.forEach(method => {\n          aggProps.push(<AggProps>{\n            name: `${column.key}-${method}`,\n            field: column.aggKey || column.key,\n            method: AggMethodsProps[method]['key']\n          });\n        });\n      }\n      column.aggProps = aggProps;\n      StatesUtils.update(this.$id, {});\n    }\n  }\n\n  updateColFilters(event) {\n    if (event.column) {\n      const column = event.column;\n      column.filters = [];\n      if (event.value) {\n        column.filters.push(event.value);\n      }\n      StatesUtils.update(this.$id, {});\n    }\n  }\n\n  updateSimpleSearch(event) {\n    if (CommonsUtils.isEmpty(event)) {\n      this.simpleQuery = undefined;\n    } else {\n      if (event.indexOf('\"') === -1) {\n        event = `\"${event}\"`;\n      }\n      this.simpleQuery = [esb.simpleQueryStringQuery(event)];\n    }\n    this.load();\n  }\n\n  getColumnByKey(key): PngTableColumnProps {\n    const columns = this.$props.columns.filter(column => column.key === key);\n    if (columns.length >= 1) {\n      return columns[0];\n    } else {\n      return undefined;\n    }\n  }\n\n  getRowStyleClass(row) {\n    return CommonsUtils.getValue(this.$props.$ext.rowStyleClass, row);\n  }\n\n  getRowStyle(row) {\n    const style = CommonsUtils.getValue(this.$props.$ext.rowStyle, row) || {};\n    if (this.$props.$ext.rowHeight) {\n      style['height'] = this.$props.$ext.rowHeight;\n    }\n    return style;\n  }\n\n  getHeaderStyleClass(column) {\n    return CommonsUtils.getValue(column.headerStyleClass, column);\n  }\n\n  getHeaderStyle(column) {\n    return CommonsUtils.getValue(column.headerStyle, column);\n  }\n\n  rowSelect(event) {\n    this.updateTouch();\n    this.value = DataItemUtils.getItemValue(event, this.$props.$ext.dataItemProps && this.$props.$ext.dataItemProps.valueKey);\n  }\n\n  load(state?) {\n    this.apiDataProps = this.getApiDataProps(state);\n    this.cd.markForCheck();\n  }\n\n  onDataReady(data) {\n    const dataPath = CommonsUtils.get(this.$props, '$ext.apiDataProps.dataPath');\n    if (dataPath && dataPath !== '/') {\n      this.bodyData$.next(data);\n    } else {\n      this.bodyData$.next(data.items || []);\n    }\n  }\n\n  showOverlay(ctx: OverlayContext) {\n    if (ctx && ctx.content) {\n      this.overlayContext = {\n        dismissable: true,\n        showCloseIcon: true,\n        ...ctx\n      };\n      this.overlayPanel.hide();\n      this.overlayPanel.toggle(ctx.$event);\n      this.cd.detectChanges();\n    }\n  }\n\n  hidePanel() {\n    this.overlayPanel.hide();\n  }\n\n  resetQuery() {\n    this.simpleQuery = undefined;\n    this.complexQuery = undefined;\n  }\n\n  resetForeignQuery() {\n    this.eventQuery = [];\n  }\n\n  navigate(url: string, commands?: any[], params?) {\n    this.router.navigate([{outlets: {[this.$props.$ext.routerOutlet]: [url, ...commands]}}], {\n      relativeTo: this.activatedRoute,\n      skipLocationChange: false,\n      queryParams: params\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.$props && this.$props.$id) {\n      StatesUtils.deleteState(this.$props.$id);\n    }\n    super.ngOnDestroy();\n  }\n\n  getTableQuery(state?) {\n\n    if (state && (state.query || state.filter)) {\n      this.eventQuery = [\n        ...CommonsUtils.getArrayValue(state['query'] || {}),\n        ...CommonsUtils.getArrayValue(state['filter'] || {})\n      ];\n    }\n\n    const filters = [\n      ...this.getColumnsFilters(),\n      ...this.eventQuery,\n      ...this.simpleQuery || [],\n      ...CommonsUtils.getArrayValue(this.complexQuery) || []\n    ];\n\n    const gApiDataProps = CommonsUtils.copy(CommonsUtils.get(this.$props, '$ext.apiDataProps'));\n\n    let apiFilter = gApiDataProps.filter || {};\n    if (apiFilter['$and']) {\n      apiFilter['$and'] = [\n        ...apiFilter['$and'],\n        ...filters\n      ];\n    } else if (apiFilter['$or']) {\n      apiFilter['$and'] = filters;\n    } else {\n      apiFilter = CommonsUtils.getArrayValue(apiFilter)\n        .concat(filters);\n    }\n    apiFilter = apiFilter.filter(f => !CommonsUtils.isEmpty(f));\n\n    let aggProps = gApiDataProps.aggProps || {};\n    aggProps = CommonsUtils.getArrayValue(aggProps).concat(this.getColumnsAggs());\n    aggProps = aggProps.filter(a => Object.keys(a).length > 0);\n\n    let sort = gApiDataProps.sort || [];\n    const tableMetaData = this.table.createLazyLoadMetadata();\n    sort = CommonsUtils.getArrayValue(sort);\n    const tableSort = tableMetaData.sortField;\n    if (tableSort) {\n      const column = this.getColumnByKey(tableSort);\n      const sortKey = (column && column.sortKey) || tableSort;\n      sort.push({[sortKey]: tableMetaData.sortOrder === 1 ? Order.ASC : Order.DESC});\n    }\n    delete gApiDataProps.filter;\n    delete gApiDataProps.aggProps;\n    return {\n      ...gApiDataProps,\n      filter: apiFilter,\n      aggProps,\n      sort\n    };\n  }\n\n  private getColumnsFilters() {\n    const filters = [];\n    const columns = (this.columns$.value || []).concat(this.$props.frozenColumns || []);\n    columns\n      .filter(column => column.filters)\n      .forEach(column =>\n        column.filters.filter(f => f)\n          .forEach(f => {\n            let query;\n            switch (column.filterDataType || column.dataType || (column.dataField && column.dataField.dataType) || DataType.STRING) {\n              case DataType.NUMBER:\n              case DataType.DATE:\n                if (CommonsUtils.isArray(f)) {\n                  query = esb.rangeQuery(column.filterKey || column.key).gte(f[0]).lte(f[1]);\n                } else {\n                  query = esb.rangeQuery(column.filterKey || column.key).gte(f).lte(f);\n                }\n                break;\n              default:\n                query = esb.matchQuery(column.filterKey || column.key, f);\n            }\n            filters.push(query);\n          }));\n    return filters;\n  }\n\n  private getColumnsAggs() {\n    let aggs: AggProps[] = [];\n    const columns = (this.columns$.value || []).concat(this.$props.frozenColumns || []);\n    columns\n      .filter(column => column.aggProps)\n      .forEach(column => {\n        aggs = aggs.concat(column.aggProps);\n      });\n    return aggs;\n  }\n\n  private resoleActionsColumn(props: PngTableProps) {\n    let actionColumn: PngTableColumnProps;\n    let actionColumnIndex = -1;\n    props.columns.some((column, i) => {\n      if (column.isActionColumn) {\n        actionColumn = column;\n        actionColumnIndex = i;\n        return true;\n      }\n      return false;\n    });\n    if (actionColumnIndex >= 0) {\n      props.columns = CommonsUtils.removeByIndex(props.columns, actionColumnIndex);\n    }\n    if (props.$ext.hasAddAction) {\n      this.addBtn = {\n        ...defaultAddButton,\n        context: this\n      };\n    }\n    const buttons = [];\n    if (props.$ext.hasViewAction) {\n      buttons.push({\n        ...defaultViewButton,\n        show: props.$ext.hasViewAction\n      });\n    }\n    if (props.$ext.hasDeleteAction) {\n      buttons.push({\n        ...defaultDeleteButton,\n        show: props.$ext.hasDeleteAction\n      });\n    }\n    if (props.$ext.hasAuditAction) {\n      buttons.push({\n        ...defaultAuditButton,\n        show: props.$ext.hasAuditAction\n      });\n    }\n    if (props.$ext.hasDownloadAction) {\n      buttons.push({\n        ...defaultDownloadButton,\n        show: props.$ext.hasDownloadAction\n      });\n    }\n    if (props.$ext.hasEditAction) {\n      buttons.push({\n        ...defaultEditButton,\n        show: props.$ext.hasEditAction\n      });\n    }\n    if (buttons.length > 0 && !actionColumn) {\n      actionColumn = {\n        ...defaultActionColumn,\n        ...actionColumn || {}\n      };\n    }\n    if (buttons.length > 0) {\n      actionColumn.cellContent = [\n        ...CommonsUtils.getArrayValue(actionColumn.cellContent) || [],\n        ...buttons\n      ];\n    }\n\n    if (actionColumn) {\n      if (this.$props.$ext.frozenActionColumn) {\n        actionColumn.frozen = true;\n      }\n      if (this.$props.$ext.rowActionsPlaceAhead) {\n        (<any[]>this.$props.columns).splice(0, 0, actionColumn);\n      } else {\n        this.$props.columns.push(actionColumn);\n      }\n    }\n    if (this.$props.$ext.hasRowIndex) {\n      this.$props.columns.splice(0, 0, defaultRowIndexColumn);\n    }\n  }\n\n  private getApiDataProps(state?): ApiDataProps {\n    const tableMetaData = this.table.createLazyLoadMetadata();\n    const tableQuery = this.getTableQuery(state);\n    const apiDataProps = <ApiDataProps>{\n      ...tableQuery,\n      dataPath: '/',\n      returnFields: this.dataColumnNames,\n      from: tableMetaData.first,\n      size: tableMetaData.rows\n    };\n    apiDataProps.requestOptions = apiDataProps.requestOptions || {};\n    if (!apiDataProps.requestOptions.tag) {\n      apiDataProps.requestOptions.tag = this.$id;\n    }\n    return apiDataProps;\n  }\n\n\n}\n\n// dispatchEvent(new Event('input'))\n","import {Component, ElementRef, HostListener, Input, OnDestroy, OnInit, Optional, ViewChild} from '@angular/core';\nimport {ControlContainer, FormControl, FormGroupDirective} from '@angular/forms';\nimport {FormUtils} from '@er/utils';\nimport {ValidateUtils} from '@er/validate';\nimport {DomHandler} from 'primeng/primeng';\n\n/**\n * <png-tooltip [control]=\"ngForm.get('start')\">\n <input pInputText formControlName=\"start\">\n </png-tooltip>\n */\n\n@Component({\n  selector: 'png-tooltip',\n  template: `\n    <div #in style=\"display:inline-block;position:relative\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  providers: [DomHandler]\n})\nexport class ValidateMessageTooltipComponent implements OnInit, OnDestroy {\n\n  @Input() tooltipPosition: 'top' | 'bottom' | 'left' | 'right' = 'right';\n  @Input() control: FormControl;\n  @Input() controlName: string;\n  @Input() positionStyle: string;\n  @Input() tooltipStyleClass: string;\n  @Input() messages: { [key: string]: string };\n\n  errorMessage: string;\n\n  container: any;\n\n  @ViewChild('in')\n  in: ElementRef;\n\n  constructor(private domHandler: DomHandler, @Optional() private controlContainer: ControlContainer) {\n  }\n\n  ngOnInit(): void {\n    if (!this.control && this.controlContainer) {\n      const form = this.controlContainer.formDirective ? (this.controlContainer.formDirective as FormGroupDirective).form : null;\n      if (form) {\n        this.control = FormUtils.getFormControl(form, ...this.controlContainer.path, this.controlName);\n      }\n    }\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter() {\n    if (this.control.invalid) {\n      this.showErrMsg();\n    }\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave() {\n    this.hide();\n  }\n\n  @HostListener('focusin')\n  onFocusIn() {\n    if (this.control.invalid) {\n      this.showErrMsg();\n    }\n  }\n\n  @HostListener('focusout')\n  onFocusOut() {\n    this.hide();\n  }\n\n  @HostListener('keyup')\n  onKeyup() {\n    if (this.control.invalid) {\n      this.showErrMsg();\n    } else {\n      this.hide();\n    }\n  }\n\n  showErrMsg(): void {\n    this.errorMessage = this.getErrorMsg();\n    if (this.errorMessage !== null && this.errorMessage !== undefined) {\n      this.show();\n    }\n  }\n\n  getErrorMsg(): string {\n    const errMsgs: {} = ValidateUtils.getErrorMessage(this.control.errors, this.messages);\n    if (Object.keys(errMsgs).length > 0) {\n      return errMsgs[Object.keys(errMsgs)[0]];\n    }\n    return undefined;\n  }\n\n  hide() {\n    this.ngOnDestroy();\n  }\n\n  show() {\n    /** å¦æå­å¨åä¸æ°å»ºï¼åªéè¦ä¿®æ¹éé¢çåå®¹ **/\n    if (!this.container) {\n      this.create();\n    } else {\n      this.domHandler.findSingle(this.container, '.ui-tooltip-text').innerText = this.errorMessage;\n    }\n    const offset = this.domHandler.getOffset(this.in.nativeElement);\n    const targetTop = offset.top;\n    const targetLeft = offset.left;\n    let left: number;\n    let top: number;\n\n    this.container.style.display = 'block';\n\n    switch (this.tooltipPosition) {\n      case 'right':\n        left = targetLeft + this.domHandler.getOuterWidth(this.in.nativeElement);\n        top = targetTop + (this.domHandler.getOuterHeight(this.in.nativeElement) - this.domHandler.getOuterHeight(this.container)) / 2;\n        break;\n\n      case 'left':\n        left = targetLeft - this.domHandler.getOuterWidth(this.container);\n        top = targetTop + (this.domHandler.getOuterHeight(this.in.nativeElement) - this.domHandler.getOuterHeight(this.container)) / 2;\n        break;\n\n      case 'top':\n        left = targetLeft + (this.domHandler.getOuterWidth(this.in.nativeElement) - this.domHandler.getOuterWidth(this.container)) / 2;\n        top = targetTop - this.domHandler.getOuterHeight(this.container);\n        break;\n\n      case 'bottom':\n        left = targetLeft + (this.domHandler.getOuterWidth(this.in.nativeElement) - this.domHandler.getOuterWidth(this.container)) / 2;\n        top = targetTop + this.domHandler.getOuterHeight(this.in.nativeElement);\n        break;\n    }\n\n    this.container.style.left = left + 'px';\n    this.container.style.top = top + 'px';\n\n    this.container.style.zIndex = 999999; // different from PrimeNg\n\n  }\n\n  create() {\n    let styleClass = 'ui-widget ui-tooltip ui-tooltip-' + this.tooltipPosition;\n    this.container = document.createElement('div');\n    if (this.tooltipStyleClass) {\n      styleClass += ' ' + this.tooltipStyleClass;\n    }\n    this.container.className = styleClass;\n\n    const tooltipArrow = document.createElement('div');\n    tooltipArrow.className = 'ui-tooltip-arrow';\n    this.container.appendChild(tooltipArrow);\n\n    const tooltipText = document.createElement('div');\n    tooltipText.className = 'ui-tooltip-text ui-shadow ui-corner-all';\n    tooltipText.innerHTML = this.errorMessage;\n\n    if (this.positionStyle) {\n      this.container.style.position = this.positionStyle;\n    }\n\n    this.container.appendChild(tooltipText);\n\n    document.body.appendChild(this.container);\n\n  }\n\n  ngOnDestroy() {\n    if (this.container && this.container.parentElement) {\n      document.body.removeChild(this.container);\n    }\n    this.container = null;\n  }\n}\n","import {ApiDataProps, DataItemProps} from '@er/types';\nimport {TreeNode} from 'primeng/api';\nimport {PngDataAwareProps} from '../../types/props';\n\nexport interface PngTreeNodeProps extends TreeNode {\n  [prop: string]: any;\n}\n\nexport interface PngTreeProps extends PngDataAwareProps {\n\n  nodes?: PngTreeNodeProps[];\n\n  selectionMode?: 'single' | 'multiple' | 'checkbox';\n\n  selection?: TreeNode | TreeNode[];\n\n  contextMenu?: any;\n\n  layout?: 'vertical' | 'horizontal';\n\n  draggableScope?: any;\n\n  droppableScope?: any;\n\n  draggableNodes?: boolean;\n\n  droppableNodes?: boolean;\n\n  metaKeySelection?: boolean;\n\n  propagateSelectionUp?: boolean;\n\n  propagateSelectionDown?: boolean;\n\n  loadingIcon?: string;\n\n  emptyMessage?: string;\n\n  selectionChange?: (event) => void;\n\n  onNodeSelect?: (event) => void;\n\n  onNodeUnselect?: (event) => void;\n\n  onNodeExpand?: (event) => void;\n\n  onNodeCollapse?: (event) => void;\n\n  onNodeContextMenuSelect?: (event) => void;\n\n  onNodeDrop?: (event) => void;\n\n  $container?: any;\n\n  $ext?: {\n    root?: string | TreeNode;\n    virtualRoot?: string | TreeNode;\n    hasSearchBox?: boolean;\n    dataItems?: {}[];\n    apiDataProps?: ApiDataProps\n    dataItemProps?: DataItemProps\n    caption?: string;\n    captionIcon?: string;\n    nodesFormat?: 'standard' | 'plainArray';\n    icon?: string;\n    collapsedIcon?: string | { method: ((node) => string) };\n    expandedIcon?: string | { method: ((node) => string) };\n    selectable?: boolean | { method: ((node) => boolean) };\n    autoExpandLevel?: number;\n    lazy?: boolean;\n    filter?: string | { method: ((nodes: {}[]) => {}[]) };\n    onLazyLoad?: (event) => { node?: TreeNode, data: any };\n  };\n}\n\n\nexport const PNG_TREE_NODE_KEYS = {\n  idKey: 'id',\n  labelKey: 'label',\n  parentKey: 'parent',\n  childrenKey: 'children',\n  leafKey: 'leaf',\n  dataKey: 'data',\n  expandedKey: 'expanded'\n};\n\nexport const DEFAULT_PNG_TREE_NODE_PROPS: PngTreeNodeProps = {};\n\nexport const DEFAULT_PNG_TREE_PROPS: PngTreeProps = {\n  style: {'max-height.px': 500, 'max-width.px': 350, 'overflow': 'auto'},\n  emptyMessage: 'æ²¡æèç¹ä¿¡æ¯',\n  $ext: {\n    apiDataProps: {\n      dataPath: 'items',\n      size: 9999\n    },\n    dataItemProps: {\n      idKey: 'id',\n      parentKey: 'parent',\n      labelKey: 'name',\n      leafKey: 'leaf'\n    },\n    nodesFormat: 'plainArray',\n    lazy: false,\n    hasSearchBox: true,\n    autoExpandLevel: 1,\n    expandedIcon: 'fa fa-folder-open',\n    collapsedIcon: 'fa fa-folder',\n    icon: 'fa fa-leaf'\n  }\n};\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DataAwareControlWrapperComponent, HTTP_TAG_STATE$} from '@er/core';\nimport {CommonsUtils, DataItemUtils, PinyinUtil, RegUtils, StatesUtils, TreeUtils} from '@er/utils';\nimport {TreeNode} from 'primeng/api';\nimport {Tree} from 'primeng/tree';\nimport {Observable} from 'rxjs';\nimport {DEFAULT_PNG_TREE_PROPS, PNG_TREE_NODE_KEYS, PngTreeNodeProps, PngTreeProps} from './types';\n\n\nexport {PngTreeProps, PNG_TREE_NODE_KEYS} from './types';\n\n@Component({\n  selector: 'png-tree',\n  templateUrl: 'tpl.html',\n  styleUrls: ['styles.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PngTreeComponent),\n    multi: true\n  }],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PngTreeComponent extends DataAwareControlWrapperComponent<PngTreeProps> implements OnInit, OnDestroy {\n\n  @ViewChild('pngTree') tree: Tree;\n\n  unFilteredValue: PngTreeNodeProps[];\n\n  loading$: Observable<boolean>;\n\n  filtered: boolean;\n\n  filterValue: string;\n\n  expandedNode: TreeNode;\n\n  templateNames = {\n    icon: 'icon',\n    node: 'node'\n  };\n\n  @Output() onEmptyNode = new EventEmitter();\n\n  @Output() onLazyLoad = new EventEmitter();\n\n  $defaultProps = DEFAULT_PNG_TREE_PROPS;\n\n  selectedNode: {};\n\n  selectedNodeValues: {}[];\n\n  modelFormatter = this.formatModel;\n\n  valueParser = this.parseValue;\n\n  constructor(private cd: ChangeDetectorRef) {\n    super();\n  }\n\n  private _selection: TreeNode | TreeNode[];\n\n  get selection() {\n    return this._selection;\n  }\n\n  set selection(selection) {\n    this._selection = selection;\n    this.value = selection;\n  }\n\n  onPropsInit() {\n    this.filtered = false;\n    this.loading$ = HTTP_TAG_STATE$(this.$props.$id);\n    if (this.$props.$ext.dataItems) {\n      this.data$.next(this.$props.$ext.dataItems);\n    }\n    StatesUtils.create(this.$props.$id, {\n      component: this\n    }, true);\n  }\n\n  load() {\n    this.apiDataProps = {...this.apiDataProps};\n    this.cd.markForCheck();\n  }\n\n  formatModel(model) {\n    if (model) {\n      this.selectedNodeValues = model;\n    }\n    return model;\n  }\n\n  parseValue(value) {\n    let selectedNodeValues;\n    if (CommonsUtils.isArray(value)) {\n      selectedNodeValues = CommonsUtils.flattenDeep(value).map(node => this.getSelectedNodeValues(node));\n    } else if (CommonsUtils.isJson(value)) {\n      selectedNodeValues = this.getSelectedNodeValues(value);\n    }\n    selectedNodeValues = CommonsUtils.flatten(selectedNodeValues);\n    selectedNodeValues = CommonsUtils.unique(selectedNodeValues, this.$props.$ext.dataItemProps.idKey);\n    selectedNodeValues = CommonsUtils.orderBy(selectedNodeValues, this.$props.$ext.dataItemProps.idKey, 'asc');\n    if (this.$props && this.$props.$id) {\n      StatesUtils.update(this.$props.$id, {\n        selectedNodeValues: selectedNodeValues\n      });\n    }\n    this.selectedNodeValues = selectedNodeValues;\n    return selectedNodeValues;\n  }\n\n  expandAll() {\n    this.data$.value.forEach(node => {\n      TreeUtils.expandNode(node, true, this.$props.$ext);\n    });\n  }\n\n  collapseAll() {\n    this.data$.value.forEach(node => {\n      TreeUtils.expandNode(node, false, this.$props.$ext);\n    });\n  }\n\n  filter(event) {\n    const data = this.applyFilter(event.target.value);\n    this.data$.next(data);\n    this.filtered = true;\n    this.expandAll();\n    //  this.cd.detectChanges();\n  }\n\n  applyFilter(filterValue: string): {}[] {\n    if (!filterValue) {\n      this.clearFilter();\n      return this.unFilteredValue;\n    } else {\n      filterValue = filterValue.toLowerCase();\n      return TreeUtils.filter(this.unFilteredValue, (node) => {\n        let py = node['$py'];\n        if (!py) {\n          py = PinyinUtil.getFirstLetter(node.label);\n          node['$py'] = py;\n        }\n        const idKey = this.$props.$ext.dataItemProps && this.$props.$ext.dataItemProps.idKey;\n        const sVal = ((node.data && node.data[idKey]) || '') + '';\n        const sLab = node.label || '';\n        if (/^\\w+$/.test(filterValue)) {\n          return sLab.startsWith(filterValue) || sVal.startsWith(filterValue) || py.startsWith(filterValue);\n        } else {\n          return RegUtils.test(sVal, filterValue) || RegUtils.test(py, filterValue);\n        }\n      });\n    }\n  }\n\n  clearFilter() {\n    this.filterValue = '';\n    this.data$.next([...this.unFilteredValue]);\n    this.filtered = false;\n  }\n\n  getSelectedNodeValues(node): {}[] {\n    const value = this.getSelectedNodeValue(node);\n    return CommonsUtils.flattenDeep(value);\n  }\n\n  onNodeExpand(event) {\n    this.expandedNode = event.node;\n    if (!event.node.children && this.$props.$ext.lazy) {\n      this.onLazyLoad.emit(this.getEventContext(event));\n    } else {\n      this.resolveNode(event.node);\n    }\n  }\n\n  onNodeSelect(event) {\n    this.selectedNode = event.node && event.node[PNG_TREE_NODE_KEYS.dataKey] || event.node;\n    if (this.$props && this.$props.$id) {\n      StatesUtils.update(this.$props.$id, {\n        selectedNode: this.selectedNode\n      });\n    }\n    this.updateTouch();\n  }\n\n  onNodeUnSelect(event) {\n    this.updateTouch();\n  }\n\n  onTreeDataReady(event) {\n    let treeNodes = this.createTreeNodes(event);\n    this.initSelection(treeNodes);\n    this.unFilteredValue = treeNodes;\n    if (treeNodes.length > 0) {\n      let level = this.$props.$ext.autoExpandLevel;\n      let nodeId;\n      if (this.expandedNode) {\n        let node = this.expandedNode;\n        nodeId = node['id'];\n        while (node.parent) {\n          level++;\n          node = node.parent;\n        }\n      }\n      TreeUtils.expandNode(treeNodes[0], true, this.$props.$ext, level, 1, nodeId);\n    } else if (treeNodes.length === 0 || (treeNodes.length === 1 && !treeNodes['children'])) {\n      this.onEmptyNode.emit();\n    }\n    if (this.$props.$ext.filter) {\n      const filter = this.$props.$ext.filter;\n      if (CommonsUtils.isString(filter)) {\n        treeNodes = this.applyFilter(<string>filter);\n      } else {\n        treeNodes = filter['method'](treeNodes);\n      }\n    }\n    this.data$.next(treeNodes);\n  }\n\n  initSelection(treeNodes) {\n    if (this._selection) {\n      this.tree.selection = this._selection;\n      this.tree.propagateUp(<TreeNode>this._selection, true);\n      return;\n    }\n    if (this.selectedNodeValues && treeNodes) {\n      this._selection = [];\n      const values = CommonsUtils.getArrayValue(this.selectedNodeValues);\n      for (let i = 0; i < values.length; i++) {\n        const found = TreeUtils.findNode(treeNodes, values[i], this.$props.$ext);\n        if (found) {\n          (this._selection as TreeNode[]).push(found);\n        }\n      }\n      this.tree.selection = this._selection;\n      (this._selection as TreeNode[]).forEach(node => {\n        this.tree.propagateUp(node, true);\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.$props && this.$props.$id) {\n      StatesUtils.deleteState(this.$props.$id);\n    }\n    super.ngOnDestroy();\n  }\n\n  private getSelectedNodeValue(node, nodes?: {}[]) {\n    if (CommonsUtils.isEmpty(node)) {\n      return undefined;\n    }\n    if (node['isVirtual']) {\n      return undefined;\n    }\n    nodes = nodes || [];\n    const data = node[PNG_TREE_NODE_KEYS.dataKey];\n    if (CommonsUtils.isEmpty(data)) {\n      return undefined;\n    }\n    let val: {};\n    if (this.$props.$ext.dataItemProps && this.$props.$ext.dataItemProps.valueKey) {\n      val = DataItemUtils.getItemValue(data, this.$props.$ext.dataItemProps.valueKey);\n    } else {\n      val = {};\n      val[this.$props.$ext.dataItemProps.idKey] = data[this.$props.$ext.dataItemProps.idKey];\n      val[<string>this.$props.$ext.dataItemProps.labelKey] = data[<string>this.$props.$ext.dataItemProps.labelKey];\n      if (this.$props.$ext.dataItemProps.typeKey) {\n        val[this.$props.$ext.dataItemProps.typeKey] = data[this.$props.$ext.dataItemProps.typeKey];\n      }\n    }\n    nodes.push(val);\n    if (node[PNG_TREE_NODE_KEYS.parentKey]) {\n      this.getSelectedNodeValue(node[PNG_TREE_NODE_KEYS.parentKey], nodes);\n    }\n    return nodes;\n  }\n\n  private createTreeNodes(nodes: {}[]): {}[] {\n    if (!nodes) {\n      return [];\n    }\n    let treeNodes: {}[] = [...nodes];\n    if (this.$props.$ext.nodesFormat === 'plainArray') {\n      treeNodes = TreeUtils.transNodes(treeNodes, {\n        src: this.$props.$ext.dataItemProps,\n        node: PNG_TREE_NODE_KEYS\n      }, this.$props.$ext.root, this.$props.$ext.lazy);\n    }\n    if (treeNodes[0]) {\n      TreeUtils.initNode(treeNodes[0], this.$props.$ext);\n    }\n    let rootNode: TreeNode = {};\n    if (this.$props.$ext.virtualRoot) {\n      if (CommonsUtils.isString(this.$props.$ext.virtualRoot)) {\n        rootNode.label = <string>this.$props.$ext.virtualRoot;\n      } else {\n        rootNode = <TreeNode>this.$props.$ext.virtualRoot;\n      }\n      rootNode.children = treeNodes;\n      rootNode['isVirtual'] = true;\n      return [rootNode];\n    } else {\n      return treeNodes;\n    }\n  }\n\n  private resolveNode(node) {\n    if (node) {\n      TreeUtils.initNode(node, this.$props.$ext);\n      if (node.children) {\n        node.children.forEach(child => TreeUtils.initNode(child, this.$props.$ext));\n      }\n    }\n  }\n\n}\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewChild} from '@angular/core';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport {RouteBindComponent} from '@er/core';\nimport {ANIMATIONS} from '@er/presets';\nimport {CommonsUtils, IdUtils} from '@er/utils';\nimport {PngTableComponent} from '../table/component/table/component';\nimport {PngTableProps} from '../table/types';\nimport {PngTreeComponent} from '../tree/component';\nimport {PngTreeProps} from '../tree/types';\n\n@Component({\n  selector: 'png-tree-nav-table',\n  template: `\n    <div [hidden]=\"isFormOutlet\">\n      <er-fluid-container>\n        <er-left-right [hideLeft]=\"!tree || hideTree\" [switchable]=\"!!tree && switchable\">\n          <ng-template erTypedTemplate=\"left\">\n            <png-panel *ngIf=\"tree\" [icon]=\"tree.$ext?.captionIcon || 'fa fa-tree'\" [header]=\"tree.$ext?.caption || 'ç®¡çæ '\">\n              <png-tree erPropsBind [props]=\"tree\" (onEmptyNode)=\"closeTree()\"></png-tree>\n            </png-panel>\n          </ng-template>\n          <ng-template erTypedTemplate=\"right\">\n            <div *ngIf=\"table\">\n              <div [@fadeIn]=\"true\">\n                <png-table erPropsBind [props]=\"table\"></png-table>\n              </div>\n            </div>\n          </ng-template>\n        </er-left-right>\n      </er-fluid-container>\n    </div>\n    <router-outlet name=\"aux\">\n      <ng-container *ngTemplateOutlet=\"goBack\"></ng-container>\n    </router-outlet>\n    <ng-container *ngTemplateOutlet=\"goBack\"></ng-container>\n    <ng-template #goBack>\n      <div *ngIf=\"isFormOutlet\">\n        <a (click)=\"back()\" class=\"btn btn-outline-primary\"\n           title=\"è¿åå°æ°æ®æµè§\"> <i class=\"fa fa-2x text-danger fa-sign-out fa-rotate-180\"></i> è¿å</a>\n\n      </div>\n    </ng-template>\n  `,\n  animations: [\n    ANIMATIONS.zoomIn,\n    ANIMATIONS.fadeIn\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PngTreeNavTableComponent extends RouteBindComponent {\n\n  @Input() tree: PngTreeProps;\n\n  @Input() table: PngTableProps;\n\n  @Input() switchable = true;\n\n  @Input() hideTree = false;\n\n  @ViewChild(PngTableComponent) pngTable: PngTableComponent;\n\n  @ViewChild(PngTreeComponent) pngTree: PngTreeComponent;\n\n  refreshTree: boolean;\n\n  isRestore: boolean;\n  _isFormOutlet: boolean;\n\n  constructor(private cd: ChangeDetectorRef, private router: Router, private activatedRoute: ActivatedRoute) {\n    super();\n    this.$subscriptions = this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.isFormOutlet = event.url.indexOf('(aux:') > 0;\n        if (this.isRestore) {\n          this.isRestore = false;\n          this.refresh();\n        }\n        this.cd.markForCheck();\n      }\n    });\n  }\n\n  get isFormOutlet() {\n    return this._isFormOutlet;\n  }\n\n  set isFormOutlet(formOutlet) {\n    if (this.isFormOutlet !== formOutlet) {\n      this._isFormOutlet = formOutlet;\n    }\n  }\n\n  refresh() {\n    this.pngTable.load();\n    if (this.pngTree && this.refreshTree) {\n      this.refreshTree = false;\n      this.pngTree.load();\n    }\n  }\n\n  beforeRoutePropsBind(props) {\n    this.tree = undefined;\n    this.table = undefined;\n    this.switchable = true;\n    this.hideTree = false;\n    if (props.caption) {\n      CommonsUtils.set(props, 'table.caption', props.caption);\n    }\n    return props;\n  }\n\n  afterRoutePropsBind() {\n    if (!this.tree) {\n      this.switchable = false;\n    } else {\n      this.hideTree = false;\n      this.switchable = true;\n      this.tree.$id = IdUtils.getRandom();\n      this.tree.$container = this;\n      CommonsUtils.set(this.tree, '$ext.$container', this);\n    }\n    if (this.table) {\n      this.table.$id = IdUtils.getRandom();\n      this.table.$container = this;\n      CommonsUtils.set(this.table, '$ext.$container', this);\n    }\n  }\n\n  closeTree() {\n    this.hideTree = true;\n  }\n\n  back() {\n    this.isRestore = true;\n    this.router.navigate(['./', {outlets: {aux: null}}], {\n      relativeTo: this.activatedRoute\n    });\n  }\n\n  // ngOnInit() {\n  //   super.ngOnInit();\n  //   alert();\n  // }\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'png-step',\n  styles: ['.step-container {padding: 45px 25px 45px 25px; margin-bottom: 20px;}'],\n  template: `\n    <div *ngIf=\"active\" [ngClass]=\"styleClass\" [ngStyle]=\"style\" class=\"ui-widget-content ui-corner-all step-container\">\n      <ng-content></ng-content>\n    </div>\n  `\n})\nexport class PngStepComponent {\n  @Input() styleClass: any;\n  @Input() style: any;\n  @Input() label: string;\n  active = false;\n}\n","import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  QueryList,\n  SimpleChanges\n} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {MenuItem} from 'primeng/components/common/api';\nimport {PngStepComponent} from './step.component';\n\nexport {PngWizardProps} from './type';\n\n@Component({\n  selector: 'png-wizard',\n  template: `\n    <ng-container *ngIf=\"template(templateNames.header)\">\n      <ng-container *ngTemplateOutlet=\"template(templateNames.header)\"></ng-container>\n    </ng-container>\n    <p-steps [model]=\"items\" [(activeIndex)]=\"activeIndex\"\n             [ngClass]=\"styleClass\" [ngStyle]=\"style\" [readonly]=\"false\"></p-steps>\n    <ng-content></ng-content>\n    <button pButton type=\"button\" *ngIf=\"activeIndex > 0\" class=\"mr-2\"\n            (click)=\"previous()\" icon=\"fa fa-hand-o-left\" label=\"Previous\"></button>\n    <button pButton type=\"button\" *ngIf=\"activeIndex < items.length - 1\"\n            (click)=\"next()\" icon=\"fa fa-hand-o-right\" iconPos=\"right\" label=\"Next\"></button>\n    <ng-container *ngIf=\"template(templateNames.footer)\">\n      <ng-container *ngTemplateOutlet=\"template(templateNames.footer)\"></ng-container>\n    </ng-container>\n  `,\n  styleUrls: ['styles.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PngWizardComponent extends BaseComponent implements AfterContentInit, OnChanges {\n\n  @Input() activeIndex = 0;\n\n  @Input() styleClass: any;\n\n  @Input() style: any;\n\n  @Input() stepStyleClass: string;\n\n  @Input() stepStyle: string;\n\n  @Output() stepChange: EventEmitter<any> = new EventEmitter();\n\n  items: MenuItem[] = [];\n\n  @ContentChildren(PngStepComponent) steps: QueryList<PngStepComponent>;\n\n  templateNames = {\n    header: 'header',\n    footer: 'footer'\n  };\n\n  ngAfterContentInit() {\n\n    super.ngAfterContentInit();\n\n    this.steps.toArray().forEach((step: PngStepComponent, index: number) => {\n      if (!step.styleClass) {\n        step.styleClass = this.stepStyleClass;\n      }\n\n      if (!step.style) {\n        step.style = this.style;\n      }\n\n      if (index === this.activeIndex) {\n        step.active = true;\n      }\n\n      this.items[index] = {\n        label: step.label,\n        command: (event: any) => {\n          this.steps.toArray().forEach((s: PngStepComponent) => s.active = false);\n          step.active = true;\n          this.activeIndex = index;\n          this.stepChange.emit(index);\n        }\n      };\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!this.steps) {\n      return;\n    }\n\n    for (const prop in changes) {\n      if (prop === 'activeIndex') {\n        const curIndex = changes[prop].currentValue;\n        this.steps.toArray().forEach((step: PngStepComponent, index: number) => {\n          const selected = index === curIndex;\n          step.active = selected;\n          if (selected) {\n            // emit currently selected label\n            // this.change.next(step.label);\n          }\n        });\n        this.stepChange.emit(curIndex);\n      }\n    }\n  }\n\n  previous() {\n    this.activeIndex--;\n    this.stepChange.emit(this.activeIndex);\n    this.ngOnChanges({\n      activeIndex: {\n        currentValue: this.activeIndex,\n        previousValue: this.activeIndex + 1,\n        firstChange: false,\n        isFirstChange: () => false\n      }\n    });\n  }\n\n  next() {\n    this.activeIndex++;\n    this.stepChange.emit(this.activeIndex);\n    this.ngOnChanges({\n      activeIndex: {\n        currentValue: this.activeIndex,\n        previousValue: this.activeIndex - 1,\n        firstChange: false,\n        isFirstChange: () => false\n      }\n    });\n  }\n\n}\n","import {PngAutoCompleteComponent} from './auto-complete/component';\nimport {PngButtonComponent} from './button/component';\nimport {PngButtonsComponent} from './buttons/component';\nimport {PngCalendarComponent} from './calendar/component';\nimport {PngChartComponent} from './chart/component';\nimport {PngCheckBoxComponent} from './check-box/component';\nimport {PngConfirmDialogComponent} from './confirm/component';\nimport {PngFileUploadComponent} from './file-upload/component';\nimport {PngImageComponent} from './image/component';\nimport {PngInputComponent} from './input/component';\nimport {PngListBoxComponent} from './list/component';\nimport {PngMultiSelectComponent} from './multi-select/component';\nimport {PngAlertComponent} from './notify.alert/component';\nimport {PngAnnounceComponent} from './notify.announce/component';\nimport {PngOptionItemComponent} from './option-item/component';\nimport {PngOverlayPanelComponent} from './overlay-panel/component';\nimport {PngPanelComponent} from './panel/component';\nimport {PngPopupDialogComponent} from './popup/component';\nimport {PngRadioComponent} from './radio/component';\nimport {PngRatingComponent} from './rating/component';\nimport {PngSearchBoxComponent} from './search-box/component';\nimport {PngSelectButtonComponent} from './select-button/component';\nimport {PngSelectComponent} from './select/component';\nimport {PngSliderComponent} from './slider/component';\nimport {PngTableComponent} from './table/component/table/component';\nimport {ValidateMessageTooltipComponent} from './tool-tip/component';\nimport {PngTreeNavTableComponent} from './tree-nav-table/component';\nimport {PngTreeComponent} from './tree/component';\nimport {PngWizardComponent} from './wizard/component';\nimport {PngStepComponent} from './wizard/step.component';\n\nexport {PngTableComponent} from './table/component/table/component';\nexport {PngAutoCompleteComponent, PngAutoCompleteProps} from './auto-complete/component';\nexport {PngConfirmDialogComponent} from './confirm/component';\nexport {PngCalendarComponent, PngCalendarProps} from './calendar/component';\nexport {PngOverlayPanelComponent} from './overlay-panel/component';\nexport {PngPanelComponent} from './panel/component';\nexport {PngPopupDialogComponent} from './popup/component';\nexport {PngAlertComponent} from './notify.alert/component';\nexport {PngAnnounceComponent} from './notify.announce/component';\nexport {PngInputComponent, PngInputAttrs} from './input/component';\nexport {PngOptionItemComponent} from './option-item/component';\nexport {PngSearchBoxComponent} from './search-box/component';\nexport {ValidateMessageTooltipComponent} from './tool-tip/component';\nexport {PngSliderComponent, PngSliderProps} from './slider/component';\nexport {PngTreeNavTableComponent} from './tree-nav-table/component';\nexport {PngButtonComponent} from './button/component';\nexport {PngButtonsComponent} from './buttons/component';\nexport {PngCheckBoxComponent, PngCheckboxProps} from './check-box/component';\nexport {PngImageComponent} from './image/component';\nexport {PngSelectComponent, PngSelectProps} from './select/component';\nexport {PngMultiSelectComponent, PngMultiSelectProps} from './multi-select/component';\nexport {PngListBoxComponent, PngListBoxProps} from './list/component';\nexport {PngRadioComponent, PngRadioProps} from './radio/component';\nexport {PngRatingComponent, PngRatingProps} from './rating/component';\nexport {PngTreeComponent, PngTreeProps, PNG_TREE_NODE_KEYS} from './tree/component';\nexport {PngWizardComponent, PngWizardProps} from './wizard/component';\nexport {PngStepComponent} from './wizard/step.component';\nexport {PngChartComponent} from './chart/component';\nexport {PngFileUploadComponent, PngFileUploadProps} from './file-upload/component';\nexport {PngSelectButtonComponent, PngSelectButtonProps} from './select-button/component';\nexport * from './table/types';\nexport * from './table/default';\n\nexport const PngComponents = [\n  PngAutoCompleteComponent,\n  PngButtonComponent,\n  PngButtonsComponent,\n  PngSearchBoxComponent,\n  PngAlertComponent,\n  PngAnnounceComponent,\n  PngPopupDialogComponent,\n  PngCheckBoxComponent,\n  PngConfirmDialogComponent,\n  PngOverlayPanelComponent,\n  PngInputComponent,\n  PngCalendarComponent,\n  PngChartComponent,\n  PngStepComponent,\n  PngTreeComponent,\n  PngTreeNavTableComponent,\n  PngPanelComponent,\n  PngSliderComponent,\n  PngSelectComponent,\n  PngRadioComponent,\n  PngMultiSelectComponent,\n  PngListBoxComponent,\n  PngOptionItemComponent,\n  PngRatingComponent,\n  ValidateMessageTooltipComponent,\n  PngTableComponent,\n  PngWizardComponent,\n  PngFileUploadComponent,\n  PngImageComponent,\n  PngSelectButtonComponent\n];\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {StateNames} from '@er/types';\nimport {ConfigUtils, StatesUtils} from '@er/utils';\nimport {ScrollPanel} from 'primeng/primeng';\nimport {filter} from 'rxjs/operators';\n\nenum MenuOrientation {\n  STATIC,\n  OVERLAY,\n  SLIM,\n  HORIZONTAL\n}\n\n@Component({\n  selector: 'png-admin-work-space',\n  templateUrl: 'tpl.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PngAdminWorkSpaceComponent extends BaseComponent implements OnInit, AfterViewInit {\n\n  @Input() menuOrientation: MenuOrientation = MenuOrientation.STATIC;\n\n  @Input() darkMenu = true;\n\n  @Input() appName: string;\n\n  @Input() appTitle: string;\n\n  @Input() appLogo: string;\n\n  @Input() httpMenuTag: string;\n\n  @Output() onInitMenu = new EventEmitter();\n\n  profileMode: 'top' | 'inline' = 'inline';\n\n  rotateMenuButton: boolean;\n\n  topbarMenuActive: boolean;\n\n  overlayMenuActive: boolean;\n\n  staticMenuDesktopInactive: boolean;\n\n  staticMenuMobileActive: boolean;\n\n  layoutMenuScroller: HTMLDivElement;\n\n  menuClick: boolean;\n\n  topbarItemClick: boolean;\n\n  activeTopbarItem: any;\n\n  resetMenu: boolean;\n\n  menuHoverActive: boolean;\n\n  rootMenuToggleStateName = '$rootMenuToggler';\n\n  @ViewChild('layoutMenuScroller') layoutMenuScrollerViewChild: ScrollPanel;\n\n  templateNames = {\n    topbar: 'topbar',\n    header: 'header',\n    main: 'main',\n    footer: 'footer',\n    profile: 'profile',\n    settings: 'settings',\n    messages: 'messages',\n    notifications: 'notifications',\n    search: 'search'\n  };\n\n  constructor(public renderer: Renderer2, private cd: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.onInitMenu.emit();\n    this.$subscriptions = StatesUtils.observe(StateNames.menu, this.rootMenuToggleStateName)\n      .pipe(\n        filter(state => state !== undefined)\n      )\n      .subscribe(() => this._toggleMainMenu());\n    this.appTitle = this.appTitle || ConfigUtils.getConfig().appTitle;\n    this.appName = this.appName || ConfigUtils.getConfig().appName;\n    this.appLogo = this.appLogo || ConfigUtils.getConfig().appLogo;\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.layoutMenuScrollerViewChild.moveBar();\n    }, 100);\n  }\n\n  onLayoutClick() {\n    if (!this.topbarItemClick) {\n      this.activeTopbarItem = null;\n      this.topbarMenuActive = false;\n    }\n\n    if (!this.menuClick) {\n      if (this.isHorizontal() || this.isSlim()) {\n        this.resetMenu = true;\n      }\n\n      if (this.overlayMenuActive || this.staticMenuMobileActive) {\n        this.hideOverlayMenu();\n      }\n\n      this.menuHoverActive = false;\n    }\n\n    this.topbarItemClick = false;\n    this.menuClick = false;\n  }\n\n  onMenuClick($event) {\n    this.menuClick = true;\n    this.resetMenu = false;\n\n    if (!this.isHorizontal()) {\n      setTimeout(() => {\n        this.layoutMenuScrollerViewChild.moveBar();\n      }, 450);\n    }\n  }\n\n  onTopbarMenuButtonClick(event) {\n    this.topbarItemClick = true;\n    this.topbarMenuActive = !this.topbarMenuActive;\n\n    this.hideOverlayMenu();\n\n    event.preventDefault();\n  }\n\n  onTopbarItemClick(event, item) {\n    this.topbarItemClick = true;\n\n    if (this.activeTopbarItem === item) {\n      this.activeTopbarItem = null;\n    } else {\n      this.activeTopbarItem = item;\n    }\n\n    event.preventDefault();\n  }\n\n  onTopbarSubItemClick(event) {\n    event.preventDefault();\n  }\n\n  hideOverlayMenu() {\n    this.rotateMenuButton = false;\n    this.overlayMenuActive = false;\n    this.staticMenuMobileActive = false;\n  }\n\n  isTablet() {\n    const width = window.innerWidth;\n    return width <= 1024 && width > 640;\n  }\n\n  isDesktop() {\n    return window.innerWidth > 1024;\n  }\n\n  isMobile() {\n    return window.innerWidth <= 640;\n  }\n\n  isOverlay() {\n    return this.menuOrientation === MenuOrientation.OVERLAY;\n  }\n\n  isHorizontal() {\n    return this.menuOrientation === MenuOrientation.HORIZONTAL;\n  }\n\n  isSlim() {\n    return this.menuOrientation === MenuOrientation.SLIM;\n  }\n\n  changeToStaticMenu() {\n    this.menuOrientation = MenuOrientation.STATIC;\n  }\n\n  changeToOverlayMenu() {\n    this.menuOrientation = MenuOrientation.OVERLAY;\n  }\n\n  changeToHorizontalMenu() {\n    this.menuOrientation = MenuOrientation.HORIZONTAL;\n  }\n\n  changeToSlimMenu() {\n    this.menuOrientation = MenuOrientation.SLIM;\n  }\n\n  private _toggleMainMenu() {\n    const menu = StatesUtils.getValue(StateNames.rootMenu);\n    this.menuOrientation = menu && menu.orientation;\n    this.darkMenu = menu && menu.dark;\n    this.menuClick = true;\n    this.rotateMenuButton = !this.rotateMenuButton;\n    this.topbarMenuActive = false;\n\n    if (this.menuOrientation === MenuOrientation.OVERLAY) {\n      this.overlayMenuActive = !this.overlayMenuActive;\n    } else {\n      if (this.isDesktop()) {\n        this.staticMenuDesktopInactive = !this.staticMenuDesktopInactive;\n      } else {\n        this.staticMenuMobileActive = !this.staticMenuMobileActive;\n      }\n    }\n    this.cd.detectChanges();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {\n  AccordionModule,\n  AutoCompleteModule,\n  BreadcrumbModule,\n  ButtonModule,\n  CalendarModule,\n  CardModule,\n  ChartModule,\n  CheckboxModule,\n  ChipsModule,\n  ConfirmDialogModule,\n  DialogModule,\n  DropdownModule,\n  EditorModule,\n  FieldsetModule,\n  FileUploadModule,\n  InputMaskModule,\n  InputSwitchModule,\n  InputTextareaModule,\n  InputTextModule,\n  KeyFilterModule,\n  LightboxModule,\n  ListboxModule,\n  MenuModule,\n  MessagesModule,\n  MultiSelectModule,\n  OrganizationChartModule,\n  OverlayPanelModule,\n  PaginatorModule,\n  PanelModule,\n  RadioButtonModule,\n  RatingModule,\n  ScrollPanelModule,\n  SelectButtonModule,\n  SliderModule,\n  SpinnerModule,\n  SplitButtonModule,\n  StepsModule,\n  TabViewModule,\n  ToggleButtonModule,\n  TooltipModule,\n  TreeModule\n} from 'primeng/primeng';\nimport {TableModule} from 'primeng/table';\nimport {ToastModule} from 'primeng/toast';\n\n@NgModule({\n  exports: [\n    AutoCompleteModule,\n    AccordionModule,\n    BreadcrumbModule,\n    ConfirmDialogModule,\n    CardModule,\n    CalendarModule,\n    ChipsModule,\n    CheckboxModule,\n    ChartModule,\n    EditorModule,\n    InputTextModule,\n    InputTextareaModule,\n    FieldsetModule,\n    DialogModule,\n    ButtonModule,\n    FileUploadModule,\n    MessagesModule,\n    KeyFilterModule,\n    TableModule,\n    TabViewModule,\n    MultiSelectModule,\n    SliderModule,\n    DropdownModule,\n    RadioButtonModule,\n    PaginatorModule,\n    TooltipModule,\n    LightboxModule,\n    ListboxModule,\n    InputMaskModule,\n    InputSwitchModule,\n    CheckboxModule,\n    RadioButtonModule,\n    OverlayPanelModule,\n    OrganizationChartModule,\n    PanelModule,\n    RatingModule,\n    TreeModule,\n    SelectButtonModule,\n    SplitButtonModule,\n    SpinnerModule,\n    MenuModule,\n    ScrollPanelModule,\n    StepsModule,\n    ToastModule,\n    ToggleButtonModule\n  ]\n})\nexport class PrimeNgComponentsModule {\n}\n\n","import {ChangeDetectionStrategy, Component, HostBinding, HostListener, Input, TemplateRef} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {PngTableColumnProps} from '../../types';\nimport {PngTableComponent} from '../table/component';\n\n@Component({\n  selector: '[png-table-body-cell]',\n  template: `\n    <ng-container *ngIf=\"customerTpl;else default\">\n      <ng-container *ngTemplateOutlet=\"customerTpl;context:cellContext\"></ng-container>\n    </ng-container>\n    <ng-template #default>\n      <png-table-body-cell-content\n        [customerTpl]=\"dataCellTpl\"\n        [column]=\"column\"\n        [row]=\"row\"\n        [rowIndex]=\"rowIndex\"\n      ></png-table-body-cell-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PngTableBodyCellComponent extends BaseComponent {\n\n  @Input() column: PngTableColumnProps;\n\n  @Input() row: {}[];\n\n  @Input() rowIndex: number;\n\n  @Input() dataCellTpl: TemplateRef<any>;\n\n  constructor(public pngTable: PngTableComponent) {\n    super();\n  }\n\n  @HostBinding('style.width')\n  get width() {\n    return this.column.width;\n  }\n\n  @HostBinding('style.height')\n  get height() {\n    return this.column.height;\n  }\n\n  cellContext(event?) {\n    return {\n      $event: event,\n      $id: this.pngTable.$props.$id,\n      column: this.column,\n      row: this.row,\n      rowIndex: this.rowIndex,\n      pngTable: this.pngTable\n    };\n  }\n\n  @HostListener('mouseenter', ['$event'])\n  onMouseEnter(event) {\n    if (this.column.onMouseEnter) {\n      this.column.onMouseEnter.call(this.pngTable, this.cellContext(event));\n    }\n  }\n\n  @HostListener('mouseover', ['$event'])\n  onMouseOver(event) {\n    if (this.column.onMouseOver) {\n      this.column.onMouseOver.call(this.pngTable, this.cellContext(event));\n    }\n  }\n\n  @HostListener('mouseout', ['$event'])\n  onMouseOut(event) {\n    if (this.column.onMouseOut) {\n      this.column.onMouseOut.call(this.pngTable, this.cellContext(event));\n    }\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input, OnInit, QueryList, ViewChildren} from '@angular/core';\nimport {BaseComponent, DataFieldUtils, SelectorDirective} from '@er/core';\nimport {DataAttr, DataType, Overlay, OverlayContext, OverlayType} from '@er/types';\nimport {CommonsUtils} from '@er/utils';\nimport {PngTableColumnProps} from '../../types';\nimport {PngTableBodyCellComponent} from '../body-cell/component';\nimport {PngTableComponent} from '../table/component';\n\n@Component({\n  selector: 'png-table-body-cell-content',\n  templateUrl: 'tpl.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PngTableBodyCellContentComponent extends BaseComponent implements OnInit {\n\n  DATA_ATTR = DataAttr;\n\n  DATA_TYPE = DataType;\n\n  OVERLAY_TYPE = OverlayType;\n\n  @Input() column: PngTableColumnProps;\n\n  @Input() row: {}[];\n\n  @Input() rowIndex: number;\n\n  @ViewChildren(SelectorDirective) selectors: QueryList<SelectorDirective>;\n\n  constructor(public pngTable: PngTableComponent,\n              private cell: PngTableBodyCellComponent) {\n    super();\n  }\n\n  get cellContent() {\n    if (this.column.dataAttr === DataAttr.BUTTONS) {\n      let btns = this.column.cellContent;\n      btns = CommonsUtils.getArrayValue(btns);\n      btns = btns.filter(btn => !btn.show || btn.show === true || btn.show.method === true || (CommonsUtils.isFunction(btn.show.method) && <Function>(btn.show.method).call(this, this.cellContext())));\n      return btns;\n    }\n    let content = this.getValue(this.column.cellContent || this.row[this.column.key]);\n    if (CommonsUtils.isEmpty(content) && this.column.defaultCellContent !== undefined) {\n      content = this.column.defaultCellContent;\n    }\n    if (this.column.contentKey) {\n      content = CommonsUtils.get(content, this.column.contentKey);\n      if (CommonsUtils.isArray(content)) {\n        content = <string[]>content.join(',');\n      }\n    } else if (this.column.format) {\n      CommonsUtils.format(content, this.column.format);\n    } else if (CommonsUtils.isFunction(this.column.formatter)) {\n      content = (this.column.formatter as Function)(content);\n    } else if (this.column.formatter || CommonsUtils.isTemplateStr(content)) {\n      content = CommonsUtils.templateStr((this.column.formatter as string) || content, this.row);\n    } else if (CommonsUtils.isJson(content)) {\n      content = DataFieldUtils.getFieldDisplayContent(content, this.column.dataField);\n    }\n    if (CommonsUtils.isString(content) && this.column.maxLength && content.length > this.column.maxLength) {\n      content = content.substr(0, this.column.maxLength) + '...';\n    }\n    if (content === true) {\n      return 'æ¯';\n    } else if (content === false) {\n      return 'å¦';\n    }\n    return content;\n  }\n\n  get cellIcon() {\n    return this.getValue(this.column.cellIcon);\n  }\n\n  get toolTip() {\n    const toolTip = this.getValue(this.column.toolTip);\n    if (!toolTip && this.column.maxLength && this.row[this.column.key] && this.row[this.column.key].length > this.column.maxLength) {\n      return this.row[this.column.key];\n    }\n    return toolTip;\n  }\n\n  get cellClass() {\n    return CommonsUtils.getValue(this.column.cellStyleClass, this.cellContext());\n  }\n\n  get cellStyle() {\n    return CommonsUtils.getValue(this.column.cellStyle, this.cellContext());\n  }\n\n  get routLink() {\n    if (!this.column.routLink) {\n      return;\n    }\n    let routerLink = this.column.routLink;\n    if (CommonsUtils.isString(routerLink)) {\n      routerLink = [routerLink];\n    }\n    let routeParams: any[];\n    if (this.column.routParam) {\n      if (CommonsUtils.isFunction(this.column.routParam)) {\n        routeParams = (<Function>this.column.routParam).call(this.pngTable, this.column, this.row) || [];\n      } else if (CommonsUtils.isArray(this.column.routParam)) {\n        routeParams = (<any[]>this.column.routParam).map(param => this.row[param]) || [];\n      } else if (CommonsUtils.isString(this.column.routParam)) {\n        routeParams = [this.row[<string>this.column.routParam]] || [];\n      } else if (this.pngTable.$props.dataKey) {\n        routeParams = [this.row[this.pngTable.$props.dataKey]] || [];\n      }\n    }\n    if (routeParams) {\n      routerLink = [...<any[]>routerLink, ...routeParams];\n    }\n    return routerLink;\n  }\n\n  get queryParam() {\n    if (!this.column.routQueryParams) {\n      return;\n    }\n    if (CommonsUtils.isFunction(this.column.routQueryParams)) {\n      return (<Function>this.column.routQueryParams).call(this.pngTable, this.column, this.row);\n    } else if (CommonsUtils.isArray(this.column.routQueryParams)) {\n      const params = {};\n      (<any[]>this.column.routQueryParams).map(param => params[param] = this.row[param]);\n      return params;\n    } else if (CommonsUtils.isString(this.column.routQueryParams)) {\n      return {[<string>this.column.routQueryParams]: this.row[<string>this.column.routQueryParams]};\n    }\n    return undefined;\n  }\n\n  iconClass(icon) {\n    if (icon && icon.trim().startsWith('fa-')) {\n      return `fa ${icon}`;\n    }\n    return icon;\n  }\n\n  hasAttr(attr) {\n    return this.column.dataAttr === attr ||\n      (CommonsUtils.isArray(this.column.dataAttr) && (this.column.dataAttr as DataAttr[]).indexOf(attr) >= 0);\n  }\n\n  overlayContext(overlay, index, event?): OverlayContext {\n    return {\n      ...this.cellContext(event),\n      type: overlay.type,\n      content: this.getValue(overlay.content),\n      context: overlay.context,\n      styleClass: this.getValue(overlay.styleClass),\n      style: this.getValue(overlay.style),\n      overlayStyleClass: this.getValue(overlay.overlayStyleClass),\n      overlayStyle: this.getValue(overlay.overlayStyle),\n      id: `overlay-cell-${this.column.key}-${index}`\n    };\n  }\n\n  treeContent(content) {\n    if (CommonsUtils.isArray(content)) {\n      return 'å±' + (content as any[]).length + 'é¡¹';\n    } else if (CommonsUtils.isJson(content)) {\n      return 'å±' + Object.keys(content).length + 'é¡¹';\n    } else {\n      return content;\n    }\n  }\n\n  overlayTreeContext(content, event?): OverlayContext {\n    return {\n      ...this.cellContext(event),\n      type: OverlayType.TREE,\n      content: content\n    };\n  }\n\n  cellContext(event?) {\n    return this.cell.cellContext(event);\n  }\n\n  ngOnInit(): void {\n    if (this.column.overlays) {\n      (<Overlay[]>this.column.overlays).filter(overlay => overlay.type === OverlayType.MENU)\n        .forEach(overlay => {\n          if (overlay.content['menuItem'].command) {\n            const command = overlay.content['menuItem'].command;\n            overlay.content['menuItem'].command = (event) => command.call(this, this.cellContext(event));\n          }\n        });\n    }\n  }\n\n  cellClick(event) {\n    event.preventDefault();\n    if (this.column.onClick) {\n      this.column.onClick.call(this.pngTable, this.cellContext(event));\n    }\n  }\n\n  toggleTip(event, tipText) {\n    if (tipText) {\n      this.pngTable.showOverlay(<OverlayContext>{\n        $event: event,\n        content: tipText,\n        styleClass: 'alert alert-info',\n        style: {\n          overflow: 'auto',\n          width: '300px',\n          height: '300px'\n        }\n      });\n    }\n  }\n\n  private getValue(target) {\n    return CommonsUtils.getValue(target, this.cellContext()) || '';\n  }\n}\n","import {AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, TemplateRef, ViewChild} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {CommonsUtils} from '@er/utils';\nimport {TableCheckbox} from 'primeng/table';\nimport {PngTableColumnProps} from '../../types';\nimport {PngTableComponent} from '../table/component';\n\n@Component({\n  selector: '[png-table-body-row]',\n  template: `\n    <ng-container *ngIf=\"customerTpl;else default\">\n      <ng-container *ngTemplateOutlet=\"customerTpl;context:rowContext\"></ng-container>\n    </ng-container>\n    <ng-template #default>\n      <tr *ngIf=\"rowHeaderTpl\">\n        <ng-container *ngTemplateOutlet=\"rowHeaderTpl;context:rowContext\"></ng-container>\n      </tr>\n      <td *ngIf=\"pngTable.$props.$ext.rowExpandable\" class=\"col-expandable\">\n        <a href=\"#\" [pRowToggler]=\"row\">\n          <i [ngClass]=\"expanded ? 'pi pi-chevron-down' : 'pi pi-chevron-right'\"></i>\n        </a>\n      </td>\n      <td *ngIf=\"pngTable.$props.$ext.hasRowCheckbox\" class=\"col-checkbox\">\n        <p-tableCheckbox #chk [value]=\"row\"></p-tableCheckbox>\n      </td>\n      <td *ngIf=\"pngTable.$props.$ext.hasRowRadioButton\" class=\"col-radio\">\n        <p-tableRadioButton [value]=\"row\"></p-tableRadioButton>\n      </td>\n      <ng-container *ngFor=\"let col of columns\">\n        <td png-table-body-cell class=\"col-data col-data-{{col.key}}\"\n            [ngClass]=\"getColStyleClass(col)\"\n            [ngStyle]=\"getColStyle(col)\"\n            [customerTpl]=\"cellTpl\"\n            [column]=\"col\"\n            [row]=\"row\"\n            [rowIndex]=\"rowIndex\"\n            [dataCellTpl]=\"dataCellTpl\"\n        >\n        </td>\n      </ng-container>\n      <tr *ngIf=\"rowFooterTpl\">\n        <ng-container *ngTemplateOutlet=\"rowFooterTpl;context:rowContext\"></ng-container>\n      </tr>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PngTableBodyRowComponent extends BaseComponent implements AfterViewInit {\n\n  @Input() columns: PngTableColumnProps[];\n\n  @Input() row: {}[];\n\n  @Input() rowIndex: number;\n\n  @Input() expanded: boolean;\n\n  @Input() rowHeaderTpl: TemplateRef<any>;\n\n  @Input() rowFooterTpl: TemplateRef<any>;\n\n  @Input() cellTpl: TemplateRef<any>;\n\n  @Input() dataCellTpl: TemplateRef<any>;\n\n  @ViewChild('chk') chk: TableCheckbox;\n\n  constructor(public pngTable: PngTableComponent, private cd: ChangeDetectorRef) {\n    super();\n  }\n\n  get rowContext() {\n    return {\n      columns: this.columns,\n      row: this.row,\n      rowIndex: this.rowIndex,\n      expanded: this.expanded,\n      context: this.pngTable\n    };\n  }\n\n  ngAfterViewInit(): void {\n    if (this.chk) {\n      this.$subscriptions = this.chk.tableService.selectionSource$.subscribe(() => {\n        this.cd.detectChanges();\n      });\n    }\n  }\n\n  colContext(col) {\n    return {\n      ...this.rowContext,\n      ...col\n    };\n  }\n\n  getColStyleClass(col) {\n    return CommonsUtils.getValue(col.styleClass, this.colContext(col));\n  }\n\n  getColStyle(col) {\n    return CommonsUtils.getValue(col.style, this.colContext(col));\n  }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {ButtonProps, PopupDialogProp, StateNames} from '@er/types';\nimport {StatesUtils} from '@er/utils';\nimport {OverlayPanel} from 'primeng/primeng';\nimport {PngTableComponent} from '../table/component';\n\n@Component({\n  selector: 'png-table-caption',\n  template: `\n    <ng-container *ngIf=\"customerTpl;else default\">\n      <ng-container *ngTemplateOutlet=\"customerTpl;context:{$implicit:pngTable}\"></ng-container>\n    </ng-container>\n    <ng-template #default>\n      <div>\n        <span class=\"pull-left table-caption\" [innerHTML]=\"caption|erSafeHtml\"></span>\n        <span class=\"pull-right d-inline\"><i class=\"fa fa-refresh text-primary\" title=\"å·æ°è¡¨æ ¼\" (click)=\"refresh()\"></i></span>\n      </div>\n      <div class=\"clearfix\"></div>\n      <div *ngIf=\"hasSearchBox || hasAddAction || hasSearchInput\">\n        <div class=\"d-flex align-items-start\">\n          <div class=\"pl-3 py-3\" *ngIf=\"hasAddAction\">\n            <png-button erPropsBind [props]=\"addButton\" [outputContext]=\"{pngTable: pngTable}\"></png-button>\n          </div>\n          <div class=\"ml-auto py-3\" *ngIf=\"hasSearchInput && !hasSearchBox\">\n            <png-search-box title=\"ç»¼åæç´¢ï¼è¾å¥åè½¦é®æ§è¡\" (onSearch)=\"search($event)\"></png-search-box>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"hasSearchBox\">\n            <button pButton icon=\"fa fa-search\" label=\"é«çº§æ¥è¯¢\" (click)=\"openPanel()\"></button>\n            <ng-template #searchBuilderPanel>\n              <png-table-query-builder></png-table-query-builder>\n            </ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PngTableCaptionComponent extends BaseComponent {\n\n  @Input() caption: string;\n\n  @Input() hasAddAction: boolean;\n\n  @Input() hasSearchInput: boolean;\n\n  @Input() hasSearchBox: boolean;\n\n  @Input() addButton: ButtonProps;\n\n  @Output() onSimpleSearch = new EventEmitter();\n\n  @ViewChild('searchBuilderPanel') searchBuilderPanel: OverlayPanel;\n\n  constructor(public pngTable: PngTableComponent) {\n    super();\n  }\n\n  search(event) {\n    this.onSimpleSearch.emit(event);\n  }\n\n  openPanel() {\n    StatesUtils.update(StateNames.popup, <PopupDialogProp>{\n      header: 'æ¥è¯¢æ¡ä»¶å®ä¹',\n      content: this.searchBuilderPanel,\n      visible: true,\n      minWidth: 700,\n      contentMaxHeight: 400\n    } as {});\n  }\n\n  refresh() {\n    this.pngTable.load();\n  }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {PngTableColumnProps} from '../../types';\n\n@Component({\n  selector: 'png-table-column-selector',\n  template: `\n\n    <p-multiSelect [style]=\"{height: '30px', minWidth: '150px'}\"\n                   [ngClass]=\"styleClass\"\n                   [ngStyle]=\"style\"\n                   [options]=\"optionColumns\"\n                   [(ngModel)]=\"columns\"\n                   optionLabel=\"label\"\n                   [selectedItemsLabel]=\"'å½åæ¾ç¤º{0}('+optionColumns?.length+')ä¸ªå'\"\n                   defaultLabel=\"éæ©æ¾ç¤ºå­æ®µ\"\n                   (onChange)=\"changeColumns($event)\"\n    >\n    </p-multiSelect>\n\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PngTableColumnSelectorComponent extends BaseComponent {\n\n  @Input() columns: PngTableColumnProps[];\n\n  @Input() optionColumns: PngTableColumnProps[];\n\n  @Input() styleClass: any;\n\n  @Input() style: {};\n\n  @Output() onColumnsChange = new EventEmitter();\n\n  changeColumns(event) {\n    event.value.forEach(column => column.hidden = false);\n    this.onColumnsChange.emit(event);\n  }\n\n}\n","import {ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {ApiUtils, BaseComponent, DataFieldUtils} from '@er/core';\nimport {CommonsUtils} from '@er/utils';\nimport {Observable} from 'rxjs/internal/Observable';\nimport {PngTableColumnProps} from '../../types';\nimport {PngTableComponent} from '../table/component';\n\n@Component({\n  selector: '[png-table-expanded-row]',\n  template: `\n    <ng-container *ngIf=\"customerTpl;else default\">\n      <ng-container *ngTemplateOutlet=\"customerTpl;context:{$implicit:rowId,context:pngTable}\"></ng-container>\n    </ng-container>\n    <ng-template #default>\n      <td colspan=\"100%\">\n        <p-card styleClass=\"ui-card-shadow w-100 ui-table-expanded-content\" >\n          <er-http-status [tag]=\"rowId\" erPosition></er-http-status>\n          <ng-container *ngIf=\"expandContent$|async as expandContent\">\n            <div class=\"row w-100 m-3\" style=\"font-size: 16px\">\n              <ng-container *ngIf=\"!customerContent\">\n                <ng-container *ngFor=\"let col of dataColumns\">\n                  <span class=\"col-2 my-3\"><b class=\"pull-right\" [innerHTML]=\"col.label\"></b></span>\n                  <ng-container *ngIf=\"col.expandViewContent;else defaultView\">\n                    <er-dyna-content [content]=\"col.expandViewContent\" [context]=\"{data: expandContent, col: col}\"></er-dyna-content>\n                  </ng-container>\n                  <ng-template #defaultView>\n                    <span class=\"col-4 my-3\">{{content(col, expandContent)}}</span>\n                  </ng-template>\n                </ng-container>\n              </ng-container>\n              <ng-container *ngIf=\"customerContent\">\n                <er-dyna-content [content]=\"expandContent\"></er-dyna-content>\n              </ng-container>\n            </div>\n          </ng-container>\n        </p-card>\n      </td>\n    </ng-template>\n\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PngTableExpandedRowComponent extends BaseComponent implements OnChanges {\n\n  @Input() rowId: any;\n\n  @Input() columns: PngTableColumnProps[];\n\n  @Input() styleClass: any;\n\n  @Input() style: {} | ((row) => {});\n\n  expandContent$: Observable<any>;\n\n  customerContent = false;\n\n  constructor(public pngTable: PngTableComponent) {\n    super();\n  }\n\n  get dataColumns() {\n    return this.columns.filter(column => column.isDataColumn !== false && !column.isActionColumn);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.rowId) {\n      if (this.pngTable.$props.$ext.onExpandRowContent) {\n        this.customerContent = true;\n        this.expandContent$ = this.pngTable.$props.$ext.onExpandRowContent.method(this.rowId);\n      } else {\n        this.expandContent$ = ApiUtils.getById(this.pngTable.$props.$ext.apiDataProps.apiEntry, this.rowId, {\n          tag: this.rowId,\n          payload: {'fields': this.pngTable.$props.$ext.expandRowFields || this.pngTable.dataColumnNames}\n        });\n      }\n    }\n  }\n\n  content(col, rowData) {\n    if (!col.key) {\n      return;\n    }\n    if (col.cellContent) {\n      console.log('cellcontent');\n      return col.cellContent({row: rowData});\n    }\n    let c = rowData[col.key];\n    if (CommonsUtils.isJson(c)) {\n      let key;\n      if (col.dataField) {\n        key = DataFieldUtils.getDefaultFieldName(col.dataField);\n      }\n      if (key) {\n        return CommonsUtils.get(c, key);\n      } else {\n        const trans = {};\n        Object.keys(c).forEach(sub => {\n          const label = CommonsUtils.get(col, `dataField.fields.${sub}.label`);\n          if (label) {\n            trans[label] = c[sub];\n          } else {\n            trans[sub] = c[sub];\n          }\n        });\n        c = trans;\n      }\n    }\n    return CommonsUtils.getText(c);\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {PngTableColumnProps} from '../../types';\nimport {PngTableComponent} from '../table/component';\n\n@Component({\n  selector: 'tr[png-table-footer]',\n  template: `\n    <ng-container *ngIf=\"customerTpl;else default\">\n      <ng-container *ngTemplateOutlet=\"customerTpl; context:{columns:columns,context:pngTable}\"></ng-container>\n    </ng-container>\n    <ng-template #default></ng-template>\n  `\n})\n\nexport class PngTableFooterComponent extends BaseComponent {\n\n  @Input() columns: PngTableColumnProps[];\n\n  constructor(public pngTable: PngTableComponent) {\n    super();\n  }\n}\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, HostBinding, Input, OnInit, Output} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {Overlay, OverlayContext, OverlayType} from '@er/types';\nimport {CommonsUtils} from '@er/utils';\nimport {PngTableColumnProps} from '../../types';\nimport {PngTableComponent} from '../table/component';\n\n@Component({\n  selector: '[png-table-header-col]',\n  template: `\n    <span *ngIf=\"!column.sortable\" [innerHTML]=\"column.label|erSafeHtml\"></span>\n    <span *ngIf=\"column.sortable\" title=\"æåº\" [pSortableColumn]=\"column.key\" [innerHTML]=\"column.label|erSafeHtml\"></span>\n    <p-sortIcon *ngIf=\"column.sortable\" [field]=\"column.key\"></p-sortIcon>\n    <span *ngIf=\"column.filterable\" class=\"pull-right\">\n              <i class=\"fa fa-filter\" title=\"è¾å¥æ¥è¯¢åå®¹\" [ngClass]=\"{'ui-state-highlight': column.filters && column.filters.length>0}\"\n                 (click)=\"filterClick($event)\"></i>\n            </span>\n    <span *ngIf=\"column.aggable\" class=\"pull-right\">\n              <i class=\"fa fa-sum\" title=\"éæ©ç»è®¡æ¹æ³\" [ngClass]=\"{'ui-state-highlight': column.aggProps && column.aggProps.length>0}\"\n                 (click)=\"aggsClick($event)\"></i>\n            </span>\n    <ng-container *ngIf=\"column.headerOverlays\">\n      <ng-container *ngFor=\"let overlay of column.headerOverlays; index as i\">\n        <ng-container [ngSwitch]=\"overlay.type\">\n          <ng-container *ngSwitchCase=\"OVERLAY_TYPE.CHART\">\n            <i [ngClass]=\"overlay.icon || 'fa fa-bar-chart text-primary'\" class=\"pull-right\"\n               (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"OVERLAY_TYPE.TABLE\">\n            <i [ngClass]=\"overlay.icon || 'fa fa-eye text-primary'\" class=\"pull-right\"\n               (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"OVERLAY_TYPE.PANEL\">\n            <i [ngClass]=\"overlay.icon || 'fa fa-eye text-primary'\" class=\"pull-right\"\n               (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"OVERLAY_TYPE.MENU\">\n            <i [ngClass]=\"overlay.icon || 'fa fa-arrow-circle-down text-primary'\" class=\"pull-right\"\n               (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"OVERLAY_TYPE.FRAME\">\n            <i [ngClass]=\"overlay.icon || 'fa fa-play text-primary'\"\n               (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"OVERLAY_TYPE.COMPONENT\">\n            <i [ngClass]=\"overlay.icon || 'fa fa-eye text-primary'\"\n               (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n          </ng-container>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PngTableHeaderColComponent extends BaseComponent implements OnInit {\n\n  OVERLAY_TYPE = OverlayType;\n\n  @Input() column: PngTableColumnProps;\n\n  @Output() onFilterBtnClick = new EventEmitter();\n\n  @Output() onAggsBtnClick = new EventEmitter();\n\n  constructor(public pngTable: PngTableComponent, private cd: ChangeDetectorRef) {\n    super();\n  }\n\n  @HostBinding('class')\n  get colClass(): string {\n    if (CommonsUtils.isFunction(this.column.colClass)) {\n      return (<Function>this.column.colClass).call(this.pngTable, this.column);\n    } else {\n      return <string>this.column.colClass || '';\n    }\n  }\n\n  @HostBinding('style.width')\n  get width() {\n    return this.column.width;\n  }\n\n  @HostBinding('style')\n  get colStyle(): string {\n    if (CommonsUtils.isFunction(this.column.colStyle)) {\n      return (<Function>this.column.colStyle).call(this.pngTable, this.column);\n    } else {\n      return <string>this.column.colStyle || '';\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.column.headerOverlays) {\n      (<Overlay[]>this.column.headerOverlays).filter(overlay => overlay.type === OverlayType.MENU)\n        .forEach(overlay => {\n          if (overlay.content['menuItem'].command) {\n            const command = overlay.content['menuItem'].command;\n            overlay.content['menuItem'].command = (event) => command.call(this, this.headerContext(event));\n          }\n        });\n    }\n  }\n\n  filterClick(event) {\n    this.onFilterBtnClick.emit({\n      event,\n      column: this.column\n    });\n  }\n\n  aggsClick(event) {\n    this.onAggsBtnClick.emit({\n      $event: event,\n      column: this.column\n    });\n  }\n\n  headerContext(event?) {\n    return {\n      $event: event,\n      $id: this.pngTable.$props.$id,\n      column: this.column,\n      pngTable: this.pngTable\n    };\n  }\n\n  overlayContext(overlay, index, event?): OverlayContext {\n    return {\n      $event: event,\n      type: overlay.type,\n      content: CommonsUtils.getValue(overlay.content, this.headerContext(event)),\n      context: overlay.context,\n      styleClass: CommonsUtils.getValue(overlay.styleClass, this.headerContext(event)),\n      style: CommonsUtils.getValue(overlay.style, this.headerContext(event)),\n      overlayStyleClass: CommonsUtils.getValue(overlay.overlayStyleClass, this.headerContext(event)),\n      overlayStyle: CommonsUtils.getValue(overlay.overlayStyle, this.headerContext(event)),\n      id: `overlay-header-${this.column.key}-${index}`\n    };\n  }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {AggMethodsProps, DataType} from '@er/types';\nimport {OverlayPanel} from 'primeng/primeng';\nimport {PngTableColumnProps} from '../../types';\nimport {PngTableComponent} from '../table/component';\n\n@Component({\n  selector: '[png-table-header]',\n  template: `\n    <ng-container *ngIf=\"customerTpl;else default\">\n      <ng-container *ngTemplateOutlet=\"customerTpl;context:{$implicit:columns,context:pngTable}\"></ng-container>\n    </ng-container>\n    <ng-template #default>\n      <th *ngIf=\"pngTable.$props.$ext.rowExpandable\" class=\"col-expandable\"></th>\n      <th *ngIf=\"pngTable.$props.$ext.hasRowCheckbox\" class=\"col-checkbox\" title=\"å¨é\">\n        <p-tableHeaderCheckbox></p-tableHeaderCheckbox>\n      </th>\n      <th *ngIf=\"pngTable.$props.$ext.hasRowRadioButton\" class=\"col-radio\"></th>\n      <th *ngFor=\"let column of columns\" pReorderableColumn pResizableColumn\n          png-table-header-col\n          [column]=\"column\"\n          (onFilterBtnClick)=\"showFilterPanel($event)\"\n          (onAggsBtnClick)=\"showAggsPanel($event)\"\n      >\n      </th>\n    </ng-template>\n    <div class=\"d-none\">\n      <p-overlayPanel #filterPanel appendTo=\"body\"\n                      [dismissable]=\"false\" (onHide)=\"clearFilterColumn()\"\n                      [showCloseIcon]=\"true\">\n        <ng-container *ngIf=\"filterColumn\">\n          <png-field-data-filter [column]=\"filterColumn\" [queryValue]=\"queryValue\"\n                                 (onFilterChange)=\"updateFilters($event)\"></png-field-data-filter>\n        </ng-container>\n      </p-overlayPanel>\n      <p-overlayPanel #aggPanel appendTo=\"body\"\n                      [dismissable]=\"true\" (onHide)=\"clearAggColumn()\"\n                      [showCloseIcon]=\"true\">\n        <div class=\"shadow\" style=\"width:150px;margin-bottom:10px\">\n          <h6>å¯éç»è®¡æ¹å¼</h6>\n          <ng-container *ngFor=\"let agg of availableAggs\">\n            <div style=\"font-size: .8em\">\n              <p-checkbox name=\"aggs\" [value]=\"agg['key']\" [label]=\"agg['label']\"\n                          [(ngModel)]=\"aggMethods\" (onChange)=\"setAggs()\"></p-checkbox>\n            </div>\n          </ng-container>\n        </div>\n      </p-overlayPanel>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class PngTableHeaderComponent extends BaseComponent {\n\n  @Input() columns: PngTableColumnProps[];\n\n  @Output() onFiltersSet = new EventEmitter();\n\n  @Output() onAggKeysSet = new EventEmitter();\n\n  @ViewChild('filterPanel') filterPanel: OverlayPanel;\n\n  @ViewChild('aggPanel') aggPanel: OverlayPanel;\n\n  availableAggs: {}[];\n\n  filterColumn: PngTableColumnProps;\n\n  queryValue: any;\n\n  aggColumn: PngTableColumnProps;\n\n  aggMethods: string[];\n\n  constructor(public pngTable: PngTableComponent) {\n    super();\n  }\n\n  showFilterPanel(event) {\n    this.filterColumn = event.column;\n    const filters = this.filterColumn.filters;\n    if (filters && filters.length > 0) {\n      this.queryValue = filters[0];\n    } else {\n      this.queryValue = undefined;\n    }\n    this.filterPanel.toggle(event.event);\n  }\n\n  clearFilterColumn() {\n    this.filterColumn = undefined;\n  }\n\n  clearAggColumn() {\n    this.aggColumn = undefined;\n  }\n\n  showAggsPanel(event) {\n    this.availableAggs = [];\n    this.aggColumn = event.column;\n    const type = this.aggColumn.dataType || DataType.STRING;\n    this.aggMethods = (this.aggColumn.aggProps || []).map(aggProp => aggProp.method);\n    Object.keys(AggMethodsProps).forEach(method => {\n      if (!AggMethodsProps[method].dataTypes || (AggMethodsProps[method].dataTypes && AggMethodsProps[method].dataTypes.indexOf(type) >= 0)) {\n        this.availableAggs.push({\n          label: AggMethodsProps[method].label,\n          key: AggMethodsProps[method].key\n        });\n      }\n    });\n    this.aggPanel.toggle(event.$event);\n  }\n\n  setAggs() {\n    this.onAggKeysSet.emit({column: this.aggColumn, methods: this.aggMethods});\n  }\n\n  updateFilters(event) {\n    this.filterPanel.hide();\n    this.onFiltersSet.emit(event);\n  }\n\n}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {BaseComponent, DataFieldUtils} from '@er/core';\nimport {DataAttr, DataField, DataType} from '@er/types';\nimport {CommonsUtils} from '@er/utils';\nimport {PngTableColumnProps} from '../../../types';\nimport {PngTableComponent} from '../../table/component';\n\n@Component({\n  selector: 'png-field-data-filter',\n  template: `\n    <div class=\"d-flex justify-content-end align-items-end\">\n      <png-query-input [queryKey]=\"queryKey\" [queryDataType]=\"queryDataType\" [queryDataAttr]=\"queryDataAttr\"\n                       [(queryValue)]=\"queryValue\"></png-query-input>\n      <ng-container *ngIf=\"queryValue\">\n      <span class=\"ml-2\">\n       <p-button\n         type=\"button\"\n         icon=\"fa fa-search\"\n         label=\"æ¥è¯¢\"\n         (click)=\"onFilter()\"\n       ></p-button>\n    </span>\n        <span class=\"ml-2\">\n    <p-button\n      type=\"button\"\n      icon=\"fa fa-trash\"\n      label=\"æ¸é¤\"\n      (click)=\"clearFilter()\"\n    ></p-button>\n    </span>\n      </ng-container>\n    </div>\n  `\n})\n\nexport class PngTableFieldDataFilterComponent extends BaseComponent {\n\n  @Input() queryKey: string;\n\n  @Input() queryDataType: DataType;\n\n  @Input() queryDataAttr: DataAttr;\n\n  @Input() queryValue: any;\n\n  @Output() onFilterChange = new EventEmitter();\n\n  constructor(public pngTable: PngTableComponent) {\n    super();\n  }\n\n  private _column: PngTableColumnProps;\n\n  get column() {\n    return this._column;\n  }\n\n  @Input() set column(column: PngTableColumnProps) {\n    if (!this.queryKey && column) {\n      this.queryKey = DataFieldUtils.getDefaultFieldName(column.dataField) || column.key;\n    }\n    if (!this.queryDataType && column) {\n      this.queryDataType = column.filterDataType || column.dataType;\n    }\n    if (!this.queryDataAttr && column && column.dataAttr) {\n      this.queryDataAttr = CommonsUtils.getArrayValue(column.dataAttr)[0];\n    }\n    this._column = column;\n  }\n\n  _dataField: DataField;\n\n  get dataField() {\n    return this._dataField;\n  }\n\n  @Input() set dataField(dataField) {\n    if (!this.queryKey && dataField) {\n      this.queryKey = DataFieldUtils.getDefaultFieldName(dataField);\n    }\n    if (!this.queryDataType && dataField) {\n      this.queryDataType = dataField.dataType;\n    }\n    this._dataField = dataField;\n  }\n\n  onFilter() {\n    this.onFilterChange.emit({\n      key: this.queryKey,\n      column: this.column,\n      value: this.queryValue\n    });\n  }\n\n  clearFilter() {\n    this.queryValue = undefined;\n    this.onFilter();\n  }\n\n\n}\n","import {ChangeDetectionStrategy, Component, forwardRef, OnInit} from '@angular/core';\nimport {NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {BaseComponent} from '@er/core';\nimport {EsQueryMethods, QueryBuilderProps} from '@er/types';\nimport {PngTableComponent} from '../../table/component';\n\n@Component({\n  selector: 'png-table-query-builder',\n  template: `\n    <er-query-builder [config]=\"qbConfig\">\n      <!--<ng-template erTypedTemplate=\"switchGroup\" let-qb=\"qb\">-->\n      <!--<p-selectButton [options]=\"switches\" [ngModel]=\"qb.value.condition\"></p-selectButton>-->\n      <!--</ng-template>-->\n      <!--<ng-template erTypedTemplate=\"buttonGroup\" let-qb=\"qb\">-->\n      <!--<p-button label=\"æ¡ä»¶\" icon=\"fa fa-plus\" (onClick)=\"qb.addRule()\"></p-button>-->\n      <!--<p-button label=\"ç»\" icon=\"fa fa-group\" (onClick)=\"qb.addRuleSet()\"></p-button>-->\n      <!--<ng-container *ngIf=\"!!parentRuleSet && qb.config.allowRuleSet\">-->\n      <!--<p-button icon=\"fa fa-minus\" (onClick)=\"qb.removeRuleSet()\"></p-button>-->\n      <!--</ng-container>-->\n      <!--</ng-template>-->\n      <ng-template erTypedTemplate=\"input\" let-rule let-qb=\"qb\">\n        <png-query-input [options]=\"pngTable.$props.$ext\"></png-query-input>\n      </ng-template>\n    </er-query-builder>\n  `,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => PngTableQueryBuilderComponent),\n    multi: true\n  }],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PngTableQueryBuilderComponent extends BaseComponent implements OnInit {\n\n\n  qbConfig: QueryBuilderProps = {};\n\n  switches = [\n    {label: 'å¹¶ä¸', value: 'and', icon: 'fa fa-fw fa-cc-paypal'},\n    {label: 'æè', value: 'or', icon: 'fa fa-fw fa-cc-visa'},\n    {label: 'é', value: 'not', icon: 'fa fa-fw fa-cc-mastercard'}\n  ];\n\n  constructor(public pngTable: PngTableComponent) {\n    super();\n  }\n\n  ngOnInit() {\n    this.qbConfig.fields = this.pngTable.$props.columns\n      .filter(column => column.dataField)\n      .map(column => column.dataField);\n    this.qbConfig.operators = (field) => Object.keys(EsQueryMethods).map(key => {\n      return {\n        label: EsQueryMethods[key].label,\n        value: EsQueryMethods[key].key\n      };\n    });\n  }\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {AggMethods, DataAttr, DataType} from '@er/types';\nimport {CommonsUtils, DataItemUtils} from '@er/utils';\nimport {BehaviorSubject} from 'rxjs';\nimport {PngAutoCompleteProps} from '../../../../auto-complete/type';\nimport {PngSliderProps} from '../../../../slider/component';\nimport {PngTableComponent} from '../../table/component';\n\n\n@Component({\n  selector: 'png-query-input',\n  template: `\n    <ng-container [ngSwitch]=\"queryDataType\">\n      <ng-container *ngSwitchCase=\"DATA_TYPE.NUMBER\">\n        <png-slider [(ngModel)]=\"queryValue\"\n                    erPropsBind\n                    [props]=\"sliderProps\"\n        >\n        </png-slider>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"DATA_TYPE.BOOLEAN\">\n        <p-inputSwitch [(ngModel)]=\"queryValue\">\n        </p-inputSwitch>\n      </ng-container>\n      <ng-container *ngSwitchCase=\"DATA_TYPE.DATE\">\n        <ng-container *ngIf=\"!isTime\">\n          <png-calendar erPropsBind [(ngModel)]=\"queryValue\"\n                        [props]=\"{ selectionMode: 'range',placeholder:'è¯·éæ©æ¥æ'}\">\n          </png-calendar>\n        </ng-container>\n        <ng-container *ngIf=\"isTime\">\n          <png-calendar erPropsBind [(ngModel)]=\"queryValue\"\n                        [props]=\"{ timeOnly: true, selectionMode: 'range',placeholder:'è¯·éæ©æ¶é´'}\"\n          >\n          </png-calendar>\n        </ng-container>\n      </ng-container>\n      <ng-container *ngSwitchDefault>\n        <png-auto-complete\n          [(ngModel)]=\"queryValue\"\n          erPropsBind\n          [props]=\"autoProps\"\n        >\n        </png-auto-complete>\n        <!--<input type=\"text\" pInputText [(ngModel)]=\"queryValue\" placeholder=\"è¾å¥æ¥è¯¢æ å\">-->\n      </ng-container>\n    </ng-container>\n  `,\n  styleUrls: ['styles.scss']\n})\n\nexport class PngQueryInputComponent extends BaseComponent implements OnInit, OnChanges {\n\n  DATA_TYPE = DataType;\n\n  DATA_ATTR = DataAttr;\n\n  @Input() queryKey: string;\n\n  @Input() queryDataType: DataType;\n\n  @Input() queryDataAttr: DataAttr;\n\n  @Input() options = {};\n\n  @Input() autoProps: {};\n\n  @Input() sliderProps: {};\n\n  @Output()\n  queryValueChange = new EventEmitter<string>();\n\n  isTime = false;\n\n  autoCompleteProps$: BehaviorSubject<PngAutoCompleteProps> = new BehaviorSubject<PngAutoCompleteProps>(undefined);\n\n  constructor(private pngTable: PngTableComponent) {\n    super();\n  }\n\n  private _queryValue;\n\n  @Input()\n  get queryValue() {\n    return this._queryValue;\n  }\n\n  set queryValue(queryValue) {\n    this._queryValue = queryValue;\n    this.queryValueChange.emit(queryValue);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.autoProps = <PngAutoCompleteProps> {\n      inputStyle: {'min-width': '200px'},\n      appendTo: 'body',\n      forceSelection: false,\n      $ext: {\n        apiDataProps: {\n          ...this.pngTable.getTableQuery(),\n          searchFields: this.queryKey,\n          returnFields: this.queryKey,\n          aggProps: {name: this.queryKey, field: this.queryKey},\n          dataPath: `aggs.${this.queryKey}`\n        },\n        dataItemProps: {\n          showCounter: true,\n          dropDownOptionKey: DataItemUtils.ITEM_LABEL_KEY,\n          valueKey: DataItemUtils.ITEM_LABEL_KEY\n        }\n      }\n    };\n    this.sliderProps = <PngSliderProps> {\n      range: true,\n      $ext: {\n        apiDataProps: {\n          ...this.pngTable.getTableQuery(),\n          aggProps: [\n            {name: 'max', field: this.queryKey, method: AggMethods.MAX},\n            {name: 'min', field: this.queryKey, method: AggMethods.MIN}\n          ]\n        }\n      }\n    };\n    if (this.queryDataType === DataType.DATE && this.queryDataAttr) {\n      const attrs = CommonsUtils.getArrayValue(this.queryDataAttr);\n      if (attrs.indexOf(DataAttr.DATE) >= 0) {\n        this.isTime = false;\n      }\n      if (attrs.indexOf(DataAttr.TIME) >= 0) {\n        this.isTime = true;\n      }\n    }\n  }\n}\n","import {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport {BaseComponent} from '@er/core';\nimport {AggMethodsProps} from '@er/types';\nimport {CommonsUtils} from '@er/utils';\nimport {PngTableColumnProps} from '../../types';\nimport {PngTableComponent} from '../table/component';\n\n@Component({\n  selector: '[png-table-summary]',\n  template: `\n    <ng-container *ngIf=\"customerTpl;else default\">\n      <ng-container *ngTemplateOutlet=\"customerTpl;context:{$implicit:aggValues,columns:columns,context:pngTable}\"></ng-container>\n    </ng-container>\n    <ng-template #default>\n      <th *ngIf=\"pngTable.$props.$ext.rowExpandable\" class=\"col-expandable col-summary\"></th>\n      <th *ngIf=\"pngTable.$props.$ext.hasRowCheckbox\" class=\"col-checkbox col-summary\"></th>\n      <th *ngIf=\"pngTable.$props.$ext.hasRowRadioButton\" class=\"col-radio col-summary\"></th>\n      <ng-container *ngIf=\"colAggValues\">\n        <th *ngFor=\"let col of columns\" [width]=\"col.width\" class=\"text-right col-summary col-summary-{{col.key}}\">\n          <ng-container *ngFor=\"let agg of colAggValues[col.key]\">\n            <ng-container *ngIf=\"agg.value\">\n              <div [ngClass]=\"cellClass(col)\" style=\"font-size: 0.8em\"\n                   [ngStyle]=\"cellStyle(col)\">{{agg.type}}: {{agg.value | floor: 2}}\n              </div>\n            </ng-container>\n            <ng-container *ngIf=\"agg.values\">\n              <div [ngClass]=\"cellClass(col)\" style=\"font-size: 0.8em\"\n                   [ngStyle]=\"cellStyle(col)\"> {{agg.type}}:\n              </div>\n              <ul>\n                <ng-container *ngFor=\"let data of agg.values\">\n                  <li class=\"border-bottom\"><span class=\"\">{{data.label}}:</span><span class=\"badge badge-pill btn-info\">{{data.value}}</span></li>\n                </ng-container>\n              </ul>\n            </ng-container>\n          </ng-container>\n        </th>\n      </ng-container>\n    </ng-template>\n\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PngTableSummaryComponent extends BaseComponent implements OnChanges {\n\n  @Input() columns: PngTableColumnProps;\n\n  @Input() aggValues: {}[];\n\n  colAggValues: {};\n\n  constructor(public pngTable: PngTableComponent, protected cd: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.aggValues) {\n      if (changes.aggValues.currentValue) {\n        this.colAggValues = {};\n        Object.keys(changes.aggValues.currentValue)\n          .forEach(key => {\n            let name = key;\n            if (key.indexOf('-') > 0) {\n              name = key.substr(0, key.indexOf('-'));\n            }\n            const type = key.substr(key.indexOf('-') + 1);\n            let values = this.colAggValues[name];\n            if (!values) {\n              values = [];\n              this.colAggValues[name] = values;\n            }\n            const agg = {};\n            agg['type'] = AggMethodsProps[type] && AggMethodsProps[type].label;\n            if (CommonsUtils.isArray(this.aggValues[key])) {\n              agg['values'] = this.aggValues[key];\n            } else {\n              agg['value'] = this.aggValues[key];\n            }\n            values.push(agg);\n          });\n      } else {\n        this.colAggValues = undefined;\n      }\n      this.cd.detectChanges();\n    }\n  }\n\n  cellClass(column) {\n    return CommonsUtils.getValue(column.aggCellClass, column);\n  }\n\n  cellStyle(column) {\n    return CommonsUtils.getValue(column.aggCellStyle, column);\n  }\n}\n","import {PngTableBodyCellContentComponent} from './component/body-cell-content/component';\nimport {PngTableBodyCellComponent} from './component/body-cell/component';\nimport {PngTableBodyRowComponent} from './component/body-row/component';\nimport {PngTableCaptionComponent} from './component/caption/component';\nimport {PngTableColumnSelectorComponent} from './component/column-selector/component';\nimport {PngTableExpandedRowComponent} from './component/expanded-row/component';\nimport {PngTableFooterComponent} from './component/footer/component';\nimport {PngTableHeaderColComponent} from './component/head-col/component';\nimport {PngTableHeaderComponent} from './component/header/component';\nimport {PngTableFieldDataFilterComponent} from './component/query/field-filter/component';\nimport {PngTableQueryBuilderComponent} from './component/query/fields-builder/component';\nimport {PngQueryInputComponent} from './component/query/input/component';\nimport {PngTableSummaryComponent} from './component/summary/component';\n\n\nexport const PngTableSubComponents = [\n  PngTableCaptionComponent,\n  PngTableHeaderComponent,\n  PngTableHeaderColComponent,\n  PngTableFieldDataFilterComponent,\n  PngTableBodyRowComponent,\n  PngTableBodyCellContentComponent,\n  PngTableBodyCellComponent,\n  PngTableExpandedRowComponent,\n  PngTableFooterComponent,\n  PngTableSummaryComponent,\n  PngTableColumnSelectorComponent,\n  PngTableQueryBuilderComponent,\n  PngQueryInputComponent\n];\n","import {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ErCoreModule} from '@er/core';\nimport {PngComponents} from './components/all';\nimport {PngTableSubComponents} from './components/table/all';\nimport {PrimeNgComponentsModule} from './shared/shared.module';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    ErCoreModule,\n    PrimeNgComponentsModule\n  ],\n  declarations: [\n    ...PngComponents,\n    ...PngTableSubComponents\n  ],\n  exports: [\n    PrimeNgComponentsModule,\n    ...PngComponents\n  ],\n  entryComponents: PngComponents\n})\nexport class ErPrimeNgModule {\n}\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {StateNames} from '@er/types';\nimport {StatesUtils} from '@er/utils';\nimport {distinctUntilChanged, map} from 'rxjs/operators';\nimport {PngAdminWorkSpaceComponent} from '../component';\n\n@Component({\n  selector: 'png-ws-footer',\n  templateUrl: './tpl.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WorkSpaceFooterComponent {\n\n  constructor(public ws: PngAdminWorkSpaceComponent) {\n  }\n\n  get elapseTime$() {\n    return StatesUtils.observe(StateNames.httpTimer)\n      .pipe(\n        distinctUntilChanged(),\n        map(v => v && v['elapsed'])\n      );\n  }\n}\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {StateNames} from '@er/types';\nimport {StatesUtils} from '@er/utils';\nimport {PngAdminWorkSpaceComponent} from '../component';\n\n@Component({\n  selector: 'png-ws-topbar',\n  templateUrl: 'tpl.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WorkSpaceTopBarComponent {\n\n  constructor(public ws: PngAdminWorkSpaceComponent) {\n  }\n\n  toggleMainMenu() {\n    StatesUtils.toggle(StateNames.menu, this.ws.rootMenuToggleStateName);\n    event.preventDefault();\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport {MenuItem, StateNames} from '@er/types';\nimport {StatesUtils} from '@er/utils';\nimport {Observable} from 'rxjs';\nimport {distinctUntilChanged, map} from 'rxjs/operators';\nimport {PngAdminWorkSpaceComponent} from '../component';\n\n@Component({\n  selector: 'png-ws-main-menu',\n  template: `\n    <ul png-ws-sub-menu\n        erAnimate=\"fadeInDown\"\n        class=\"layout-menu layout-main-menu clearfix\"\n        [erHttpState]=\"httpMenuTag\"\n        [item]=\"menus$|async\" [root]=\"true\"\n        [reset]=\"reset\"\n        [visible]=\"true\"\n        [parentActive]=\"true\"></ul>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WorkSpaceMainMenuComponent implements OnInit {\n\n  @Input() reset: boolean;\n\n  @Input() httpMenuTag: any;\n\n  menus$: Observable<MenuItem[]>;\n\n  theme = 'blue';\n\n  layout = 'blue';\n\n  version = 'v4';\n\n  constructor(public ws: PngAdminWorkSpaceComponent) {\n  }\n\n  ngOnInit() {\n    this.menus$ = StatesUtils.observe(StateNames.rootMenu)\n      .pipe(\n        map(menu => (menu && menu.menuItems) || []),\n        distinctUntilChanged()\n      );\n  }\n\n  changeTheme(theme: string) {\n    const themeLink: HTMLLinkElement = <HTMLLinkElement> document.getElementById('theme-css');\n\n    if (this.version === 'v3') {\n      themeLink.href = 'assets/theme/theme-' + theme + '.css';\n    } else {\n      themeLink.href = 'assets/theme/theme-' + theme + '-v4' + '.css';\n    }\n\n    this.theme = theme;\n\n  }\n\n  changeLayout(layout: string, special?: boolean) {\n    const layoutLink: HTMLLinkElement = <HTMLLinkElement> document.getElementById('layout-css');\n\n    if (this.version === 'v3') {\n      layoutLink.href = 'assets/layout/css/layout-' + layout + '.css';\n    } else {\n      layoutLink.href = 'assets/layout/css/layout-' + layout + '-v4' + '.css';\n    }\n\n    this.layout = layout;\n\n    if (special) {\n      this.ws.darkMenu = true;\n    }\n  }\n\n  changeVersion(version: string) {\n    const themeLink: HTMLLinkElement = <HTMLLinkElement> document.getElementById('theme-css');\n    const layoutLink: HTMLLinkElement = <HTMLLinkElement> document.getElementById('layout-css');\n\n    if (version === 'v3') {\n      this.version = 'v3';\n      themeLink.href = 'assets/theme/theme-' + this.theme + '.css';\n      layoutLink.href = 'assets/layout/css/layout-' + this.layout + '.css';\n    } else {\n      themeLink.href = 'assets/theme/theme-' + this.theme + '-v4' + '.css';\n      layoutLink.href = 'assets/layout/css/layout-' + this.layout + '-v4' + '.css';\n      this.version = '-v4';\n    }\n\n  }\n}\n","import {animate, state, style, transition, trigger} from '@angular/animations';\nimport {ChangeDetectionStrategy, Component, Input} from '@angular/core';\nimport {MenuItem} from 'primeng/primeng';\nimport {PngAdminWorkSpaceComponent} from '../../component';\nimport {WorkSpaceMainMenuComponent} from '../component';\n\n\n@Component({\n  selector: '[png-ws-sub-menu]',\n  templateUrl: 'tpl.html',\n  animations: [\n    trigger('children', [\n      state('hiddenAnimated', style({\n        height: '0px'\n      })),\n      state('visibleAnimated', style({\n        height: '*'\n      })),\n      state('visible', style({\n        display: 'block'\n      })),\n      state('hidden', style({\n        display: 'none'\n      })),\n      transition('visibleAnimated => hiddenAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),\n      transition('hiddenAnimated => visibleAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WorkSpaceSubMenuComponent {\n\n  @Input() item: MenuItem;\n\n  @Input() root: boolean;\n\n  @Input() visible: boolean;\n\n  activeIndex: number;\n\n  constructor(public ws: PngAdminWorkSpaceComponent, public wsMenu: WorkSpaceMainMenuComponent) {\n  }\n\n  _reset: boolean;\n\n  @Input() get reset(): boolean {\n    return this._reset;\n  }\n\n  set reset(val: boolean) {\n    this._reset = val;\n\n    if (this._reset && (this.ws.isHorizontal() || this.ws.isSlim())) {\n      this.activeIndex = null;\n    }\n  }\n\n  _parentActive: boolean;\n\n  @Input() get parentActive(): boolean {\n    return this._parentActive;\n  }\n\n  set parentActive(val: boolean) {\n    this._parentActive = val;\n\n    if (!this._parentActive) {\n      this.activeIndex = null;\n    }\n  }\n\n  itemClick(event: Event, item: MenuItem, index: number) {\n    if (this.root) {\n      this.ws.menuHoverActive = !this.ws.menuHoverActive;\n    }\n\n    // avoid processing disabled items\n    if (item.disabled) {\n      event.preventDefault();\n      return true;\n    }\n\n    // activate current item and deactivate active sibling if any\n    this.activeIndex = (this.activeIndex === index) ? null : index;\n\n    // execute command\n    if (item.command) {\n      item.command({originalEvent: event, item: item, menu: this.wsMenu, ws: this.ws});\n    }\n\n    // prevent hash change\n    if (item.items || (!item.url && !item.routerLink)) {\n      setTimeout(() => {\n        this.ws.layoutMenuScrollerViewChild.moveBar();\n      }, 450);\n      event.preventDefault();\n    }\n\n    // hide menu\n    if (!item.items) {\n      if (this.ws.isHorizontal() || this.ws.isSlim()) {\n        this.ws.resetMenu = true;\n      } else {\n        this.ws.resetMenu = false;\n      }\n\n      this.ws.overlayMenuActive = false;\n      this.ws.staticMenuMobileActive = false;\n      this.ws.menuHoverActive = !this.ws.menuHoverActive;\n    }\n  }\n\n  onMouseEnter(index: number) {\n    if (this.root && this.ws.menuHoverActive && (this.ws.isHorizontal() || this.ws.isSlim())\n      && !this.ws.isMobile() && !this.ws.isTablet()) {\n      this.activeIndex = index;\n    }\n  }\n\n  isActive(index: number): boolean {\n    return this.activeIndex === index;\n  }\n}\n","import {animate, state, style, transition, trigger} from '@angular/animations';\nimport {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {AuthUtils, RouteUtils} from '@er/core';\nimport {User} from '@er/types';\nimport {ConfigUtils} from '@er/utils';\nimport {PngAdminWorkSpaceComponent} from '../component';\n\n@Component({\n  selector: 'png-ws-profile',\n  templateUrl: './tpl.html',\n  animations: [\n    trigger('menu', [\n      state('hidden', style({\n        height: '0px'\n      })),\n      state('visible', style({\n        height: '*'\n      })),\n      transition('visible => hidden', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),\n      transition('hidden => visible', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WorkSpaceProfileComponent {\n\n  active: boolean;\n\n  profileRouter: string;\n  changePwdRouter: string;\n\n  avatar?: string;\n\n  constructor(public ws: PngAdminWorkSpaceComponent) {\n    this.profileRouter = ConfigUtils.getConfig().auth.profileRouter;\n    this.changePwdRouter = ConfigUtils.getConfig().auth.changePwdRouter;\n    this.avatar = 'assets/layout/images/avatar.png';\n  }\n\n  get user(): User {\n    return AuthUtils.getCurrentUser();\n  }\n\n  onClick(event) {\n    this.active = !this.active;\n    event.preventDefault();\n  }\n\n  logout() {\n    AuthUtils.logout();\n  }\n\n  change() {\n    RouteUtils.nav(this.changePwdRouter);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {ErCoreModule} from '@er/core';\nimport {PrimeNgComponentsModule} from '../shared/shared.module';\nimport {PngAdminWorkSpaceComponent} from './component';\nimport {WorkSpaceFooterComponent} from './footer/component';\nimport {WorkSpaceTopBarComponent} from './header/component';\nimport {WorkSpaceMainMenuComponent} from './menu/component';\nimport {WorkSpaceSubMenuComponent} from './menu/sub-menu/component';\nimport {WorkSpaceProfileComponent} from './profile/component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ErCoreModule,\n    PrimeNgComponentsModule\n  ],\n  declarations: [\n    WorkSpaceFooterComponent,\n    WorkSpaceMainMenuComponent,\n    WorkSpaceSubMenuComponent,\n    WorkSpaceProfileComponent,\n    WorkSpaceTopBarComponent,\n    PngAdminWorkSpaceComponent\n  ],\n  exports: [\n    PngAdminWorkSpaceComponent\n  ]\n})\nexport class PngAdminWorkSpaceModule {\n}\n"]}