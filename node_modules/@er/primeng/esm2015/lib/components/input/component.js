/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, forwardRef, Input } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { ControlWrapperComponent } from '@er/core';
export class PngInputComponent extends ControlWrapperComponent {
}
PngInputComponent.decorators = [
    { type: Component, args: [{
                selector: 'png-input',
                template: `
    <div class="ui-inputgroup">
      <ng-container *ngIf="attrs?.$ext?.preIcon || attrs?.$ext?.preText">
        <span class="ui-inputgroup-addon"><i [ngClass]="attrs?.$ext?.preIcon"></i>{{attrs?.$ext?.preText}}</span>
      </ng-container>
      <png-buttons *ngIf="attrs?.$ext?.preButtons" [btns]="attrs.$ext.preButtons" [context]="ctx"></png-buttons>
      <ng-container *ngIf="attrs?.$ext?.floatLabel;else inputTpl">
       <span class="ui-float-label">
         <ng-container *ngTemplateOutlet="inputTpl"></ng-container>
         <label style="font-weight: bold;">{{attrs?.$ext.label}}</label>
       </span>
      </ng-container>
      <ng-template #inputTpl>
        <span class="w-100 inner-addon">
          <input pInputText
                 [(ngModel)]="value"
                 type="{{attrs?.type || 'text'}}"
                 erPropsBind
                 [attrs]="attrs"
                 [context]="ctx"
                 [pKeyFilter]="attrs?.$ext?.inputRule || 'alphanum'"
                 (blur)="updateTouch()"/>
          <i *ngIf="value && !disabled && resettable" title="清除输入内容" class="fa fa-trash gray right" (click)="reset()"></i>
       </span>
      </ng-template>
      <ng-container *ngIf="attrs?.$ext?.postIcon || attrs?.$ext?.postText">
        <span class="ui-inputgroup-addon"><i [ngClass]="attrs?.$ext?.postIcon"></i>{{attrs?.$ext?.postText}}</span>
      </ng-container>
      <png-buttons *ngIf="attrs?.$ext?.postButtons" [btns]="attrs.$ext.postButtons" [context]="ctx"></png-buttons>
    </div>
  `,
                providers: [{
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => PngInputComponent),
                        multi: true
                    }],
                styles: [`
    .ui-float-label {
      width: 100%
    }

    .ui-float-label > label {
      font-size: 1em;
      color: inherit
    }
  `]
            }] }
];
PngInputComponent.propDecorators = {
    attrs: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    PngInputComponent.prototype.attrs;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL3ByaW1lbmcvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9pbnB1dC9jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUMzRCxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNqRCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSxVQUFVLENBQUM7QUF3RGpELE1BQU0sT0FBTyxpQkFBa0IsU0FBUSx1QkFBdUI7OztZQW5EN0QsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxXQUFXO2dCQUNyQixRQUFRLEVBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQThCVDtnQkFZRCxTQUFTLEVBQUUsQ0FBQzt3QkFDVixPQUFPLEVBQUUsaUJBQWlCO3dCQUMxQixXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLGlCQUFpQixDQUFDO3dCQUNoRCxLQUFLLEVBQUUsSUFBSTtxQkFDWixDQUFDO3lCQWZPOzs7Ozs7Ozs7R0FTUjthQU9GOzs7b0JBR0UsS0FBSzs7OztJQUFOLGtDQUE4QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBmb3J3YXJkUmVmLCBJbnB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge05HX1ZBTFVFX0FDQ0VTU09SfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQge0NvbnRyb2xXcmFwcGVyQ29tcG9uZW50fSBmcm9tICdAZXIvY29yZSc7XG5pbXBvcnQge1BuZ0lucHV0QXR0cnN9IGZyb20gJy4vdHlwZSc7XG5cbmV4cG9ydCB7UG5nSW5wdXRBdHRyc30gZnJvbSAnLi90eXBlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG5nLWlucHV0JyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwidWktaW5wdXRncm91cFwiPlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImF0dHJzPy4kZXh0Py5wcmVJY29uIHx8IGF0dHJzPy4kZXh0Py5wcmVUZXh0XCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwidWktaW5wdXRncm91cC1hZGRvblwiPjxpIFtuZ0NsYXNzXT1cImF0dHJzPy4kZXh0Py5wcmVJY29uXCI+PC9pPnt7YXR0cnM/LiRleHQ/LnByZVRleHR9fTwvc3Bhbj5cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgPHBuZy1idXR0b25zICpuZ0lmPVwiYXR0cnM/LiRleHQ/LnByZUJ1dHRvbnNcIiBbYnRuc109XCJhdHRycy4kZXh0LnByZUJ1dHRvbnNcIiBbY29udGV4dF09XCJjdHhcIj48L3BuZy1idXR0b25zPlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImF0dHJzPy4kZXh0Py5mbG9hdExhYmVsO2Vsc2UgaW5wdXRUcGxcIj5cbiAgICAgICA8c3BhbiBjbGFzcz1cInVpLWZsb2F0LWxhYmVsXCI+XG4gICAgICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwiaW5wdXRUcGxcIj48L25nLWNvbnRhaW5lcj5cbiAgICAgICAgIDxsYWJlbCBzdHlsZT1cImZvbnQtd2VpZ2h0OiBib2xkO1wiPnt7YXR0cnM/LiRleHQubGFiZWx9fTwvbGFiZWw+XG4gICAgICAgPC9zcGFuPlxuICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICA8bmctdGVtcGxhdGUgI2lucHV0VHBsPlxuICAgICAgICA8c3BhbiBjbGFzcz1cInctMTAwIGlubmVyLWFkZG9uXCI+XG4gICAgICAgICAgPGlucHV0IHBJbnB1dFRleHRcbiAgICAgICAgICAgICAgICAgWyhuZ01vZGVsKV09XCJ2YWx1ZVwiXG4gICAgICAgICAgICAgICAgIHR5cGU9XCJ7e2F0dHJzPy50eXBlIHx8ICd0ZXh0J319XCJcbiAgICAgICAgICAgICAgICAgZXJQcm9wc0JpbmRcbiAgICAgICAgICAgICAgICAgW2F0dHJzXT1cImF0dHJzXCJcbiAgICAgICAgICAgICAgICAgW2NvbnRleHRdPVwiY3R4XCJcbiAgICAgICAgICAgICAgICAgW3BLZXlGaWx0ZXJdPVwiYXR0cnM/LiRleHQ/LmlucHV0UnVsZSB8fCAnYWxwaGFudW0nXCJcbiAgICAgICAgICAgICAgICAgKGJsdXIpPVwidXBkYXRlVG91Y2goKVwiLz5cbiAgICAgICAgICA8aSAqbmdJZj1cInZhbHVlICYmICFkaXNhYmxlZCAmJiByZXNldHRhYmxlXCIgdGl0bGU9XCLmuIXpmaTovpPlhaXlhoXlrrlcIiBjbGFzcz1cImZhIGZhLXRyYXNoIGdyYXkgcmlnaHRcIiAoY2xpY2spPVwicmVzZXQoKVwiPjwvaT5cbiAgICAgICA8L3NwYW4+XG4gICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImF0dHJzPy4kZXh0Py5wb3N0SWNvbiB8fCBhdHRycz8uJGV4dD8ucG9zdFRleHRcIj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJ1aS1pbnB1dGdyb3VwLWFkZG9uXCI+PGkgW25nQ2xhc3NdPVwiYXR0cnM/LiRleHQ/LnBvc3RJY29uXCI+PC9pPnt7YXR0cnM/LiRleHQ/LnBvc3RUZXh0fX08L3NwYW4+XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgIDxwbmctYnV0dG9ucyAqbmdJZj1cImF0dHJzPy4kZXh0Py5wb3N0QnV0dG9uc1wiIFtidG5zXT1cImF0dHJzLiRleHQucG9zdEJ1dHRvbnNcIiBbY29udGV4dF09XCJjdHhcIj48L3BuZy1idXR0b25zPlxuICAgIDwvZGl2PlxuICBgLFxuICBzdHlsZXM6IFtgXG4gICAgLnVpLWZsb2F0LWxhYmVsIHtcbiAgICAgIHdpZHRoOiAxMDAlXG4gICAgfVxuXG4gICAgLnVpLWZsb2F0LWxhYmVsID4gbGFiZWwge1xuICAgICAgZm9udC1zaXplOiAxZW07XG4gICAgICBjb2xvcjogaW5oZXJpdFxuICAgIH1cbiAgYFxuICBdLFxuICBwcm92aWRlcnM6IFt7XG4gICAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gUG5nSW5wdXRDb21wb25lbnQpLFxuICAgIG11bHRpOiB0cnVlXG4gIH1dXG59KVxuXG5leHBvcnQgY2xhc3MgUG5nSW5wdXRDb21wb25lbnQgZXh0ZW5kcyBDb250cm9sV3JhcHBlckNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGF0dHJzOiBQbmdJbnB1dEF0dHJzO1xufVxuIl19