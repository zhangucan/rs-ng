/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import { WrapperComponent } from '@er/core';
import { DEFAULT_BUTTON_PROPS } from '@er/presets';
import { CommonsUtils } from '@er/utils';
export class PngButtonComponent extends WrapperComponent {
    /**
     * @return {?}
     */
    get isHidden() {
        if (this.$props && this.$props.hidden) {
            return CommonsUtils.getValue(this.$props.hidden, this.outputContext) || false;
        }
        return false;
    }
    /**
     * @return {?}
     */
    onPropsInit() {
        /** @type {?} */
        const btnProps = CommonsUtils.copy(this.$props || {});
        if (btnProps.menu) {
            btnProps.menu.forEach(item => {
                if (item.command) {
                    /** @type {?} */
                    const command = item.command;
                    item.command = (event) => this.onMenuCommand(command, event);
                }
            });
        }
        this.$props = Object.assign({}, DEFAULT_BUTTON_PROPS, btnProps);
    }
    /**
     * @param {?} command
     * @param {?} event
     * @return {?}
     */
    onMenuCommand(command, event) {
        command.call(this, Object.assign({}, event || {}, this.outputContext || {}));
    }
    /**
     * @param {?} state
     * @return {?}
     */
    setState(state) {
        this.icon = state ? 'fa fa-cog fa-spin' : this.$props['icon'];
    }
}
PngButtonComponent.decorators = [
    { type: Component, args: [{
                selector: 'png-button',
                template: "<ng-container *ngIf=\"!isHidden\">\n  <p-splitButton *ngIf=\"$props?.menu\"\n                 erPropsBind\n                 [props]=\"$props\"\n                 [context]=\"outputContext\"\n  >\n  </p-splitButton>\n  <p-button *ngIf=\"!$props?.menu\" [title]=\"$props?.title || ''\"\n            erPropsBind\n            [props]=\"$props\"\n            [context]=\"outputContext\"\n  >\n  </p-button>\n</ng-container>\n"
            }] }
];
if (false) {
    /** @type {?} */
    PngButtonComponent.prototype.icon;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL3ByaW1lbmcvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9idXR0b24vY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3hDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLFVBQVUsQ0FBQztBQUMxQyxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSxhQUFhLENBQUM7QUFFakQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLFdBQVcsQ0FBQztBQU12QyxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsZ0JBQTZCOzs7O0lBSW5FLElBQUksUUFBUTtRQUNWLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRTtZQUNyQyxPQUFPLFlBQVksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLEtBQUssQ0FBQztTQUMvRTtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQzs7OztJQUVELFdBQVc7O2NBQ0gsUUFBUSxHQUFHLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxFQUFFLENBQUM7UUFDckQsSUFBSSxRQUFRLENBQUMsSUFBSSxFQUFFO1lBQ2pCLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUMzQixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7OzBCQUNWLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTztvQkFDNUIsSUFBSSxDQUFDLE9BQU8sR0FBRyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUM7aUJBQzlEO1lBQ0gsQ0FBQyxDQUFDLENBQUM7U0FDSjtRQUNELElBQUksQ0FBQyxNQUFNLHFCQUNOLG9CQUFvQixFQUNwQixRQUFRLENBQ1osQ0FBQztJQUNKLENBQUM7Ozs7OztJQUVELGFBQWEsQ0FBQyxPQUFPLEVBQUUsS0FBSztRQUMxQixPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksb0JBQ1osS0FBSyxJQUFJLEVBQUUsRUFDWCxJQUFJLENBQUMsYUFBYSxJQUFJLEVBQUUsRUFDM0IsQ0FBQztJQUNMLENBQUM7Ozs7O0lBRUQsUUFBUSxDQUFDLEtBQUs7UUFDWixJQUFJLENBQUMsSUFBSSxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDaEUsQ0FBQzs7O1lBeENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsWUFBWTtnQkFDdEIsK2FBQXVCO2FBQ3hCOzs7O0lBR0Msa0NBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1dyYXBwZXJDb21wb25lbnR9IGZyb20gJ0Blci9jb3JlJztcbmltcG9ydCB7REVGQVVMVF9CVVRUT05fUFJPUFN9IGZyb20gJ0Blci9wcmVzZXRzJztcbmltcG9ydCB7QnV0dG9uUHJvcHN9IGZyb20gJ0Blci90eXBlcyc7XG5pbXBvcnQge0NvbW1vbnNVdGlsc30gZnJvbSAnQGVyL3V0aWxzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG5nLWJ1dHRvbicsXG4gIHRlbXBsYXRlVXJsOiAndHBsLmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFBuZ0J1dHRvbkNvbXBvbmVudCBleHRlbmRzIFdyYXBwZXJDb21wb25lbnQ8QnV0dG9uUHJvcHM+IHtcblxuICBpY29uOiBzdHJpbmc7XG5cbiAgZ2V0IGlzSGlkZGVuKCkge1xuICAgIGlmICh0aGlzLiRwcm9wcyAmJiB0aGlzLiRwcm9wcy5oaWRkZW4pIHtcbiAgICAgIHJldHVybiBDb21tb25zVXRpbHMuZ2V0VmFsdWUodGhpcy4kcHJvcHMuaGlkZGVuLCB0aGlzLm91dHB1dENvbnRleHQpIHx8IGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBvblByb3BzSW5pdCgpIHtcbiAgICBjb25zdCBidG5Qcm9wcyA9IENvbW1vbnNVdGlscy5jb3B5KHRoaXMuJHByb3BzIHx8IHt9KTtcbiAgICBpZiAoYnRuUHJvcHMubWVudSkge1xuICAgICAgYnRuUHJvcHMubWVudS5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICBpZiAoaXRlbS5jb21tYW5kKSB7XG4gICAgICAgICAgY29uc3QgY29tbWFuZCA9IGl0ZW0uY29tbWFuZDtcbiAgICAgICAgICBpdGVtLmNvbW1hbmQgPSAoZXZlbnQpID0+IHRoaXMub25NZW51Q29tbWFuZChjb21tYW5kLCBldmVudCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgICB0aGlzLiRwcm9wcyA9IHtcbiAgICAgIC4uLkRFRkFVTFRfQlVUVE9OX1BST1BTLFxuICAgICAgLi4uYnRuUHJvcHNcbiAgICB9O1xuICB9XG5cbiAgb25NZW51Q29tbWFuZChjb21tYW5kLCBldmVudCkge1xuICAgIGNvbW1hbmQuY2FsbCh0aGlzLCB7XG4gICAgICAuLi5ldmVudCB8fCB7fSxcbiAgICAgIC4uLnRoaXMub3V0cHV0Q29udGV4dCB8fCB7fVxuICAgIH0pO1xuICB9XG5cbiAgc2V0U3RhdGUoc3RhdGUpIHtcbiAgICB0aGlzLmljb24gPSBzdGF0ZSA/ICdmYSBmYS1jb2cgZmEtc3BpbicgOiB0aGlzLiRwcm9wc1snaWNvbiddO1xuICB9XG59XG4iXX0=