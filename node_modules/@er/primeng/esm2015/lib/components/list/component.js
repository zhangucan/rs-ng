/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, forwardRef, Input } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { DataAwareControlWrapperComponent } from '@er/core';
import { DEFAULT_PNG_LIST_BOX_PROPS } from './type';
export class PngListBoxComponent extends DataAwareControlWrapperComponent {
    constructor() {
        super(...arguments);
        this.templateNames = {
            header: 'header',
            footer: 'footer',
            item: 'item'
        };
        this.$defaultProps = DEFAULT_PNG_LIST_BOX_PROPS;
    }
}
PngListBoxComponent.decorators = [
    { type: Component, args: [{
                selector: 'png-list-box',
                template: `
    <p-listbox
      [(ngModel)]="value"
      erPropsBind
      [props]="$props"
      [context]="ctx"
      [erApiData]="apiDataProps"
      [options]="data$|async"
      (onChange)="updateTouch()"
    >
      <p-header *ngIf="template(templateNames.header)">
        <ng-container *ngTemplateOutlet="template(templateNames.header)"></ng-container>
      </p-header>

      <p-header *ngIf="header">
        <div [innerHTML]="header"></div>
      </p-header>

      <p-footer *ngIf="template(templateNames.footer)">
        <ng-container *ngTemplateOutlet="template(templateNames.footer)"></ng-container>
      </p-footer>

      <p-footer *ngIf="$props.$ext['showValue'] || footer">
        <ng-container *ngIf="$props.$ext['showValue']">
          选中值：{{value | erValue: $props.$ext['field']}}
        </ng-container>
        <ng-container *ngIf="footer">
          <div [innerHTML]="footer"></div>
        </ng-container>
      </p-footer>

      <ng-template let-item let-i="index" pTemplate="item">
        <er-data-item [customerTpl]="template(templateNames.item)"
                      [item]="item.value"
                      [props]="$props.$ext.dataItemProps">
        </er-data-item>
      </ng-template>
    </p-listbox>
  `,
                providers: [{
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => PngListBoxComponent),
                        multi: true
                    }]
            }] }
];
PngListBoxComponent.propDecorators = {
    header: [{ type: Input }],
    footer: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    PngListBoxComponent.prototype.header;
    /** @type {?} */
    PngListBoxComponent.prototype.footer;
    /** @type {?} */
    PngListBoxComponent.prototype.templateNames;
    /** @type {?} */
    PngListBoxComponent.prototype.$defaultProps;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL3ByaW1lbmcvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9saXN0L2NvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzNELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ2pELE9BQU8sRUFBQyxnQ0FBZ0MsRUFBQyxNQUFNLFVBQVUsQ0FBQztBQUMxRCxPQUFPLEVBQUMsMEJBQTBCLEVBQWtCLE1BQU0sUUFBUSxDQUFDO0FBb0RuRSxNQUFNLE9BQU8sbUJBQW9CLFNBQVEsZ0NBQWlEO0lBaEQxRjs7UUFzREUsa0JBQWEsR0FBRztZQUNkLE1BQU0sRUFBRSxRQUFRO1lBQ2hCLE1BQU0sRUFBRSxRQUFRO1lBQ2hCLElBQUksRUFBRSxNQUFNO1NBQ2IsQ0FBQztRQUVGLGtCQUFhLEdBQUcsMEJBQTBCLENBQUM7SUFDN0MsQ0FBQzs7O1lBN0RBLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsY0FBYztnQkFDeEIsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXNDVDtnQkFDRCxTQUFTLEVBQUUsQ0FBQzt3QkFDVixPQUFPLEVBQUUsaUJBQWlCO3dCQUMxQixXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLG1CQUFtQixDQUFDO3dCQUNsRCxLQUFLLEVBQUUsSUFBSTtxQkFDWixDQUFDO2FBQ0g7OztxQkFJRSxLQUFLO3FCQUVMLEtBQUs7Ozs7SUFGTixxQ0FBMEI7O0lBRTFCLHFDQUEwQjs7SUFFMUIsNENBSUU7O0lBRUYsNENBQTJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIGZvcndhcmRSZWYsIElucHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TkdfVkFMVUVfQUNDRVNTT1J9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7RGF0YUF3YXJlQ29udHJvbFdyYXBwZXJDb21wb25lbnR9IGZyb20gJ0Blci9jb3JlJztcbmltcG9ydCB7REVGQVVMVF9QTkdfTElTVF9CT1hfUFJPUFMsIFBuZ0xpc3RCb3hQcm9wc30gZnJvbSAnLi90eXBlJztcblxuZXhwb3J0IHtQbmdMaXN0Qm94UHJvcHN9IGZyb20gJy4vdHlwZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BuZy1saXN0LWJveCcsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHAtbGlzdGJveFxuICAgICAgWyhuZ01vZGVsKV09XCJ2YWx1ZVwiXG4gICAgICBlclByb3BzQmluZFxuICAgICAgW3Byb3BzXT1cIiRwcm9wc1wiXG4gICAgICBbY29udGV4dF09XCJjdHhcIlxuICAgICAgW2VyQXBpRGF0YV09XCJhcGlEYXRhUHJvcHNcIlxuICAgICAgW29wdGlvbnNdPVwiZGF0YSR8YXN5bmNcIlxuICAgICAgKG9uQ2hhbmdlKT1cInVwZGF0ZVRvdWNoKClcIlxuICAgID5cbiAgICAgIDxwLWhlYWRlciAqbmdJZj1cInRlbXBsYXRlKHRlbXBsYXRlTmFtZXMuaGVhZGVyKVwiPlxuICAgICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwidGVtcGxhdGUodGVtcGxhdGVOYW1lcy5oZWFkZXIpXCI+PC9uZy1jb250YWluZXI+XG4gICAgICA8L3AtaGVhZGVyPlxuXG4gICAgICA8cC1oZWFkZXIgKm5nSWY9XCJoZWFkZXJcIj5cbiAgICAgICAgPGRpdiBbaW5uZXJIVE1MXT1cImhlYWRlclwiPjwvZGl2PlxuICAgICAgPC9wLWhlYWRlcj5cblxuICAgICAgPHAtZm9vdGVyICpuZ0lmPVwidGVtcGxhdGUodGVtcGxhdGVOYW1lcy5mb290ZXIpXCI+XG4gICAgICAgIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJ0ZW1wbGF0ZSh0ZW1wbGF0ZU5hbWVzLmZvb3RlcilcIj48L25nLWNvbnRhaW5lcj5cbiAgICAgIDwvcC1mb290ZXI+XG5cbiAgICAgIDxwLWZvb3RlciAqbmdJZj1cIiRwcm9wcy4kZXh0WydzaG93VmFsdWUnXSB8fCBmb290ZXJcIj5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIiRwcm9wcy4kZXh0WydzaG93VmFsdWUnXVwiPlxuICAgICAgICAgIOmAieS4reWAvO+8mnt7dmFsdWUgfCBlclZhbHVlOiAkcHJvcHMuJGV4dFsnZmllbGQnXX19XG4gICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiZm9vdGVyXCI+XG4gICAgICAgICAgPGRpdiBbaW5uZXJIVE1MXT1cImZvb3RlclwiPjwvZGl2PlxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgIDwvcC1mb290ZXI+XG5cbiAgICAgIDxuZy10ZW1wbGF0ZSBsZXQtaXRlbSBsZXQtaT1cImluZGV4XCIgcFRlbXBsYXRlPVwiaXRlbVwiPlxuICAgICAgICA8ZXItZGF0YS1pdGVtIFtjdXN0b21lclRwbF09XCJ0ZW1wbGF0ZSh0ZW1wbGF0ZU5hbWVzLml0ZW0pXCJcbiAgICAgICAgICAgICAgICAgICAgICBbaXRlbV09XCJpdGVtLnZhbHVlXCJcbiAgICAgICAgICAgICAgICAgICAgICBbcHJvcHNdPVwiJHByb3BzLiRleHQuZGF0YUl0ZW1Qcm9wc1wiPlxuICAgICAgICA8L2VyLWRhdGEtaXRlbT5cbiAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgPC9wLWxpc3Rib3g+XG4gIGAsXG4gIHByb3ZpZGVyczogW3tcbiAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBQbmdMaXN0Qm94Q29tcG9uZW50KSxcbiAgICBtdWx0aTogdHJ1ZVxuICB9XVxufSlcblxuZXhwb3J0IGNsYXNzIFBuZ0xpc3RCb3hDb21wb25lbnQgZXh0ZW5kcyBEYXRhQXdhcmVDb250cm9sV3JhcHBlckNvbXBvbmVudDxQbmdMaXN0Qm94UHJvcHM+IHtcblxuICBASW5wdXQoKSBoZWFkZXI6IEZ1bmN0aW9uO1xuXG4gIEBJbnB1dCgpIGZvb3RlcjogRnVuY3Rpb247XG5cbiAgdGVtcGxhdGVOYW1lcyA9IHtcbiAgICBoZWFkZXI6ICdoZWFkZXInLFxuICAgIGZvb3RlcjogJ2Zvb3RlcicsXG4gICAgaXRlbTogJ2l0ZW0nXG4gIH07XG5cbiAgJGRlZmF1bHRQcm9wcyA9IERFRkFVTFRfUE5HX0xJU1RfQk9YX1BST1BTO1xufVxuIl19