/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { DataAwareControlWrapperComponent } from '@er/core';
import { CommonsUtils, DataItemUtils } from '@er/utils';
import { DEFAULT_RADIO_PROPS } from './type';
export class PngRadioComponent extends DataAwareControlWrapperComponent {
    constructor() {
        super(...arguments);
        this.valueParser = this.parseValue;
        this.modelFormatter = this.formatModel;
        this.$defaultProps = DEFAULT_RADIO_PROPS;
    }
    /**
     * @return {?}
     */
    get rbValue() {
        return this._rbValue;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set rbValue(value) {
        this._rbValue = value;
        /** @type {?} */
        const values = this.data$.value;
        if (CommonsUtils.isArray(values)) {
            /** @type {?} */
            const matched = ((/** @type {?} */ (values))).filter(v => v[this.dataKey] === value);
            if (matched.length === 1) {
                this.value = DataItemUtils.getItemValue(matched[0], this.valueKey);
            }
            else {
                this.value = null;
            }
        }
        else {
            this.value = value;
        }
    }
    /**
     * @return {?}
     */
    get dataKey() {
        return CommonsUtils.get(this.$props, '$ext.dataItemProps.idKey', 'value');
    }
    /**
     * @return {?}
     */
    get valueKey() {
        return CommonsUtils.get(this.$props, '$ext.dataItemProps.valueKey', 'value');
    }
    /**
     * @param {?} model
     * @return {?}
     */
    formatModel(model) {
        if (CommonsUtils.isJson(model)) {
            this._rbValue = DataItemUtils.getItemValue(model, this.dataKey);
        }
        return model;
    }
}
PngRadioComponent.decorators = [
    { type: Component, args: [{
                selector: 'png-radio',
                template: `
    <div class="d-flex pb-2" [erApiData]="apiDataProps" [ngClass]="$props.$ext['inline']===false?'flex-column':'flex-wrap'">
      <ng-container *ngFor="let option of data$|async|erDataItems:$props.$ext.dataItemProps;let i=index">
       <span class="d-flex align-items-center">
        <p-radioButton
          class="m-2"
          [(ngModel)]="rbValue"
          erPropsBind
          [props]="$props"
          [context]="ctx"
          [inputId]="i"
          [value]="option.data|erValue:dataKey"
          (onClick)="updateTouch()"
        >
        </p-radioButton>
        <span class="mr-4" [innerHTML]="option.label|erSafeHtml"></span>
       </span>
      </ng-container>
    </div>
  `,
                providers: [{
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => PngRadioComponent),
                        multi: true
                    }]
            }] }
];
if (false) {
    /** @type {?} */
    PngRadioComponent.prototype.valueParser;
    /** @type {?} */
    PngRadioComponent.prototype.modelFormatter;
    /** @type {?} */
    PngRadioComponent.prototype.$defaultProps;
    /** @type {?} */
    PngRadioComponent.prototype._rbValue;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL3ByaW1lbmcvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9yYWRpby9jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsVUFBVSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3BELE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ2pELE9BQU8sRUFBQyxnQ0FBZ0MsRUFBQyxNQUFNLFVBQVUsQ0FBQztBQUMxRCxPQUFPLEVBQUMsWUFBWSxFQUFFLGFBQWEsRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUN0RCxPQUFPLEVBQUMsbUJBQW1CLEVBQWdCLE1BQU0sUUFBUSxDQUFDO0FBaUMxRCxNQUFNLE9BQU8saUJBQWtCLFNBQVEsZ0NBQStDO0lBN0J0Rjs7UUErQkUsZ0JBQVcsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBRTlCLG1CQUFjLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUVsQyxrQkFBYSxHQUFHLG1CQUFtQixDQUFDO0lBcUN0QyxDQUFDOzs7O0lBakNDLElBQUksT0FBTztRQUNULE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDOzs7OztJQUVELElBQUksT0FBTyxDQUFDLEtBQVU7UUFDcEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7O2NBQ2hCLE1BQU0sR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUs7UUFDL0IsSUFBSSxZQUFZLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFOztrQkFDMUIsT0FBTyxHQUFHLENBQUMsbUJBQU0sTUFBTSxFQUFBLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLEtBQUssQ0FBQztZQUNyRSxJQUFJLE9BQU8sQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO2dCQUN4QixJQUFJLENBQUMsS0FBSyxHQUFHLGFBQWEsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQzthQUNwRTtpQkFBTTtnQkFDTCxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQzthQUNuQjtTQUNGO2FBQU07WUFDTCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztTQUNwQjtJQUNILENBQUM7Ozs7SUFFRCxJQUFJLE9BQU87UUFDVCxPQUFPLFlBQVksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSwwQkFBMEIsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUM1RSxDQUFDOzs7O0lBRUQsSUFBSSxRQUFRO1FBQ1YsT0FBTyxZQUFZLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsNkJBQTZCLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDL0UsQ0FBQzs7Ozs7SUFFRCxXQUFXLENBQUMsS0FBSztRQUNmLElBQUksWUFBWSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUM5QixJQUFJLENBQUMsUUFBUSxHQUFHLGFBQWEsQ0FBQyxZQUFZLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUNqRTtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQzs7O1lBdkVGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsV0FBVztnQkFDckIsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBbUJUO2dCQUNELFNBQVMsRUFBRSxDQUFDO3dCQUNWLE9BQU8sRUFBRSxpQkFBaUI7d0JBQzFCLFdBQVcsRUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMsaUJBQWlCLENBQUM7d0JBQ2hELEtBQUssRUFBRSxJQUFJO3FCQUNaLENBQUM7YUFDSDs7OztJQUlDLHdDQUE4Qjs7SUFFOUIsMkNBQWtDOztJQUVsQywwQ0FBb0M7O0lBRXBDLHFDQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBmb3J3YXJkUmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TkdfVkFMVUVfQUNDRVNTT1J9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7RGF0YUF3YXJlQ29udHJvbFdyYXBwZXJDb21wb25lbnR9IGZyb20gJ0Blci9jb3JlJztcbmltcG9ydCB7Q29tbW9uc1V0aWxzLCBEYXRhSXRlbVV0aWxzfSBmcm9tICdAZXIvdXRpbHMnO1xuaW1wb3J0IHtERUZBVUxUX1JBRElPX1BST1BTLCBQbmdSYWRpb1Byb3BzfSBmcm9tICcuL3R5cGUnO1xuXG5leHBvcnQge1BuZ1JhZGlvUHJvcHN9IGZyb20gJy4vdHlwZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BuZy1yYWRpbycsXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBjbGFzcz1cImQtZmxleCBwYi0yXCIgW2VyQXBpRGF0YV09XCJhcGlEYXRhUHJvcHNcIiBbbmdDbGFzc109XCIkcHJvcHMuJGV4dFsnaW5saW5lJ109PT1mYWxzZT8nZmxleC1jb2x1bW4nOidmbGV4LXdyYXAnXCI+XG4gICAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCBvcHRpb24gb2YgZGF0YSR8YXN5bmN8ZXJEYXRhSXRlbXM6JHByb3BzLiRleHQuZGF0YUl0ZW1Qcm9wcztsZXQgaT1pbmRleFwiPlxuICAgICAgIDxzcGFuIGNsYXNzPVwiZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlclwiPlxuICAgICAgICA8cC1yYWRpb0J1dHRvblxuICAgICAgICAgIGNsYXNzPVwibS0yXCJcbiAgICAgICAgICBbKG5nTW9kZWwpXT1cInJiVmFsdWVcIlxuICAgICAgICAgIGVyUHJvcHNCaW5kXG4gICAgICAgICAgW3Byb3BzXT1cIiRwcm9wc1wiXG4gICAgICAgICAgW2NvbnRleHRdPVwiY3R4XCJcbiAgICAgICAgICBbaW5wdXRJZF09XCJpXCJcbiAgICAgICAgICBbdmFsdWVdPVwib3B0aW9uLmRhdGF8ZXJWYWx1ZTpkYXRhS2V5XCJcbiAgICAgICAgICAob25DbGljayk9XCJ1cGRhdGVUb3VjaCgpXCJcbiAgICAgICAgPlxuICAgICAgICA8L3AtcmFkaW9CdXR0b24+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwibXItNFwiIFtpbm5lckhUTUxdPVwib3B0aW9uLmxhYmVsfGVyU2FmZUh0bWxcIj48L3NwYW4+XG4gICAgICAgPC9zcGFuPlxuICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC9kaXY+XG4gIGAsXG4gIHByb3ZpZGVyczogW3tcbiAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBQbmdSYWRpb0NvbXBvbmVudCksXG4gICAgbXVsdGk6IHRydWVcbiAgfV1cbn0pXG5cbmV4cG9ydCBjbGFzcyBQbmdSYWRpb0NvbXBvbmVudCBleHRlbmRzIERhdGFBd2FyZUNvbnRyb2xXcmFwcGVyQ29tcG9uZW50PFBuZ1JhZGlvUHJvcHM+IHtcblxuICB2YWx1ZVBhcnNlciA9IHRoaXMucGFyc2VWYWx1ZTtcblxuICBtb2RlbEZvcm1hdHRlciA9IHRoaXMuZm9ybWF0TW9kZWw7XG5cbiAgJGRlZmF1bHRQcm9wcyA9IERFRkFVTFRfUkFESU9fUFJPUFM7XG5cbiAgX3JiVmFsdWU6IHN0cmluZztcblxuICBnZXQgcmJWYWx1ZSgpOiBhbnkge1xuICAgIHJldHVybiB0aGlzLl9yYlZhbHVlO1xuICB9XG5cbiAgc2V0IHJiVmFsdWUodmFsdWU6IGFueSkge1xuICAgIHRoaXMuX3JiVmFsdWUgPSB2YWx1ZTtcbiAgICBjb25zdCB2YWx1ZXMgPSB0aGlzLmRhdGEkLnZhbHVlO1xuICAgIGlmIChDb21tb25zVXRpbHMuaXNBcnJheSh2YWx1ZXMpKSB7XG4gICAgICBjb25zdCBtYXRjaGVkID0gKDx7fVtdPnZhbHVlcykuZmlsdGVyKHYgPT4gdlt0aGlzLmRhdGFLZXldID09PSB2YWx1ZSk7XG4gICAgICBpZiAobWF0Y2hlZC5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IERhdGFJdGVtVXRpbHMuZ2V0SXRlbVZhbHVlKG1hdGNoZWRbMF0sIHRoaXMudmFsdWVLZXkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy52YWx1ZSA9IG51bGw7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudmFsdWUgPSB2YWx1ZTtcbiAgICB9XG4gIH1cblxuICBnZXQgZGF0YUtleSgpIHtcbiAgICByZXR1cm4gQ29tbW9uc1V0aWxzLmdldCh0aGlzLiRwcm9wcywgJyRleHQuZGF0YUl0ZW1Qcm9wcy5pZEtleScsICd2YWx1ZScpO1xuICB9XG5cbiAgZ2V0IHZhbHVlS2V5KCkge1xuICAgIHJldHVybiBDb21tb25zVXRpbHMuZ2V0KHRoaXMuJHByb3BzLCAnJGV4dC5kYXRhSXRlbVByb3BzLnZhbHVlS2V5JywgJ3ZhbHVlJyk7XG4gIH1cblxuICBmb3JtYXRNb2RlbChtb2RlbCkge1xuICAgIGlmIChDb21tb25zVXRpbHMuaXNKc29uKG1vZGVsKSkge1xuICAgICAgdGhpcy5fcmJWYWx1ZSA9IERhdGFJdGVtVXRpbHMuZ2V0SXRlbVZhbHVlKG1vZGVsLCB0aGlzLmRhdGFLZXkpO1xuICAgIH1cbiAgICByZXR1cm4gbW9kZWw7XG4gIH1cbn1cbiJdfQ==