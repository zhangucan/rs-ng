/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Component, HostBinding, HostListener, Input, TemplateRef } from '@angular/core';
import { BaseComponent } from '@er/core';
import { PngTableComponent } from '../table/component';
export class PngTableBodyCellComponent extends BaseComponent {
    /**
     * @param {?} pngTable
     */
    constructor(pngTable) {
        super();
        this.pngTable = pngTable;
    }
    /**
     * @return {?}
     */
    get width() {
        return this.column.width;
    }
    /**
     * @return {?}
     */
    get height() {
        return this.column.height;
    }
    /**
     * @param {?=} event
     * @return {?}
     */
    cellContext(event) {
        return {
            $event: event,
            $id: this.pngTable.$props.$id,
            column: this.column,
            row: this.row,
            rowIndex: this.rowIndex,
            pngTable: this.pngTable
        };
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onMouseEnter(event) {
        if (this.column.onMouseEnter) {
            this.column.onMouseEnter.call(this.pngTable, this.cellContext(event));
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onMouseOver(event) {
        if (this.column.onMouseOver) {
            this.column.onMouseOver.call(this.pngTable, this.cellContext(event));
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onMouseOut(event) {
        if (this.column.onMouseOut) {
            this.column.onMouseOut.call(this.pngTable, this.cellContext(event));
        }
    }
}
PngTableBodyCellComponent.decorators = [
    { type: Component, args: [{
                selector: '[png-table-body-cell]',
                template: `
    <ng-container *ngIf="customerTpl;else default">
      <ng-container *ngTemplateOutlet="customerTpl;context:cellContext"></ng-container>
    </ng-container>
    <ng-template #default>
      <png-table-body-cell-content
        [customerTpl]="dataCellTpl"
        [column]="column"
        [row]="row"
        [rowIndex]="rowIndex"
      ></png-table-body-cell-content>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush
            }] }
];
/** @nocollapse */
PngTableBodyCellComponent.ctorParameters = () => [
    { type: PngTableComponent }
];
PngTableBodyCellComponent.propDecorators = {
    column: [{ type: Input }],
    row: [{ type: Input }],
    rowIndex: [{ type: Input }],
    dataCellTpl: [{ type: Input }],
    width: [{ type: HostBinding, args: ['style.width',] }],
    height: [{ type: HostBinding, args: ['style.height',] }],
    onMouseEnter: [{ type: HostListener, args: ['mouseenter', ['$event'],] }],
    onMouseOver: [{ type: HostListener, args: ['mouseover', ['$event'],] }],
    onMouseOut: [{ type: HostListener, args: ['mouseout', ['$event'],] }]
};
if (false) {
    /** @type {?} */
    PngTableBodyCellComponent.prototype.column;
    /** @type {?} */
    PngTableBodyCellComponent.prototype.row;
    /** @type {?} */
    PngTableBodyCellComponent.prototype.rowIndex;
    /** @type {?} */
    PngTableBodyCellComponent.prototype.dataCellTpl;
    /** @type {?} */
    PngTableBodyCellComponent.prototype.pngTable;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL3ByaW1lbmcvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90YWJsZS9jb21wb25lbnQvYm9keS1jZWxsL2NvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDaEgsT0FBTyxFQUFDLGFBQWEsRUFBQyxNQUFNLFVBQVUsQ0FBQztBQUV2QyxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQW1CckQsTUFBTSxPQUFPLHlCQUEwQixTQUFRLGFBQWE7Ozs7SUFVMUQsWUFBbUIsUUFBMkI7UUFDNUMsS0FBSyxFQUFFLENBQUM7UUFEUyxhQUFRLEdBQVIsUUFBUSxDQUFtQjtJQUU5QyxDQUFDOzs7O0lBRUQsSUFDSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztJQUMzQixDQUFDOzs7O0lBRUQsSUFDSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUM1QixDQUFDOzs7OztJQUVELFdBQVcsQ0FBQyxLQUFNO1FBQ2hCLE9BQU87WUFDTCxNQUFNLEVBQUUsS0FBSztZQUNiLEdBQUcsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHO1lBQzdCLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTTtZQUNuQixHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUc7WUFDYixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7WUFDdkIsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1NBQ3hCLENBQUM7SUFDSixDQUFDOzs7OztJQUdELFlBQVksQ0FBQyxLQUFLO1FBQ2hCLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUU7WUFDNUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1NBQ3ZFO0lBQ0gsQ0FBQzs7Ozs7SUFHRCxXQUFXLENBQUMsS0FBSztRQUNmLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUU7WUFDM0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1NBQ3RFO0lBQ0gsQ0FBQzs7Ozs7SUFHRCxVQUFVLENBQUMsS0FBSztRQUNkLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUU7WUFDMUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1NBQ3JFO0lBQ0gsQ0FBQzs7O1lBdkVGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsdUJBQXVCO2dCQUNqQyxRQUFRLEVBQUU7Ozs7Ozs7Ozs7O0dBV1Q7Z0JBQ0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07YUFDaEQ7Ozs7WUFqQk8saUJBQWlCOzs7cUJBcUJ0QixLQUFLO2tCQUVMLEtBQUs7dUJBRUwsS0FBSzswQkFFTCxLQUFLO29CQU1MLFdBQVcsU0FBQyxhQUFhO3FCQUt6QixXQUFXLFNBQUMsY0FBYzsyQkFnQjFCLFlBQVksU0FBQyxZQUFZLEVBQUUsQ0FBQyxRQUFRLENBQUM7MEJBT3JDLFlBQVksU0FBQyxXQUFXLEVBQUUsQ0FBQyxRQUFRLENBQUM7eUJBT3BDLFlBQVksU0FBQyxVQUFVLEVBQUUsQ0FBQyxRQUFRLENBQUM7Ozs7SUEvQ3BDLDJDQUFxQzs7SUFFckMsd0NBQW1COztJQUVuQiw2Q0FBMEI7O0lBRTFCLGdEQUF1Qzs7SUFFM0IsNkNBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBIb3N0QmluZGluZywgSG9zdExpc3RlbmVyLCBJbnB1dCwgVGVtcGxhdGVSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtCYXNlQ29tcG9uZW50fSBmcm9tICdAZXIvY29yZSc7XG5pbXBvcnQge1BuZ1RhYmxlQ29sdW1uUHJvcHN9IGZyb20gJy4uLy4uL3R5cGVzJztcbmltcG9ydCB7UG5nVGFibGVDb21wb25lbnR9IGZyb20gJy4uL3RhYmxlL2NvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ1twbmctdGFibGUtYm9keS1jZWxsXScsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImN1c3RvbWVyVHBsO2Vsc2UgZGVmYXVsdFwiPlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cImN1c3RvbWVyVHBsO2NvbnRleHQ6Y2VsbENvbnRleHRcIj48L25nLWNvbnRhaW5lcj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8bmctdGVtcGxhdGUgI2RlZmF1bHQ+XG4gICAgICA8cG5nLXRhYmxlLWJvZHktY2VsbC1jb250ZW50XG4gICAgICAgIFtjdXN0b21lclRwbF09XCJkYXRhQ2VsbFRwbFwiXG4gICAgICAgIFtjb2x1bW5dPVwiY29sdW1uXCJcbiAgICAgICAgW3Jvd109XCJyb3dcIlxuICAgICAgICBbcm93SW5kZXhdPVwicm93SW5kZXhcIlxuICAgICAgPjwvcG5nLXRhYmxlLWJvZHktY2VsbC1jb250ZW50PlxuICBgLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcblxuZXhwb3J0IGNsYXNzIFBuZ1RhYmxlQm9keUNlbGxDb21wb25lbnQgZXh0ZW5kcyBCYXNlQ29tcG9uZW50IHtcblxuICBASW5wdXQoKSBjb2x1bW46IFBuZ1RhYmxlQ29sdW1uUHJvcHM7XG5cbiAgQElucHV0KCkgcm93OiB7fVtdO1xuXG4gIEBJbnB1dCgpIHJvd0luZGV4OiBudW1iZXI7XG5cbiAgQElucHV0KCkgZGF0YUNlbGxUcGw6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgY29uc3RydWN0b3IocHVibGljIHBuZ1RhYmxlOiBQbmdUYWJsZUNvbXBvbmVudCkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBASG9zdEJpbmRpbmcoJ3N0eWxlLndpZHRoJylcbiAgZ2V0IHdpZHRoKCkge1xuICAgIHJldHVybiB0aGlzLmNvbHVtbi53aWR0aDtcbiAgfVxuXG4gIEBIb3N0QmluZGluZygnc3R5bGUuaGVpZ2h0JylcbiAgZ2V0IGhlaWdodCgpIHtcbiAgICByZXR1cm4gdGhpcy5jb2x1bW4uaGVpZ2h0O1xuICB9XG5cbiAgY2VsbENvbnRleHQoZXZlbnQ/KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICRldmVudDogZXZlbnQsXG4gICAgICAkaWQ6IHRoaXMucG5nVGFibGUuJHByb3BzLiRpZCxcbiAgICAgIGNvbHVtbjogdGhpcy5jb2x1bW4sXG4gICAgICByb3c6IHRoaXMucm93LFxuICAgICAgcm93SW5kZXg6IHRoaXMucm93SW5kZXgsXG4gICAgICBwbmdUYWJsZTogdGhpcy5wbmdUYWJsZVxuICAgIH07XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdtb3VzZWVudGVyJywgWyckZXZlbnQnXSlcbiAgb25Nb3VzZUVudGVyKGV2ZW50KSB7XG4gICAgaWYgKHRoaXMuY29sdW1uLm9uTW91c2VFbnRlcikge1xuICAgICAgdGhpcy5jb2x1bW4ub25Nb3VzZUVudGVyLmNhbGwodGhpcy5wbmdUYWJsZSwgdGhpcy5jZWxsQ29udGV4dChldmVudCkpO1xuICAgIH1cbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ21vdXNlb3ZlcicsIFsnJGV2ZW50J10pXG4gIG9uTW91c2VPdmVyKGV2ZW50KSB7XG4gICAgaWYgKHRoaXMuY29sdW1uLm9uTW91c2VPdmVyKSB7XG4gICAgICB0aGlzLmNvbHVtbi5vbk1vdXNlT3Zlci5jYWxsKHRoaXMucG5nVGFibGUsIHRoaXMuY2VsbENvbnRleHQoZXZlbnQpKTtcbiAgICB9XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdtb3VzZW91dCcsIFsnJGV2ZW50J10pXG4gIG9uTW91c2VPdXQoZXZlbnQpIHtcbiAgICBpZiAodGhpcy5jb2x1bW4ub25Nb3VzZU91dCkge1xuICAgICAgdGhpcy5jb2x1bW4ub25Nb3VzZU91dC5jYWxsKHRoaXMucG5nVGFibGUsIHRoaXMuY2VsbENvbnRleHQoZXZlbnQpKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==