/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { DataAwareControlWrapperComponent } from '@er/core';
import { DEFAULT_SELECT_BUTTON_PROPS } from './type';
export class PngSelectButtonComponent extends DataAwareControlWrapperComponent {
    constructor() {
        super(...arguments);
        this.$defaultProps = DEFAULT_SELECT_BUTTON_PROPS;
        this.templateNames = {
            item: 'item'
        };
    }
}
PngSelectButtonComponent.decorators = [
    { type: Component, args: [{
                selector: 'png-select-button',
                template: `
    <p-selectButton
      [(ngModel)]="value"
      erPropsBind
      [props]="$props"
      [context]="ctx"
      [erApiData]="apiDataProps"
      [options]="data$|async|erDataItems:$props.$ext.dataItemProps"
      (onOptionClick)="updateTouch()"
    >
      <ng-template let-item>
        <er-data-item [customerTpl]="template(templateNames.item)"
                      [item]="item.data"
                      [props]="$props.$ext.dataItemProps">
        </er-data-item>
      </ng-template>  
    </p-selectButton>
  `,
                providers: [{
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => PngSelectButtonComponent),
                        multi: true
                    }]
            }] }
];
if (false) {
    /** @type {?} */
    PngSelectButtonComponent.prototype.$defaultProps;
    /** @type {?} */
    PngSelectButtonComponent.prototype.templateNames;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL3ByaW1lbmcvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9zZWxlY3QtYnV0dG9uL2NvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDakQsT0FBTyxFQUFDLGdDQUFnQyxFQUFDLE1BQU0sVUFBVSxDQUFDO0FBQzFELE9BQU8sRUFBQywyQkFBMkIsRUFBdUIsTUFBTSxRQUFRLENBQUM7QUErQnpFLE1BQU0sT0FBTyx3QkFBeUIsU0FBUSxnQ0FBc0Q7SUEzQnBHOztRQTZCRSxrQkFBYSxHQUFHLDJCQUEyQixDQUFDO1FBRTVDLGtCQUFhLEdBQUc7WUFDZCxJQUFJLEVBQUUsTUFBTTtTQUNiLENBQUM7SUFFSixDQUFDOzs7WUFuQ0EsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxtQkFBbUI7Z0JBQzdCLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FpQlQ7Z0JBQ0QsU0FBUyxFQUFFLENBQUM7d0JBQ1YsT0FBTyxFQUFFLGlCQUFpQjt3QkFDMUIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyx3QkFBd0IsQ0FBQzt3QkFDdkQsS0FBSyxFQUFFLElBQUk7cUJBQ1osQ0FBQzthQUNIOzs7O0lBSUMsaURBQTRDOztJQUU1QyxpREFFRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBmb3J3YXJkUmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TkdfVkFMVUVfQUNDRVNTT1J9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7RGF0YUF3YXJlQ29udHJvbFdyYXBwZXJDb21wb25lbnR9IGZyb20gJ0Blci9jb3JlJztcbmltcG9ydCB7REVGQVVMVF9TRUxFQ1RfQlVUVE9OX1BST1BTLCBQbmdTZWxlY3RCdXR0b25Qcm9wc30gZnJvbSAnLi90eXBlJztcblxuZXhwb3J0IHtQbmdTZWxlY3RCdXR0b25Qcm9wc30gZnJvbSAnLi90eXBlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG5nLXNlbGVjdC1idXR0b24nLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxwLXNlbGVjdEJ1dHRvblxuICAgICAgWyhuZ01vZGVsKV09XCJ2YWx1ZVwiXG4gICAgICBlclByb3BzQmluZFxuICAgICAgW3Byb3BzXT1cIiRwcm9wc1wiXG4gICAgICBbY29udGV4dF09XCJjdHhcIlxuICAgICAgW2VyQXBpRGF0YV09XCJhcGlEYXRhUHJvcHNcIlxuICAgICAgW29wdGlvbnNdPVwiZGF0YSR8YXN5bmN8ZXJEYXRhSXRlbXM6JHByb3BzLiRleHQuZGF0YUl0ZW1Qcm9wc1wiXG4gICAgICAob25PcHRpb25DbGljayk9XCJ1cGRhdGVUb3VjaCgpXCJcbiAgICA+XG4gICAgICA8bmctdGVtcGxhdGUgbGV0LWl0ZW0+XG4gICAgICAgIDxlci1kYXRhLWl0ZW0gW2N1c3RvbWVyVHBsXT1cInRlbXBsYXRlKHRlbXBsYXRlTmFtZXMuaXRlbSlcIlxuICAgICAgICAgICAgICAgICAgICAgIFtpdGVtXT1cIml0ZW0uZGF0YVwiXG4gICAgICAgICAgICAgICAgICAgICAgW3Byb3BzXT1cIiRwcm9wcy4kZXh0LmRhdGFJdGVtUHJvcHNcIj5cbiAgICAgICAgPC9lci1kYXRhLWl0ZW0+XG4gICAgICA8L25nLXRlbXBsYXRlPiAgXG4gICAgPC9wLXNlbGVjdEJ1dHRvbj5cbiAgYCxcbiAgcHJvdmlkZXJzOiBbe1xuICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFBuZ1NlbGVjdEJ1dHRvbkNvbXBvbmVudCksXG4gICAgbXVsdGk6IHRydWVcbiAgfV1cbn0pXG5cbmV4cG9ydCBjbGFzcyBQbmdTZWxlY3RCdXR0b25Db21wb25lbnQgZXh0ZW5kcyBEYXRhQXdhcmVDb250cm9sV3JhcHBlckNvbXBvbmVudDxQbmdTZWxlY3RCdXR0b25Qcm9wcz4ge1xuXG4gICRkZWZhdWx0UHJvcHMgPSBERUZBVUxUX1NFTEVDVF9CVVRUT05fUFJPUFM7XG5cbiAgdGVtcGxhdGVOYW1lcyA9IHtcbiAgICBpdGVtOiAnaXRlbSdcbiAgfTtcblxufVxuIl19