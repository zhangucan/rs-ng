/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { animate, state, style, transition, trigger } from '@angular/animations';
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { PngAdminWorkSpaceComponent } from '../../component';
import { WorkSpaceMainMenuComponent } from '../component';
var WorkSpaceSubMenuComponent = /** @class */ (function () {
    function WorkSpaceSubMenuComponent(ws, wsMenu) {
        this.ws = ws;
        this.wsMenu = wsMenu;
    }
    Object.defineProperty(WorkSpaceSubMenuComponent.prototype, "reset", {
        get: /**
         * @return {?}
         */
        function () {
            return this._reset;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._reset = val;
            if (this._reset && (this.ws.isHorizontal() || this.ws.isSlim())) {
                this.activeIndex = null;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WorkSpaceSubMenuComponent.prototype, "parentActive", {
        get: /**
         * @return {?}
         */
        function () {
            return this._parentActive;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._parentActive = val;
            if (!this._parentActive) {
                this.activeIndex = null;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} event
     * @param {?} item
     * @param {?} index
     * @return {?}
     */
    WorkSpaceSubMenuComponent.prototype.itemClick = /**
     * @param {?} event
     * @param {?} item
     * @param {?} index
     * @return {?}
     */
    function (event, item, index) {
        var _this = this;
        if (this.root) {
            this.ws.menuHoverActive = !this.ws.menuHoverActive;
        }
        // avoid processing disabled items
        if (item.disabled) {
            event.preventDefault();
            return true;
        }
        // activate current item and deactivate active sibling if any
        this.activeIndex = (this.activeIndex === index) ? null : index;
        // execute command
        if (item.command) {
            item.command({ originalEvent: event, item: item, menu: this.wsMenu, ws: this.ws });
        }
        // prevent hash change
        if (item.items || (!item.url && !item.routerLink)) {
            setTimeout(function () {
                _this.ws.layoutMenuScrollerViewChild.moveBar();
            }, 450);
            event.preventDefault();
        }
        // hide menu
        if (!item.items) {
            if (this.ws.isHorizontal() || this.ws.isSlim()) {
                this.ws.resetMenu = true;
            }
            else {
                this.ws.resetMenu = false;
            }
            this.ws.overlayMenuActive = false;
            this.ws.staticMenuMobileActive = false;
            this.ws.menuHoverActive = !this.ws.menuHoverActive;
        }
    };
    /**
     * @param {?} index
     * @return {?}
     */
    WorkSpaceSubMenuComponent.prototype.onMouseEnter = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        if (this.root && this.ws.menuHoverActive && (this.ws.isHorizontal() || this.ws.isSlim())
            && !this.ws.isMobile() && !this.ws.isTablet()) {
            this.activeIndex = index;
        }
    };
    /**
     * @param {?} index
     * @return {?}
     */
    WorkSpaceSubMenuComponent.prototype.isActive = /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        return this.activeIndex === index;
    };
    WorkSpaceSubMenuComponent.decorators = [
        { type: Component, args: [{
                    selector: '[png-ws-sub-menu]',
                    template: "<ng-template ngFor let-child let-i=\"index\" [ngForOf]=\"(root ? item : item.items)\">\n  <li [ngClass]=\"{'active-menuitem': isActive(i)}\" [class]=\"child.badgeStyleClass\"\n      *ngIf=\"child.visible === false ? false : true\">\n    <a [href]=\"child.url||'#'\" (click)=\"itemClick($event,child,i)\" (mouseenter)=\"onMouseEnter(i)\"\n       class=\"ripplelink\" *ngIf=\"!child.routerLink\"\n       [attr.tabindex]=\"!visible ? '-1' : null\" [attr.target]=\"child.target\">\n      <i [ngClass]=\"child.icon\"></i><span>{{child.label}}</span>\n      <i class=\"fa fa-fw fa-angle-down menuitem-toggle-icon\" *ngIf=\"child.items\"></i>\n      <span class=\"menuitem-badge\" *ngIf=\"child.badge\">{{child.badge}}</span>\n    </a>\n\n    <a (click)=\"itemClick($event,child,i)\" (mouseenter)=\"onMouseEnter(i)\" class=\"ripplelink\" *ngIf=\"child.routerLink\"\n       [routerLink]=\"child.routerLink\" routerLinkActive=\"active-menuitem-routerlink\"\n       [routerLinkActiveOptions]=\"{exact: true}\" [attr.tabindex]=\"!visible ? '-1' : null\" [attr.target]=\"child.target\">\n      <i [ngClass]=\"child.icon\"></i><span>{{child.label}}</span>\n      <i class=\"fa fa-fw fa-angle-down menuitem-toggle-icon\" *ngIf=\"child.items\"></i>\n      <span class=\"menuitem-badge\" *ngIf=\"child.badge\">{{child.badge}}</span>\n    </a>\n    <div class=\"layout-menu-tooltip\">\n      <div class=\"layout-menu-tooltip-arrow\"></div>\n      <div class=\"layout-menu-tooltip-text\">{{child.label}}</div>\n    </div>\n    <div class=\"submenu-arrow\" *ngIf=\"child.items\"></div>\n    <ul png-ws-sub-menu [item]=\"child\" *ngIf=\"child.items\" [visible]=\"isActive(i)\" [reset]=\"reset\"\n        [parentActive]=\"isActive(i)\"\n        [@children]=\"(ws.isSlim()||ws.isHorizontal())&&root ? isActive(i) ?\n                     'visible' : 'hidden' : isActive(i) ? 'visibleAnimated' : 'hiddenAnimated'\"></ul>\n  </li>\n</ng-template>",
                    animations: [
                        trigger('children', [
                            state('hiddenAnimated', style({
                                height: '0px'
                            })),
                            state('visibleAnimated', style({
                                height: '*'
                            })),
                            state('visible', style({
                                display: 'block'
                            })),
                            state('hidden', style({
                                display: 'none'
                            })),
                            transition('visibleAnimated => hiddenAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)')),
                            transition('hiddenAnimated => visibleAnimated', animate('400ms cubic-bezier(0.86, 0, 0.07, 1)'))
                        ])
                    ],
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    WorkSpaceSubMenuComponent.ctorParameters = function () { return [
        { type: PngAdminWorkSpaceComponent },
        { type: WorkSpaceMainMenuComponent }
    ]; };
    WorkSpaceSubMenuComponent.propDecorators = {
        item: [{ type: Input }],
        root: [{ type: Input }],
        visible: [{ type: Input }],
        reset: [{ type: Input }],
        parentActive: [{ type: Input }]
    };
    return WorkSpaceSubMenuComponent;
}());
export { WorkSpaceSubMenuComponent };
if (false) {
    /** @type {?} */
    WorkSpaceSubMenuComponent.prototype.item;
    /** @type {?} */
    WorkSpaceSubMenuComponent.prototype.root;
    /** @type {?} */
    WorkSpaceSubMenuComponent.prototype.visible;
    /** @type {?} */
    WorkSpaceSubMenuComponent.prototype.activeIndex;
    /** @type {?} */
    WorkSpaceSubMenuComponent.prototype._reset;
    /** @type {?} */
    WorkSpaceSubMenuComponent.prototype._parentActive;
    /** @type {?} */
    WorkSpaceSubMenuComponent.prototype.ws;
    /** @type {?} */
    WorkSpaceSubMenuComponent.prototype.wsMenu;
}
//# sourceMappingURL=data:application/json;base64,