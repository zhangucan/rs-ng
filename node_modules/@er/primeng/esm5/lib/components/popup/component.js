/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';
import { BaseComponent } from '@er/core';
import { StateNames } from '@er/types';
import { StatesUtils } from '@er/utils';
import { of } from 'rxjs';
import { filter, map, takeUntil } from 'rxjs/operators';
import { DEFAULT_POPUP_DIALOG_PROPS } from './defaults';
var PngPopupDialogComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PngPopupDialogComponent, _super);
    function PngPopupDialogComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onClose = new EventEmitter();
        _this.onAction = new EventEmitter();
        _this.templateNames = {
            header: 'header',
            content: 'content',
            footer: 'footer'
        };
        return _this;
    }
    Object.defineProperty(PngPopupDialogComponent.prototype, "options", {
        set: /**
         * @param {?} options
         * @return {?}
         */
        function (options) {
            this.dlgOptions$ = of(this.resolveDlgOptions(options));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PngPopupDialogComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.dlgOptions$ = StatesUtils.observe(StateNames.popup)
            .pipe(filter(function (state) { return !!state; }), map(function (options) { return _this.resolveDlgOptions(options); }), takeUntil(this.destroyed$));
    };
    /**
     * @param {?} options
     * @return {?}
     */
    PngPopupDialogComponent.prototype.resolveDlgOptions = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        /** @type {?} */
        var opt = tslib_1.__assign({}, DEFAULT_POPUP_DIALOG_PROPS, { header: this.header, content: this.content }, options);
        if (options.contentMaxHeight || options.contentMaxWidth) {
            opt.contentStyle = tslib_1.__assign({}, opt.contentStyle || {}, { 'max-height': (options.contentMaxHeight || 3000) + "px", 'max-width': (options.contentMaxWidth || 3000) + "px" });
        }
        return opt;
    };
    /**
     * @param {?} dlg
     * @param {?} options
     * @return {?}
     */
    PngPopupDialogComponent.prototype.showEvent = /**
     * @param {?} dlg
     * @param {?} options
     * @return {?}
     */
    function (dlg, options) {
        _super.prototype.emitEvent.call(this, 'onShow', {
            scope: options,
            event: dlg,
            context: options.context
        });
    };
    /**
     * @param {?} dlg
     * @param {?} options
     * @return {?}
     */
    PngPopupDialogComponent.prototype.closeDlg = /**
     * @param {?} dlg
     * @param {?} options
     * @return {?}
     */
    function (dlg, options) {
        if (this.canClose && !this.canClose({
            scope: options,
            event: dlg,
            context: options.context
        })) {
            return;
        }
        StatesUtils.create(StateNames.popup, { visible: false });
    };
    PngPopupDialogComponent.decorators = [
        { type: Component, args: [{
                    selector: 'png-popup-dialog',
                    template: "<ng-container *ngIf=\"dlgOptions$|async as dlgOptions\">\n  <p-dialog #pngDialog\n            [(visible)]=\"dlgOptions.visible\"\n            [minWidth]=\"dlgOptions.minWidth\"\n            [minHeight]=\"dlgOptions.minHeight\"\n            [width]=\"dlgOptions.width\"\n            [height]=\"dlgOptions.height\"\n            [modal]=\"dlgOptions.modal\"\n            [draggable]=\"dlgOptions.draggable\"\n            [resizable]=\"dlgOptions.resizable\"\n            [closeOnEscape]=\"dlgOptions.closeOnEscape\"\n            [contentStyle]=\"dlgOptions.contentStyle\"\n            [dismissableMask]=\"dlgOptions.dismissableMask\"\n            [rtl]=\"dlgOptions.rtl\"\n            [closable]=\"dlgOptions.closable\"\n            [responsive]=\"dlgOptions.responsive\"\n            [breakpoint]=\"dlgOptions.breakpoint\"\n            [appendTo]=\"dlgOptions.appendTo\"\n            [maximizable]=\"dlgOptions.maximizable\"\n            [blockScroll]=\"dlgOptions.blockScroll\"\n            [style]=\"dlgOptions.style\"\n            [styleClass]=\"dlgOptions.styleClass\"\n            [showHeader]=\"dlgOptions.showHeader\"\n            [positionLeft]=\"dlgOptions.positionLeft\"\n            [positionTop]=\"dlgOptions.positionTop\"\n            (onShow)=\"showEvent(pngDialog,dlgOptions)\"\n  >\n    <p-header>\n      <ng-container *ngIf=\"templates[templateNames.header]\">\n        <ng-container *ngTemplateOutlet=\"templates[templateNames.header]\"></ng-container>\n      </ng-container>\n      <span [innerHTML]=\"dlgOptions.header\"></span>\n    </p-header>\n\n    <ng-container *ngTemplateOutlet=\"templates[templateNames.content]\"></ng-container>\n\n    <ng-container *ngIf=\"dlgOptions.content\">\n      <er-dyna-content [content]=\"dlgOptions.content\"></er-dyna-content>\n    </ng-container>\n\n    <ng-content></ng-content>\n\n    <p-footer *ngIf=\"dlgOptions.showFooter\">\n      <ng-container *ngIf=\"templates[templateNames.footer]\">\n        <ng-container *ngTemplateOutlet=\"templates[templateNames.footer]\"></ng-container>\n      </ng-container>\n      <ng-container *ngIf=\"!templates[templateNames.footer]\">\n        <png-buttons [btns]=\"dlgOptions.buttons\" [context]=\"dlgOptions.context\"></png-buttons>\n        <button pButton type=\"button\" class=\"ui-button-rounded ui-button-danger\" iconPos=\"left\"\n                (click)=\"closeDlg(pngDialog,dlgOptions)\"\n                [icon]=\"dlgOptions.closeIcon\" [label]=\"dlgOptions.closeLabel\"></button>\n      </ng-container>\n    </p-footer>\n  </p-dialog>\n</ng-container>\n\n\n\n\n",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [":host::ng-deep .ui-dialog-titlebar{background-color:#0d7a8b!important;color:#fff!important}"]
                }] }
    ];
    PngPopupDialogComponent.propDecorators = {
        header: [{ type: Input }],
        content: [{ type: Input }],
        canClose: [{ type: Input }],
        onClose: [{ type: Output }],
        onAction: [{ type: Output }],
        options: [{ type: Input }]
    };
    return PngPopupDialogComponent;
}(BaseComponent));
export { PngPopupDialogComponent };
if (false) {
    /** @type {?} */
    PngPopupDialogComponent.prototype.header;
    /** @type {?} */
    PngPopupDialogComponent.prototype.content;
    /** @type {?} */
    PngPopupDialogComponent.prototype.canClose;
    /** @type {?} */
    PngPopupDialogComponent.prototype.onClose;
    /** @type {?} */
    PngPopupDialogComponent.prototype.onAction;
    /** @type {?} */
    PngPopupDialogComponent.prototype.dlgOptions$;
    /** @type {?} */
    PngPopupDialogComponent.prototype.templateNames;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL3ByaW1lbmcvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wb3B1cC9jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3RHLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxVQUFVLENBQUM7QUFDdkMsT0FBTyxFQUErQixVQUFVLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDbkUsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUN0QyxPQUFPLEVBQWEsRUFBRSxFQUFDLE1BQU0sTUFBTSxDQUFDO0FBQ3BDLE9BQU8sRUFBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3RELE9BQU8sRUFBQywwQkFBMEIsRUFBQyxNQUFNLFlBQVksQ0FBQztBQUd0RDtJQU02QyxtREFBYTtJQU4xRDtRQUFBLHFFQXlFQztRQTdEVyxhQUFPLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUNsQyxjQUFRLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUk3QyxtQkFBYSxHQUFHO1lBQ2QsTUFBTSxFQUFFLFFBQVE7WUFDaEIsT0FBTyxFQUFFLFNBQVM7WUFDbEIsTUFBTSxFQUFFLFFBQVE7U0FDakIsQ0FBQzs7SUFvREosQ0FBQztJQWxEQyxzQkFDSSw0Q0FBTzs7Ozs7UUFEWCxVQUNZLE9BQU87WUFDakIsSUFBSSxDQUFDLFdBQVcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDekQsQ0FBQzs7O09BQUE7Ozs7SUFFRCwwQ0FBUTs7O0lBQVI7UUFBQSxpQkFPQztRQU5DLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDO2FBQ3JELElBQUksQ0FDSCxNQUFNLENBQUMsVUFBQSxLQUFLLElBQUksT0FBQSxDQUFDLENBQUMsS0FBSyxFQUFQLENBQU8sQ0FBQyxFQUN4QixHQUFHLENBQUMsVUFBQSxPQUFPLElBQUksT0FBQSxLQUFJLENBQUMsaUJBQWlCLENBQUMsT0FBTyxDQUFDLEVBQS9CLENBQStCLENBQUMsRUFDL0MsU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FDM0IsQ0FBQztJQUNOLENBQUM7Ozs7O0lBRUQsbURBQWlCOzs7O0lBQWpCLFVBQWtCLE9BQU87O1lBQ2pCLEdBQUcsd0JBQ0osMEJBQTBCLElBQzdCLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTSxFQUNuQixPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sSUFDbEIsT0FBTyxDQUNYO1FBQ0QsSUFBSSxPQUFPLENBQUMsZ0JBQWdCLElBQUksT0FBTyxDQUFDLGVBQWUsRUFBRTtZQUN2RCxHQUFHLENBQUMsWUFBWSx3QkFDWCxHQUFHLENBQUMsWUFBWSxJQUFJLEVBQUUsSUFDekIsWUFBWSxFQUFFLENBQUcsT0FBTyxDQUFDLGdCQUFnQixJQUFJLElBQUksUUFBSSxFQUNyRCxXQUFXLEVBQUUsQ0FBRyxPQUFPLENBQUMsZUFBZSxJQUFJLElBQUksUUFBSSxHQUNwRCxDQUFDO1NBQ0g7UUFDRCxPQUFPLEdBQUcsQ0FBQztJQUNiLENBQUM7Ozs7OztJQUVELDJDQUFTOzs7OztJQUFULFVBQVUsR0FBRyxFQUFFLE9BQU87UUFDcEIsaUJBQU0sU0FBUyxZQUFDLFFBQVEsRUFBRTtZQUN4QixLQUFLLEVBQUUsT0FBTztZQUNkLEtBQUssRUFBRSxHQUFHO1lBQ1YsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPO1NBQ3pCLENBQUMsQ0FBQztJQUNMLENBQUM7Ozs7OztJQUVELDBDQUFROzs7OztJQUFSLFVBQVMsR0FBRyxFQUFFLE9BQU87UUFDbkIsSUFBSSxJQUFJLENBQUMsUUFBUSxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUNsQyxLQUFLLEVBQUUsT0FBTztZQUNkLEtBQUssRUFBRSxHQUFHO1lBQ1YsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPO1NBQ3pCLENBQUMsRUFBRTtZQUNGLE9BQU87U0FDUjtRQUNELFdBQVcsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEtBQUssRUFBRSxFQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUMsQ0FBQyxDQUFDO0lBQ3pELENBQUM7O2dCQXZFRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGtCQUFrQjtvQkFDNUIscWhGQUF1QjtvQkFFdkIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O2lCQUNoRDs7O3lCQUdFLEtBQUs7MEJBQ0wsS0FBSzsyQkFDTCxLQUFLOzBCQUVMLE1BQU07MkJBQ04sTUFBTTswQkFVTixLQUFLOztJQWtEUiw4QkFBQztDQUFBLEFBekVELENBTTZDLGFBQWEsR0FtRXpEO1NBbkVZLHVCQUF1Qjs7O0lBRWxDLHlDQUF3Qjs7SUFDeEIsMENBQThCOztJQUM5QiwyQ0FBd0M7O0lBRXhDLDBDQUE0Qzs7SUFDNUMsMkNBQTZDOztJQUU3Qyw4Q0FBeUM7O0lBRXpDLGdEQUlFIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkluaXQsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Jhc2VDb21wb25lbnR9IGZyb20gJ0Blci9jb3JlJztcbmltcG9ydCB7RHluYUNvbnRlbnQsIFBvcHVwRGlhbG9nUHJvcCwgU3RhdGVOYW1lc30gZnJvbSAnQGVyL3R5cGVzJztcbmltcG9ydCB7U3RhdGVzVXRpbHN9IGZyb20gJ0Blci91dGlscyc7XG5pbXBvcnQge09ic2VydmFibGUsIG9mfSBmcm9tICdyeGpzJztcbmltcG9ydCB7ZmlsdGVyLCBtYXAsIHRha2VVbnRpbH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHtERUZBVUxUX1BPUFVQX0RJQUxPR19QUk9QU30gZnJvbSAnLi9kZWZhdWx0cyc7XG5cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG5nLXBvcHVwLWRpYWxvZycsXG4gIHRlbXBsYXRlVXJsOiAndHBsLmh0bWwnLFxuICBzdHlsZVVybHM6IFsnc3R5bGVzLnNjc3MnXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgUG5nUG9wdXBEaWFsb2dDb21wb25lbnQgZXh0ZW5kcyBCYXNlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBASW5wdXQoKSBoZWFkZXI6IHN0cmluZztcbiAgQElucHV0KCkgY29udGVudDogRHluYUNvbnRlbnQ7XG4gIEBJbnB1dCgpIGNhbkNsb3NlOiAoY29udGV4dCkgPT4gYm9vbGVhbjtcblxuICBAT3V0cHV0KCkgb25DbG9zZSA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuICBAT3V0cHV0KCkgb25BY3Rpb24gPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBkbGdPcHRpb25zJDogT2JzZXJ2YWJsZTxQb3B1cERpYWxvZ1Byb3A+O1xuXG4gIHRlbXBsYXRlTmFtZXMgPSB7XG4gICAgaGVhZGVyOiAnaGVhZGVyJyxcbiAgICBjb250ZW50OiAnY29udGVudCcsXG4gICAgZm9vdGVyOiAnZm9vdGVyJ1xuICB9O1xuXG4gIEBJbnB1dCgpXG4gIHNldCBvcHRpb25zKG9wdGlvbnMpIHtcbiAgICB0aGlzLmRsZ09wdGlvbnMkID0gb2YodGhpcy5yZXNvbHZlRGxnT3B0aW9ucyhvcHRpb25zKSk7XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLmRsZ09wdGlvbnMkID0gU3RhdGVzVXRpbHMub2JzZXJ2ZShTdGF0ZU5hbWVzLnBvcHVwKVxuICAgICAgLnBpcGUoXG4gICAgICAgIGZpbHRlcihzdGF0ZSA9PiAhIXN0YXRlKSxcbiAgICAgICAgbWFwKG9wdGlvbnMgPT4gdGhpcy5yZXNvbHZlRGxnT3B0aW9ucyhvcHRpb25zKSksXG4gICAgICAgIHRha2VVbnRpbCh0aGlzLmRlc3Ryb3llZCQpXG4gICAgICApO1xuICB9XG5cbiAgcmVzb2x2ZURsZ09wdGlvbnMob3B0aW9ucyk6IFBvcHVwRGlhbG9nUHJvcCB7XG4gICAgY29uc3Qgb3B0ID0ge1xuICAgICAgLi4uREVGQVVMVF9QT1BVUF9ESUFMT0dfUFJPUFMsXG4gICAgICBoZWFkZXI6IHRoaXMuaGVhZGVyLFxuICAgICAgY29udGVudDogdGhpcy5jb250ZW50LFxuICAgICAgLi4ub3B0aW9uc1xuICAgIH07XG4gICAgaWYgKG9wdGlvbnMuY29udGVudE1heEhlaWdodCB8fCBvcHRpb25zLmNvbnRlbnRNYXhXaWR0aCkge1xuICAgICAgb3B0LmNvbnRlbnRTdHlsZSA9IHtcbiAgICAgICAgLi4ub3B0LmNvbnRlbnRTdHlsZSB8fCB7fSxcbiAgICAgICAgJ21heC1oZWlnaHQnOiBgJHtvcHRpb25zLmNvbnRlbnRNYXhIZWlnaHQgfHwgMzAwMH1weGAsXG4gICAgICAgICdtYXgtd2lkdGgnOiBgJHtvcHRpb25zLmNvbnRlbnRNYXhXaWR0aCB8fCAzMDAwfXB4YFxuICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIG9wdDtcbiAgfVxuXG4gIHNob3dFdmVudChkbGcsIG9wdGlvbnMpIHtcbiAgICBzdXBlci5lbWl0RXZlbnQoJ29uU2hvdycsIHtcbiAgICAgIHNjb3BlOiBvcHRpb25zLFxuICAgICAgZXZlbnQ6IGRsZyxcbiAgICAgIGNvbnRleHQ6IG9wdGlvbnMuY29udGV4dFxuICAgIH0pO1xuICB9XG5cbiAgY2xvc2VEbGcoZGxnLCBvcHRpb25zKSB7XG4gICAgaWYgKHRoaXMuY2FuQ2xvc2UgJiYgIXRoaXMuY2FuQ2xvc2Uoe1xuICAgICAgc2NvcGU6IG9wdGlvbnMsXG4gICAgICBldmVudDogZGxnLFxuICAgICAgY29udGV4dDogb3B0aW9ucy5jb250ZXh0XG4gICAgfSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgU3RhdGVzVXRpbHMuY3JlYXRlKFN0YXRlTmFtZXMucG9wdXAsIHt2aXNpYmxlOiBmYWxzZX0pO1xuICB9XG5cbn1cbiJdfQ==