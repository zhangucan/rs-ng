/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, HostBinding, HostListener, Input, TemplateRef } from '@angular/core';
import { BaseComponent } from '@er/core';
import { PngTableComponent } from '../table/component';
var PngTableBodyCellComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PngTableBodyCellComponent, _super);
    function PngTableBodyCellComponent(pngTable) {
        var _this = _super.call(this) || this;
        _this.pngTable = pngTable;
        return _this;
    }
    Object.defineProperty(PngTableBodyCellComponent.prototype, "width", {
        get: /**
         * @return {?}
         */
        function () {
            return this.column.width;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PngTableBodyCellComponent.prototype, "height", {
        get: /**
         * @return {?}
         */
        function () {
            return this.column.height;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?=} event
     * @return {?}
     */
    PngTableBodyCellComponent.prototype.cellContext = /**
     * @param {?=} event
     * @return {?}
     */
    function (event) {
        return {
            $event: event,
            $id: this.pngTable.$props.$id,
            column: this.column,
            row: this.row,
            rowIndex: this.rowIndex,
            pngTable: this.pngTable
        };
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PngTableBodyCellComponent.prototype.onMouseEnter = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.column.onMouseEnter) {
            this.column.onMouseEnter.call(this.pngTable, this.cellContext(event));
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PngTableBodyCellComponent.prototype.onMouseOver = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.column.onMouseOver) {
            this.column.onMouseOver.call(this.pngTable, this.cellContext(event));
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PngTableBodyCellComponent.prototype.onMouseOut = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.column.onMouseOut) {
            this.column.onMouseOut.call(this.pngTable, this.cellContext(event));
        }
    };
    PngTableBodyCellComponent.decorators = [
        { type: Component, args: [{
                    selector: '[png-table-body-cell]',
                    template: "\n    <ng-container *ngIf=\"customerTpl;else default\">\n      <ng-container *ngTemplateOutlet=\"customerTpl;context:cellContext\"></ng-container>\n    </ng-container>\n    <ng-template #default>\n      <png-table-body-cell-content\n        [customerTpl]=\"dataCellTpl\"\n        [column]=\"column\"\n        [row]=\"row\"\n        [rowIndex]=\"rowIndex\"\n      ></png-table-body-cell-content>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    PngTableBodyCellComponent.ctorParameters = function () { return [
        { type: PngTableComponent }
    ]; };
    PngTableBodyCellComponent.propDecorators = {
        column: [{ type: Input }],
        row: [{ type: Input }],
        rowIndex: [{ type: Input }],
        dataCellTpl: [{ type: Input }],
        width: [{ type: HostBinding, args: ['style.width',] }],
        height: [{ type: HostBinding, args: ['style.height',] }],
        onMouseEnter: [{ type: HostListener, args: ['mouseenter', ['$event'],] }],
        onMouseOver: [{ type: HostListener, args: ['mouseover', ['$event'],] }],
        onMouseOut: [{ type: HostListener, args: ['mouseout', ['$event'],] }]
    };
    return PngTableBodyCellComponent;
}(BaseComponent));
export { PngTableBodyCellComponent };
if (false) {
    /** @type {?} */
    PngTableBodyCellComponent.prototype.column;
    /** @type {?} */
    PngTableBodyCellComponent.prototype.row;
    /** @type {?} */
    PngTableBodyCellComponent.prototype.rowIndex;
    /** @type {?} */
    PngTableBodyCellComponent.prototype.dataCellTpl;
    /** @type {?} */
    PngTableBodyCellComponent.prototype.pngTable;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL3ByaW1lbmcvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90YWJsZS9jb21wb25lbnQvYm9keS1jZWxsL2NvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ2hILE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxVQUFVLENBQUM7QUFFdkMsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sb0JBQW9CLENBQUM7QUFFckQ7SUFpQitDLHFEQUFhO0lBVTFELG1DQUFtQixRQUEyQjtRQUE5QyxZQUNFLGlCQUFPLFNBQ1I7UUFGa0IsY0FBUSxHQUFSLFFBQVEsQ0FBbUI7O0lBRTlDLENBQUM7SUFFRCxzQkFDSSw0Q0FBSzs7OztRQURUO1lBRUUsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUMzQixDQUFDOzs7T0FBQTtJQUVELHNCQUNJLDZDQUFNOzs7O1FBRFY7WUFFRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO1FBQzVCLENBQUM7OztPQUFBOzs7OztJQUVELCtDQUFXOzs7O0lBQVgsVUFBWSxLQUFNO1FBQ2hCLE9BQU87WUFDTCxNQUFNLEVBQUUsS0FBSztZQUNiLEdBQUcsRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHO1lBQzdCLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTTtZQUNuQixHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUc7WUFDYixRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7WUFDdkIsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRO1NBQ3hCLENBQUM7SUFDSixDQUFDOzs7OztJQUdELGdEQUFZOzs7O0lBRFosVUFDYSxLQUFLO1FBQ2hCLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQUU7WUFDNUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1NBQ3ZFO0lBQ0gsQ0FBQzs7Ozs7SUFHRCwrQ0FBVzs7OztJQURYLFVBQ1ksS0FBSztRQUNmLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUU7WUFDM0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1NBQ3RFO0lBQ0gsQ0FBQzs7Ozs7SUFHRCw4Q0FBVTs7OztJQURWLFVBQ1csS0FBSztRQUNkLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUU7WUFDMUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1NBQ3JFO0lBQ0gsQ0FBQzs7Z0JBdkVGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsdUJBQXVCO29CQUNqQyxRQUFRLEVBQUUsZ1pBV1Q7b0JBQ0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEOzs7O2dCQWpCTyxpQkFBaUI7Ozt5QkFxQnRCLEtBQUs7c0JBRUwsS0FBSzsyQkFFTCxLQUFLOzhCQUVMLEtBQUs7d0JBTUwsV0FBVyxTQUFDLGFBQWE7eUJBS3pCLFdBQVcsU0FBQyxjQUFjOytCQWdCMUIsWUFBWSxTQUFDLFlBQVksRUFBRSxDQUFDLFFBQVEsQ0FBQzs4QkFPckMsWUFBWSxTQUFDLFdBQVcsRUFBRSxDQUFDLFFBQVEsQ0FBQzs2QkFPcEMsWUFBWSxTQUFDLFVBQVUsRUFBRSxDQUFDLFFBQVEsQ0FBQzs7SUFNdEMsZ0NBQUM7Q0FBQSxBQXhFRCxDQWlCK0MsYUFBYSxHQXVEM0Q7U0F2RFkseUJBQXlCOzs7SUFFcEMsMkNBQXFDOztJQUVyQyx3Q0FBbUI7O0lBRW5CLDZDQUEwQjs7SUFFMUIsZ0RBQXVDOztJQUUzQiw2Q0FBa0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBIb3N0TGlzdGVuZXIsIElucHV0LCBUZW1wbGF0ZVJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Jhc2VDb21wb25lbnR9IGZyb20gJ0Blci9jb3JlJztcbmltcG9ydCB7UG5nVGFibGVDb2x1bW5Qcm9wc30gZnJvbSAnLi4vLi4vdHlwZXMnO1xuaW1wb3J0IHtQbmdUYWJsZUNvbXBvbmVudH0gZnJvbSAnLi4vdGFibGUvY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnW3BuZy10YWJsZS1ib2R5LWNlbGxdJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiY3VzdG9tZXJUcGw7ZWxzZSBkZWZhdWx0XCI+XG4gICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwiY3VzdG9tZXJUcGw7Y29udGV4dDpjZWxsQ29udGV4dFwiPjwvbmctY29udGFpbmVyPlxuICAgIDwvbmctY29udGFpbmVyPlxuICAgIDxuZy10ZW1wbGF0ZSAjZGVmYXVsdD5cbiAgICAgIDxwbmctdGFibGUtYm9keS1jZWxsLWNvbnRlbnRcbiAgICAgICAgW2N1c3RvbWVyVHBsXT1cImRhdGFDZWxsVHBsXCJcbiAgICAgICAgW2NvbHVtbl09XCJjb2x1bW5cIlxuICAgICAgICBbcm93XT1cInJvd1wiXG4gICAgICAgIFtyb3dJbmRleF09XCJyb3dJbmRleFwiXG4gICAgICA+PC9wbmctdGFibGUtYm9keS1jZWxsLWNvbnRlbnQ+XG4gIGAsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuXG5leHBvcnQgY2xhc3MgUG5nVGFibGVCb2R5Q2VsbENvbXBvbmVudCBleHRlbmRzIEJhc2VDb21wb25lbnQge1xuXG4gIEBJbnB1dCgpIGNvbHVtbjogUG5nVGFibGVDb2x1bW5Qcm9wcztcblxuICBASW5wdXQoKSByb3c6IHt9W107XG5cbiAgQElucHV0KCkgcm93SW5kZXg6IG51bWJlcjtcblxuICBASW5wdXQoKSBkYXRhQ2VsbFRwbDogVGVtcGxhdGVSZWY8YW55PjtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgcG5nVGFibGU6IFBuZ1RhYmxlQ29tcG9uZW50KSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIEBIb3N0QmluZGluZygnc3R5bGUud2lkdGgnKVxuICBnZXQgd2lkdGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuY29sdW1uLndpZHRoO1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdzdHlsZS5oZWlnaHQnKVxuICBnZXQgaGVpZ2h0KCkge1xuICAgIHJldHVybiB0aGlzLmNvbHVtbi5oZWlnaHQ7XG4gIH1cblxuICBjZWxsQ29udGV4dChldmVudD8pIHtcbiAgICByZXR1cm4ge1xuICAgICAgJGV2ZW50OiBldmVudCxcbiAgICAgICRpZDogdGhpcy5wbmdUYWJsZS4kcHJvcHMuJGlkLFxuICAgICAgY29sdW1uOiB0aGlzLmNvbHVtbixcbiAgICAgIHJvdzogdGhpcy5yb3csXG4gICAgICByb3dJbmRleDogdGhpcy5yb3dJbmRleCxcbiAgICAgIHBuZ1RhYmxlOiB0aGlzLnBuZ1RhYmxlXG4gICAgfTtcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ21vdXNlZW50ZXInLCBbJyRldmVudCddKVxuICBvbk1vdXNlRW50ZXIoZXZlbnQpIHtcbiAgICBpZiAodGhpcy5jb2x1bW4ub25Nb3VzZUVudGVyKSB7XG4gICAgICB0aGlzLmNvbHVtbi5vbk1vdXNlRW50ZXIuY2FsbCh0aGlzLnBuZ1RhYmxlLCB0aGlzLmNlbGxDb250ZXh0KGV2ZW50KSk7XG4gICAgfVxuICB9XG5cbiAgQEhvc3RMaXN0ZW5lcignbW91c2VvdmVyJywgWyckZXZlbnQnXSlcbiAgb25Nb3VzZU92ZXIoZXZlbnQpIHtcbiAgICBpZiAodGhpcy5jb2x1bW4ub25Nb3VzZU92ZXIpIHtcbiAgICAgIHRoaXMuY29sdW1uLm9uTW91c2VPdmVyLmNhbGwodGhpcy5wbmdUYWJsZSwgdGhpcy5jZWxsQ29udGV4dChldmVudCkpO1xuICAgIH1cbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ21vdXNlb3V0JywgWyckZXZlbnQnXSlcbiAgb25Nb3VzZU91dChldmVudCkge1xuICAgIGlmICh0aGlzLmNvbHVtbi5vbk1vdXNlT3V0KSB7XG4gICAgICB0aGlzLmNvbHVtbi5vbk1vdXNlT3V0LmNhbGwodGhpcy5wbmdUYWJsZSwgdGhpcy5jZWxsQ29udGV4dChldmVudCkpO1xuICAgIH1cbiAgfVxufVxuIl19