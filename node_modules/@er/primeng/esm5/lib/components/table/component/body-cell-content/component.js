/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, Input, QueryList, ViewChildren } from '@angular/core';
import { BaseComponent, DataFieldUtils, SelectorDirective } from '@er/core';
import { DataAttr, DataType, OverlayType } from '@er/types';
import { CommonsUtils } from '@er/utils';
import { PngTableBodyCellComponent } from '../body-cell/component';
import { PngTableComponent } from '../table/component';
var PngTableBodyCellContentComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PngTableBodyCellContentComponent, _super);
    function PngTableBodyCellContentComponent(pngTable, cell) {
        var _this = _super.call(this) || this;
        _this.pngTable = pngTable;
        _this.cell = cell;
        _this.DATA_ATTR = DataAttr;
        _this.DATA_TYPE = DataType;
        _this.OVERLAY_TYPE = OverlayType;
        return _this;
    }
    Object.defineProperty(PngTableBodyCellContentComponent.prototype, "cellContent", {
        get: /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (this.column.dataAttr === DataAttr.BUTTONS) {
                /** @type {?} */
                var btns = this.column.cellContent;
                btns = CommonsUtils.getArrayValue(btns);
                btns = btns.filter(function (btn) { return !btn.show || btn.show === true || btn.show.method === true || (CommonsUtils.isFunction(btn.show.method) && (/** @type {?} */ ((btn.show.method).call(_this, _this.cellContext())))); });
                return btns;
            }
            /** @type {?} */
            var content = this.getValue(this.column.cellContent || this.row[this.column.key]);
            if (CommonsUtils.isEmpty(content) && this.column.defaultCellContent !== undefined) {
                content = this.column.defaultCellContent;
            }
            if (this.column.contentKey) {
                content = CommonsUtils.get(content, this.column.contentKey);
                if (CommonsUtils.isArray(content)) {
                    content = (/** @type {?} */ (content.join(',')));
                }
            }
            else if (this.column.format) {
                CommonsUtils.format(content, this.column.format);
            }
            else if (CommonsUtils.isFunction(this.column.formatter)) {
                content = ((/** @type {?} */ (this.column.formatter)))(content);
            }
            else if (this.column.formatter || CommonsUtils.isTemplateStr(content)) {
                content = CommonsUtils.templateStr(((/** @type {?} */ (this.column.formatter))) || content, this.row);
            }
            else if (CommonsUtils.isJson(content)) {
                content = DataFieldUtils.getFieldDisplayContent(content, this.column.dataField);
            }
            if (CommonsUtils.isString(content) && this.column.maxLength && content.length > this.column.maxLength) {
                content = content.substr(0, this.column.maxLength) + '...';
            }
            if (content === true) {
                return '是';
            }
            else if (content === false) {
                return '否';
            }
            return content;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PngTableBodyCellContentComponent.prototype, "cellIcon", {
        get: /**
         * @return {?}
         */
        function () {
            return this.getValue(this.column.cellIcon);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PngTableBodyCellContentComponent.prototype, "toolTip", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var toolTip = this.getValue(this.column.toolTip);
            if (!toolTip && this.column.maxLength && this.row[this.column.key] && this.row[this.column.key].length > this.column.maxLength) {
                return this.row[this.column.key];
            }
            return toolTip;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PngTableBodyCellContentComponent.prototype, "cellClass", {
        get: /**
         * @return {?}
         */
        function () {
            return CommonsUtils.getValue(this.column.cellStyleClass, this.cellContext());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PngTableBodyCellContentComponent.prototype, "cellStyle", {
        get: /**
         * @return {?}
         */
        function () {
            return CommonsUtils.getValue(this.column.cellStyle, this.cellContext());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PngTableBodyCellContentComponent.prototype, "routLink", {
        get: /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (!this.column.routLink) {
                return;
            }
            /** @type {?} */
            var routerLink = this.column.routLink;
            if (CommonsUtils.isString(routerLink)) {
                routerLink = [routerLink];
            }
            /** @type {?} */
            var routeParams;
            if (this.column.routParam) {
                if (CommonsUtils.isFunction(this.column.routParam)) {
                    routeParams = ((/** @type {?} */ (this.column.routParam))).call(this.pngTable, this.column, this.row) || [];
                }
                else if (CommonsUtils.isArray(this.column.routParam)) {
                    routeParams = ((/** @type {?} */ (this.column.routParam))).map(function (param) { return _this.row[param]; }) || [];
                }
                else if (CommonsUtils.isString(this.column.routParam)) {
                    routeParams = [this.row[(/** @type {?} */ (this.column.routParam))]] || [];
                }
                else if (this.pngTable.$props.dataKey) {
                    routeParams = [this.row[this.pngTable.$props.dataKey]] || [];
                }
            }
            if (routeParams) {
                routerLink = tslib_1.__spread((/** @type {?} */ (routerLink)), routeParams);
            }
            return routerLink;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PngTableBodyCellContentComponent.prototype, "queryParam", {
        get: /**
         * @return {?}
         */
        function () {
            var _this = this;
            var _a;
            if (!this.column.routQueryParams) {
                return;
            }
            if (CommonsUtils.isFunction(this.column.routQueryParams)) {
                return ((/** @type {?} */ (this.column.routQueryParams))).call(this.pngTable, this.column, this.row);
            }
            else if (CommonsUtils.isArray(this.column.routQueryParams)) {
                /** @type {?} */
                var params_1 = {};
                ((/** @type {?} */ (this.column.routQueryParams))).map(function (param) { return params_1[param] = _this.row[param]; });
                return params_1;
            }
            else if (CommonsUtils.isString(this.column.routQueryParams)) {
                return _a = {}, _a[(/** @type {?} */ (this.column.routQueryParams))] = this.row[(/** @type {?} */ (this.column.routQueryParams))], _a;
            }
            return undefined;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} icon
     * @return {?}
     */
    PngTableBodyCellContentComponent.prototype.iconClass = /**
     * @param {?} icon
     * @return {?}
     */
    function (icon) {
        if (icon && icon.trim().startsWith('fa-')) {
            return "fa " + icon;
        }
        return icon;
    };
    /**
     * @param {?} attr
     * @return {?}
     */
    PngTableBodyCellContentComponent.prototype.hasAttr = /**
     * @param {?} attr
     * @return {?}
     */
    function (attr) {
        return this.column.dataAttr === attr ||
            (CommonsUtils.isArray(this.column.dataAttr) && ((/** @type {?} */ (this.column.dataAttr))).indexOf(attr) >= 0);
    };
    /**
     * @param {?} overlay
     * @param {?} index
     * @param {?=} event
     * @return {?}
     */
    PngTableBodyCellContentComponent.prototype.overlayContext = /**
     * @param {?} overlay
     * @param {?} index
     * @param {?=} event
     * @return {?}
     */
    function (overlay, index, event) {
        return tslib_1.__assign({}, this.cellContext(event), { type: overlay.type, content: this.getValue(overlay.content), context: overlay.context, styleClass: this.getValue(overlay.styleClass), style: this.getValue(overlay.style), overlayStyleClass: this.getValue(overlay.overlayStyleClass), overlayStyle: this.getValue(overlay.overlayStyle), id: "overlay-cell-" + this.column.key + "-" + index });
    };
    /**
     * @param {?} content
     * @return {?}
     */
    PngTableBodyCellContentComponent.prototype.treeContent = /**
     * @param {?} content
     * @return {?}
     */
    function (content) {
        if (CommonsUtils.isArray(content)) {
            return '共' + ((/** @type {?} */ (content))).length + '项';
        }
        else if (CommonsUtils.isJson(content)) {
            return '共' + Object.keys(content).length + '项';
        }
        else {
            return content;
        }
    };
    /**
     * @param {?} content
     * @param {?=} event
     * @return {?}
     */
    PngTableBodyCellContentComponent.prototype.overlayTreeContext = /**
     * @param {?} content
     * @param {?=} event
     * @return {?}
     */
    function (content, event) {
        return tslib_1.__assign({}, this.cellContext(event), { type: OverlayType.TREE, content: content });
    };
    /**
     * @param {?=} event
     * @return {?}
     */
    PngTableBodyCellContentComponent.prototype.cellContext = /**
     * @param {?=} event
     * @return {?}
     */
    function (event) {
        return this.cell.cellContext(event);
    };
    /**
     * @return {?}
     */
    PngTableBodyCellContentComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.column.overlays) {
            ((/** @type {?} */ (this.column.overlays))).filter(function (overlay) { return overlay.type === OverlayType.MENU; })
                .forEach(function (overlay) {
                if (overlay.content['menuItem'].command) {
                    /** @type {?} */
                    var command_1 = overlay.content['menuItem'].command;
                    overlay.content['menuItem'].command = function (event) { return command_1.call(_this, _this.cellContext(event)); };
                }
            });
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PngTableBodyCellContentComponent.prototype.cellClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.preventDefault();
        if (this.column.onClick) {
            this.column.onClick.call(this.pngTable, this.cellContext(event));
        }
    };
    /**
     * @param {?} event
     * @param {?} tipText
     * @return {?}
     */
    PngTableBodyCellContentComponent.prototype.toggleTip = /**
     * @param {?} event
     * @param {?} tipText
     * @return {?}
     */
    function (event, tipText) {
        if (tipText) {
            this.pngTable.showOverlay((/** @type {?} */ ({
                $event: event,
                content: tipText,
                styleClass: 'alert alert-info',
                style: {
                    overflow: 'auto',
                    width: '300px',
                    height: '300px'
                }
            })));
        }
    };
    /**
     * @private
     * @param {?} target
     * @return {?}
     */
    PngTableBodyCellContentComponent.prototype.getValue = /**
     * @private
     * @param {?} target
     * @return {?}
     */
    function (target) {
        return CommonsUtils.getValue(target, this.cellContext()) || '';
    };
    PngTableBodyCellContentComponent.decorators = [
        { type: Component, args: [{
                    selector: 'png-table-body-cell-content',
                    template: "<ng-container *ngIf=\"customerTpl;else default\">\n  <ng-container *ngTemplateOutlet=\"customerTpl;context:cellContext()\"></ng-container>\n</ng-container>\n<ng-template #default>\n  <ng-container *ngIf=\"column.overlays\">\n    <ng-container *ngFor=\"let overlay of column.overlays; index as i\">\n      <ng-container [ngSwitch]=\"overlay.type\">\n        <ng-container *ngSwitchCase=\"OVERLAY_TYPE.CHART\">\n          <i [ngClass]=\"overlay.icon || 'fa fa-bar-chart text-primary'\" class=\"pull-right\"\n             title=\"\u663E\u793A\u56FE\u5F62\" (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"OVERLAY_TYPE.TABLE\">\n          <i [ngClass]=\"overlay.icon || 'fa fa-eye text-primary'\" class=\"pull-right\"\n             title=\"\u663E\u793A\u8868\u683C\" (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"OVERLAY_TYPE.PANEL\">\n          <i [ngClass]=\"overlay.icon || 'fa fa-eye text-primary'\" class=\"pull-right\"\n             title=\"\u663E\u793A\u66F4\u591A\u4FE1\u606F\" (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"OVERLAY_TYPE.MENU\">\n          <i [ngClass]=\"overlay.icon || 'fa fa-arrow-circle-down text-primary'\" class=\"pull-right\"\n             title=\"\u663E\u793A\u83DC\u5355\" (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"OVERLAY_TYPE.FRAME\">\n          <i [ngClass]=\"overlay.icon || 'fa fa-play text-primary'\"\n             title=\"\u663E\u793A\u66F4\u591A\u5185\u5BB9\" (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n        </ng-container>\n        <ng-container *ngSwitchCase=\"OVERLAY_TYPE.COMPONENT\">\n          <i [ngClass]=\"overlay.icon || 'fa fa-eye text-primary'\"\n             title=\"\u663E\u793A\u66F4\u591A\u5185\u5BB9\" (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n  <ng-container [ngSwitch]=\"column.dataAttr\">\n    <ng-container *ngSwitchCase=\"DATA_ATTR.IMAGE\">\n      <png-image [imageStyleClass]=\"cellClass\"\n                 [imageStyle]=\"cellStyle\"\n                 size=\"small\"\n                 [fileId]=\"cellContent\"\n                 [showDescription]=\"false\"\n      >\n      </png-image>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"DATA_ATTR.TAG\">\n        <span erTag [pTooltip]=\"toolTip\"\n              tooltipPosition=\"top\"\n              class=\"pull-right\"\n              [ngClass]=\"cellClass\"\n              [ngStyle]=\"cellStyle\">{{cellContent}}</span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"DATA_ATTR.URL\">\n      <a [pTooltip]=\"toolTip\"\n         tooltipPosition=\"top\"\n         [href]=\"routLink\"\n         [ngClass]=\"cellClass\"\n         [ngStyle]=\"cellStyle\"\n         target=\"_blank\">{{cellContent}}</a>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"DATA_ATTR.COLOR\">\n      <span [ngClass]=\"cellContent | lowercase\"></span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"DATA_ATTR.TREE\">\n      <span class=\"pull-right\">\n        {{treeContent(cellContent)}} <i class=\"fa fa-tree blue\" title=\"\u67E5\u770B\u5185\u5BB9\"\n                                        (click)=\"pngTable.showOverlay(overlayTreeContext(cellContent,$event))\"></i>\n      </span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"DATA_ATTR.ICON\">\n      <span class=\"pull-right\"><i [ngClass]=\"iconClass(cellContent)\"></i></span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"DATA_ATTR.DATE\">\n      <span>{{cellContent | date: 'yyyy-MM-dd'}}</span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"DATA_ATTR.TIME\">\n      <span>{{cellContent | date: 'HH:mm:ss'}}</span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"DATA_ATTR.DATE_TIME\">\n      <span>{{cellContent | date: 'yyyy-MM-dd HH:mm:ss'}}</span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"DATA_ATTR.UP_TO_NOW\">\n      <ng-container *ngIf=\"cellContent\">\n       <span erTag class=\"pull-right date-to-now\" [pTooltip]=\"cellContent\" tooltipPosition=\"top\">\n        {{cellContent | erUpToNow}}\n      </span>\n        <i class=\"fa fa-clock-o pull-right\"></i>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"DATA_ATTR.BADGE\">\n      <span [pTooltip]=\"toolTip\"\n            tooltipPosition=\"top\"\n            class='pull-right badge'\n            [ngClass]=\"cellClass\"\n            [ngStyle]=\"cellStyle\"\n            [innerHTML]=\"cellContent\"></span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"DATA_ATTR.CODE\">\n      <span [pTooltip]=\"toolTip\"\n            tooltipPosition=\"top\"\n            class=\"pull-right data-code\"\n            [ngClass]=\"cellClass\"\n            [ngStyle]=\"cellStyle\"\n            [innerHTML]=\"cellContent\"></span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"DATA_ATTR.PERCENT\">\n      <span [innerHTML]=\"cellContent|erPercent\"></span>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"DATA_ATTR.BUTTONS\">\n      <png-buttons [btns]=\"cellContent\" [context]=\"cellContext()\" [styleClass]=\"cellClass\"\n                   [style]=\"cellStyle\"></png-buttons>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n      <ng-container *ngIf=\"column.routLink || column.routParam\">\n        <a [pTooltip]=\"toolTip\" tooltipPosition=\"top\"\n           [ngClass]=\"cellClass\"\n           [ngStyle]=\"cellStyle\"\n           [routerLink]=\"routLink\" [queryParams]=\"queryParam\"\n           [innerHTML]=\"cellContent\"></a>\n      </ng-container>\n      <ng-container *ngIf=\"column.onClick\">\n        <a href=\"#\" [pTooltip]=\"toolTip\" tooltipPosition=\"top\"\n           [ngClass]=\"cellClass\"\n           [ngStyle]=\"cellStyle\"\n           (click)=\"cellClick($event)\"\n           [innerHTML]=\"cellContent\"></a>\n      </ng-container>\n      <ng-container *ngIf=\"!(column.routLink || column.routParam) && !column.onClick\">\n              <span [innerHTML]=\"cellContent\"\n                    [pTooltip]=\"toolTip\"\n                    tooltipPosition=\"top\"\n                    [ngClass]=\"cellClass\"\n                    [ngStyle]=\"cellStyle\"\n                    class=\"pull-right\"\n                    (click)=\"toggleTip($event, toolTip)\"\n              ></span>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</ng-template>\n",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    PngTableBodyCellContentComponent.ctorParameters = function () { return [
        { type: PngTableComponent },
        { type: PngTableBodyCellComponent }
    ]; };
    PngTableBodyCellContentComponent.propDecorators = {
        column: [{ type: Input }],
        row: [{ type: Input }],
        rowIndex: [{ type: Input }],
        selectors: [{ type: ViewChildren, args: [SelectorDirective,] }]
    };
    return PngTableBodyCellContentComponent;
}(BaseComponent));
export { PngTableBodyCellContentComponent };
if (false) {
    /** @type {?} */
    PngTableBodyCellContentComponent.prototype.DATA_ATTR;
    /** @type {?} */
    PngTableBodyCellContentComponent.prototype.DATA_TYPE;
    /** @type {?} */
    PngTableBodyCellContentComponent.prototype.OVERLAY_TYPE;
    /** @type {?} */
    PngTableBodyCellContentComponent.prototype.column;
    /** @type {?} */
    PngTableBodyCellContentComponent.prototype.row;
    /** @type {?} */
    PngTableBodyCellContentComponent.prototype.rowIndex;
    /** @type {?} */
    PngTableBodyCellContentComponent.prototype.selectors;
    /** @type {?} */
    PngTableBodyCellContentComponent.prototype.pngTable;
    /**
     * @type {?}
     * @private
     */
    PngTableBodyCellContentComponent.prototype.cell;
}
//# sourceMappingURL=data:application/json;base64,