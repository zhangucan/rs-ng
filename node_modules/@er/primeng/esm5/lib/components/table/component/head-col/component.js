/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';
import { BaseComponent } from '@er/core';
import { OverlayType } from '@er/types';
import { CommonsUtils } from '@er/utils';
import { PngTableComponent } from '../table/component';
var PngTableHeaderColComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PngTableHeaderColComponent, _super);
    function PngTableHeaderColComponent(pngTable, cd) {
        var _this = _super.call(this) || this;
        _this.pngTable = pngTable;
        _this.cd = cd;
        _this.OVERLAY_TYPE = OverlayType;
        _this.onFilterBtnClick = new EventEmitter();
        _this.onAggsBtnClick = new EventEmitter();
        return _this;
    }
    Object.defineProperty(PngTableHeaderColComponent.prototype, "colClass", {
        get: /**
         * @return {?}
         */
        function () {
            if (CommonsUtils.isFunction(this.column.colClass)) {
                return ((/** @type {?} */ (this.column.colClass))).call(this.pngTable, this.column);
            }
            else {
                return (/** @type {?} */ (this.column.colClass)) || '';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PngTableHeaderColComponent.prototype, "width", {
        get: /**
         * @return {?}
         */
        function () {
            return this.column.width;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PngTableHeaderColComponent.prototype, "colStyle", {
        get: /**
         * @return {?}
         */
        function () {
            if (CommonsUtils.isFunction(this.column.colStyle)) {
                return ((/** @type {?} */ (this.column.colStyle))).call(this.pngTable, this.column);
            }
            else {
                return (/** @type {?} */ (this.column.colStyle)) || '';
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PngTableHeaderColComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.column.headerOverlays) {
            ((/** @type {?} */ (this.column.headerOverlays))).filter(function (overlay) { return overlay.type === OverlayType.MENU; })
                .forEach(function (overlay) {
                if (overlay.content['menuItem'].command) {
                    /** @type {?} */
                    var command_1 = overlay.content['menuItem'].command;
                    overlay.content['menuItem'].command = function (event) { return command_1.call(_this, _this.headerContext(event)); };
                }
            });
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PngTableHeaderColComponent.prototype.filterClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.onFilterBtnClick.emit({
            event: event,
            column: this.column
        });
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PngTableHeaderColComponent.prototype.aggsClick = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.onAggsBtnClick.emit({
            $event: event,
            column: this.column
        });
    };
    /**
     * @param {?=} event
     * @return {?}
     */
    PngTableHeaderColComponent.prototype.headerContext = /**
     * @param {?=} event
     * @return {?}
     */
    function (event) {
        return {
            $event: event,
            $id: this.pngTable.$props.$id,
            column: this.column,
            pngTable: this.pngTable
        };
    };
    /**
     * @param {?} overlay
     * @param {?} index
     * @param {?=} event
     * @return {?}
     */
    PngTableHeaderColComponent.prototype.overlayContext = /**
     * @param {?} overlay
     * @param {?} index
     * @param {?=} event
     * @return {?}
     */
    function (overlay, index, event) {
        return {
            $event: event,
            type: overlay.type,
            content: CommonsUtils.getValue(overlay.content, this.headerContext(event)),
            context: overlay.context,
            styleClass: CommonsUtils.getValue(overlay.styleClass, this.headerContext(event)),
            style: CommonsUtils.getValue(overlay.style, this.headerContext(event)),
            overlayStyleClass: CommonsUtils.getValue(overlay.overlayStyleClass, this.headerContext(event)),
            overlayStyle: CommonsUtils.getValue(overlay.overlayStyle, this.headerContext(event)),
            id: "overlay-header-" + this.column.key + "-" + index
        };
    };
    PngTableHeaderColComponent.decorators = [
        { type: Component, args: [{
                    selector: '[png-table-header-col]',
                    template: "\n    <span *ngIf=\"!column.sortable\" [innerHTML]=\"column.label|erSafeHtml\"></span>\n    <span *ngIf=\"column.sortable\" title=\"\u6392\u5E8F\" [pSortableColumn]=\"column.key\" [innerHTML]=\"column.label|erSafeHtml\"></span>\n    <p-sortIcon *ngIf=\"column.sortable\" [field]=\"column.key\"></p-sortIcon>\n    <span *ngIf=\"column.filterable\" class=\"pull-right\">\n              <i class=\"fa fa-filter\" title=\"\u8F93\u5165\u67E5\u8BE2\u5185\u5BB9\" [ngClass]=\"{'ui-state-highlight': column.filters && column.filters.length>0}\"\n                 (click)=\"filterClick($event)\"></i>\n            </span>\n    <span *ngIf=\"column.aggable\" class=\"pull-right\">\n              <i class=\"fa fa-sum\" title=\"\u9009\u62E9\u7EDF\u8BA1\u65B9\u6CD5\" [ngClass]=\"{'ui-state-highlight': column.aggProps && column.aggProps.length>0}\"\n                 (click)=\"aggsClick($event)\"></i>\n            </span>\n    <ng-container *ngIf=\"column.headerOverlays\">\n      <ng-container *ngFor=\"let overlay of column.headerOverlays; index as i\">\n        <ng-container [ngSwitch]=\"overlay.type\">\n          <ng-container *ngSwitchCase=\"OVERLAY_TYPE.CHART\">\n            <i [ngClass]=\"overlay.icon || 'fa fa-bar-chart text-primary'\" class=\"pull-right\"\n               (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"OVERLAY_TYPE.TABLE\">\n            <i [ngClass]=\"overlay.icon || 'fa fa-eye text-primary'\" class=\"pull-right\"\n               (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"OVERLAY_TYPE.PANEL\">\n            <i [ngClass]=\"overlay.icon || 'fa fa-eye text-primary'\" class=\"pull-right\"\n               (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"OVERLAY_TYPE.MENU\">\n            <i [ngClass]=\"overlay.icon || 'fa fa-arrow-circle-down text-primary'\" class=\"pull-right\"\n               (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"OVERLAY_TYPE.FRAME\">\n            <i [ngClass]=\"overlay.icon || 'fa fa-play text-primary'\"\n               (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n          </ng-container>\n          <ng-container *ngSwitchCase=\"OVERLAY_TYPE.COMPONENT\">\n            <i [ngClass]=\"overlay.icon || 'fa fa-eye text-primary'\"\n               (click)=\"pngTable.showOverlay(overlayContext(overlay,i,$event))\"></i>\n          </ng-container>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    PngTableHeaderColComponent.ctorParameters = function () { return [
        { type: PngTableComponent },
        { type: ChangeDetectorRef }
    ]; };
    PngTableHeaderColComponent.propDecorators = {
        column: [{ type: Input }],
        onFilterBtnClick: [{ type: Output }],
        onAggsBtnClick: [{ type: Output }],
        colClass: [{ type: HostBinding, args: ['class',] }],
        width: [{ type: HostBinding, args: ['style.width',] }],
        colStyle: [{ type: HostBinding, args: ['style',] }]
    };
    return PngTableHeaderColComponent;
}(BaseComponent));
export { PngTableHeaderColComponent };
if (false) {
    /** @type {?} */
    PngTableHeaderColComponent.prototype.OVERLAY_TYPE;
    /** @type {?} */
    PngTableHeaderColComponent.prototype.column;
    /** @type {?} */
    PngTableHeaderColComponent.prototype.onFilterBtnClick;
    /** @type {?} */
    PngTableHeaderColComponent.prototype.onAggsBtnClick;
    /** @type {?} */
    PngTableHeaderColComponent.prototype.pngTable;
    /**
     * @type {?}
     * @private
     */
    PngTableHeaderColComponent.prototype.cd;
}
//# sourceMappingURL=data:application/json;base64,