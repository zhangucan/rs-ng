/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { BaseComponent } from '@er/core';
import { StateNames } from '@er/types';
import { StatesUtils } from '@er/utils';
import { OverlayPanel } from 'primeng/primeng';
import { PngTableComponent } from '../table/component';
var PngTableCaptionComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PngTableCaptionComponent, _super);
    function PngTableCaptionComponent(pngTable) {
        var _this = _super.call(this) || this;
        _this.pngTable = pngTable;
        _this.onSimpleSearch = new EventEmitter();
        return _this;
    }
    /**
     * @param {?} event
     * @return {?}
     */
    PngTableCaptionComponent.prototype.search = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.onSimpleSearch.emit(event);
    };
    /**
     * @return {?}
     */
    PngTableCaptionComponent.prototype.openPanel = /**
     * @return {?}
     */
    function () {
        StatesUtils.update(StateNames.popup, (/** @type {?} */ ((/** @type {?} */ ({
            header: '查询条件定义',
            content: this.searchBuilderPanel,
            visible: true,
            minWidth: 700,
            contentMaxHeight: 400
        })))));
    };
    /**
     * @return {?}
     */
    PngTableCaptionComponent.prototype.refresh = /**
     * @return {?}
     */
    function () {
        this.pngTable.load();
    };
    PngTableCaptionComponent.decorators = [
        { type: Component, args: [{
                    selector: 'png-table-caption',
                    template: "\n    <ng-container *ngIf=\"customerTpl;else default\">\n      <ng-container *ngTemplateOutlet=\"customerTpl;context:{$implicit:pngTable}\"></ng-container>\n    </ng-container>\n    <ng-template #default>\n      <div>\n        <span class=\"pull-left table-caption\" [innerHTML]=\"caption|erSafeHtml\"></span>\n        <span class=\"pull-right d-inline\"><i class=\"fa fa-refresh text-primary\" title=\"\u5237\u65B0\u8868\u683C\" (click)=\"refresh()\"></i></span>\n      </div>\n      <div class=\"clearfix\"></div>\n      <div *ngIf=\"hasSearchBox || hasAddAction || hasSearchInput\">\n        <div class=\"d-flex align-items-start\">\n          <div class=\"pl-3 py-3\" *ngIf=\"hasAddAction\">\n            <png-button erPropsBind [props]=\"addButton\" [outputContext]=\"{pngTable: pngTable}\"></png-button>\n          </div>\n          <div class=\"ml-auto py-3\" *ngIf=\"hasSearchInput && !hasSearchBox\">\n            <png-search-box title=\"\u7EFC\u5408\u641C\u7D22\uFF0C\u8F93\u5165\u56DE\u8F66\u952E\u6267\u884C\" (onSearch)=\"search($event)\"></png-search-box>\n          </div>\n          <div class=\"ml-auto\" *ngIf=\"hasSearchBox\">\n            <button pButton icon=\"fa fa-search\" label=\"\u9AD8\u7EA7\u67E5\u8BE2\" (click)=\"openPanel()\"></button>\n            <ng-template #searchBuilderPanel>\n              <png-table-query-builder></png-table-query-builder>\n            </ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    /** @nocollapse */
    PngTableCaptionComponent.ctorParameters = function () { return [
        { type: PngTableComponent }
    ]; };
    PngTableCaptionComponent.propDecorators = {
        caption: [{ type: Input }],
        hasAddAction: [{ type: Input }],
        hasSearchInput: [{ type: Input }],
        hasSearchBox: [{ type: Input }],
        addButton: [{ type: Input }],
        onSimpleSearch: [{ type: Output }],
        searchBuilderPanel: [{ type: ViewChild, args: ['searchBuilderPanel',] }]
    };
    return PngTableCaptionComponent;
}(BaseComponent));
export { PngTableCaptionComponent };
if (false) {
    /** @type {?} */
    PngTableCaptionComponent.prototype.caption;
    /** @type {?} */
    PngTableCaptionComponent.prototype.hasAddAction;
    /** @type {?} */
    PngTableCaptionComponent.prototype.hasSearchInput;
    /** @type {?} */
    PngTableCaptionComponent.prototype.hasSearchBox;
    /** @type {?} */
    PngTableCaptionComponent.prototype.addButton;
    /** @type {?} */
    PngTableCaptionComponent.prototype.onSimpleSearch;
    /** @type {?} */
    PngTableCaptionComponent.prototype.searchBuilderPanel;
    /** @type {?} */
    PngTableCaptionComponent.prototype.pngTable;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL3ByaW1lbmcvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy90YWJsZS9jb21wb25lbnQvY2FwdGlvbi9jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN6RyxPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sVUFBVSxDQUFDO0FBQ3ZDLE9BQU8sRUFBK0IsVUFBVSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBQ25FLE9BQU8sRUFBQyxXQUFXLEVBQUMsTUFBTSxXQUFXLENBQUM7QUFDdEMsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBQyxpQkFBaUIsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBRXJEO0lBaUM4QyxvREFBYTtJQWdCekQsa0NBQW1CLFFBQTJCO1FBQTlDLFlBQ0UsaUJBQU8sU0FDUjtRQUZrQixjQUFRLEdBQVIsUUFBUSxDQUFtQjtRQUpwQyxvQkFBYyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7O0lBTTlDLENBQUM7Ozs7O0lBRUQseUNBQU07Ozs7SUFBTixVQUFPLEtBQUs7UUFDVixJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsQyxDQUFDOzs7O0lBRUQsNENBQVM7OztJQUFUO1FBQ0UsV0FBVyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLG1CQUFBLG1CQUFpQjtZQUNwRCxNQUFNLEVBQUUsUUFBUTtZQUNoQixPQUFPLEVBQUUsSUFBSSxDQUFDLGtCQUFrQjtZQUNoQyxPQUFPLEVBQUUsSUFBSTtZQUNiLFFBQVEsRUFBRSxHQUFHO1lBQ2IsZ0JBQWdCLEVBQUUsR0FBRztTQUN0QixFQUFBLEVBQU0sQ0FBQyxDQUFDO0lBQ1gsQ0FBQzs7OztJQUVELDBDQUFPOzs7SUFBUDtRQUNFLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDdkIsQ0FBQzs7Z0JBckVGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsbUJBQW1CO29CQUM3QixRQUFRLEVBQUUseThDQTJCVDtvQkFDRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQ7Ozs7Z0JBakNPLGlCQUFpQjs7OzBCQXFDdEIsS0FBSzsrQkFFTCxLQUFLO2lDQUVMLEtBQUs7K0JBRUwsS0FBSzs0QkFFTCxLQUFLO2lDQUVMLE1BQU07cUNBRU4sU0FBUyxTQUFDLG9CQUFvQjs7SUF1QmpDLCtCQUFDO0NBQUEsQUF0RUQsQ0FpQzhDLGFBQWEsR0FxQzFEO1NBckNZLHdCQUF3Qjs7O0lBRW5DLDJDQUF5Qjs7SUFFekIsZ0RBQStCOztJQUUvQixrREFBaUM7O0lBRWpDLGdEQUErQjs7SUFFL0IsNkNBQWdDOztJQUVoQyxrREFBOEM7O0lBRTlDLHNEQUFrRTs7SUFFdEQsNENBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQsIFZpZXdDaGlsZH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0Jhc2VDb21wb25lbnR9IGZyb20gJ0Blci9jb3JlJztcbmltcG9ydCB7QnV0dG9uUHJvcHMsIFBvcHVwRGlhbG9nUHJvcCwgU3RhdGVOYW1lc30gZnJvbSAnQGVyL3R5cGVzJztcbmltcG9ydCB7U3RhdGVzVXRpbHN9IGZyb20gJ0Blci91dGlscyc7XG5pbXBvcnQge092ZXJsYXlQYW5lbH0gZnJvbSAncHJpbWVuZy9wcmltZW5nJztcbmltcG9ydCB7UG5nVGFibGVDb21wb25lbnR9IGZyb20gJy4uL3RhYmxlL2NvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BuZy10YWJsZS1jYXB0aW9uJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiY3VzdG9tZXJUcGw7ZWxzZSBkZWZhdWx0XCI+XG4gICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwiY3VzdG9tZXJUcGw7Y29udGV4dDp7JGltcGxpY2l0OnBuZ1RhYmxlfVwiPjwvbmctY29udGFpbmVyPlxuICAgIDwvbmctY29udGFpbmVyPlxuICAgIDxuZy10ZW1wbGF0ZSAjZGVmYXVsdD5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwicHVsbC1sZWZ0IHRhYmxlLWNhcHRpb25cIiBbaW5uZXJIVE1MXT1cImNhcHRpb258ZXJTYWZlSHRtbFwiPjwvc3Bhbj5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJwdWxsLXJpZ2h0IGQtaW5saW5lXCI+PGkgY2xhc3M9XCJmYSBmYS1yZWZyZXNoIHRleHQtcHJpbWFyeVwiIHRpdGxlPVwi5Yi35paw6KGo5qC8XCIgKGNsaWNrKT1cInJlZnJlc2goKVwiPjwvaT48L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjbGVhcmZpeFwiPjwvZGl2PlxuICAgICAgPGRpdiAqbmdJZj1cImhhc1NlYXJjaEJveCB8fCBoYXNBZGRBY3Rpb24gfHwgaGFzU2VhcmNoSW5wdXRcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBhbGlnbi1pdGVtcy1zdGFydFwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJwbC0zIHB5LTNcIiAqbmdJZj1cImhhc0FkZEFjdGlvblwiPlxuICAgICAgICAgICAgPHBuZy1idXR0b24gZXJQcm9wc0JpbmQgW3Byb3BzXT1cImFkZEJ1dHRvblwiIFtvdXRwdXRDb250ZXh0XT1cIntwbmdUYWJsZTogcG5nVGFibGV9XCI+PC9wbmctYnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJtbC1hdXRvIHB5LTNcIiAqbmdJZj1cImhhc1NlYXJjaElucHV0ICYmICFoYXNTZWFyY2hCb3hcIj5cbiAgICAgICAgICAgIDxwbmctc2VhcmNoLWJveCB0aXRsZT1cIue7vOWQiOaQnOe0ou+8jOi+k+WFpeWbnui9pumUruaJp+ihjFwiIChvblNlYXJjaCk9XCJzZWFyY2goJGV2ZW50KVwiPjwvcG5nLXNlYXJjaC1ib3g+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cIm1sLWF1dG9cIiAqbmdJZj1cImhhc1NlYXJjaEJveFwiPlxuICAgICAgICAgICAgPGJ1dHRvbiBwQnV0dG9uIGljb249XCJmYSBmYS1zZWFyY2hcIiBsYWJlbD1cIumrmOe6p+afpeivolwiIChjbGljayk9XCJvcGVuUGFuZWwoKVwiPjwvYnV0dG9uPlxuICAgICAgICAgICAgPG5nLXRlbXBsYXRlICNzZWFyY2hCdWlsZGVyUGFuZWw+XG4gICAgICAgICAgICAgIDxwbmctdGFibGUtcXVlcnktYnVpbGRlcj48L3BuZy10YWJsZS1xdWVyeS1idWlsZGVyPlxuICAgICAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L25nLXRlbXBsYXRlPlxuICBgLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcblxuZXhwb3J0IGNsYXNzIFBuZ1RhYmxlQ2FwdGlvbkNvbXBvbmVudCBleHRlbmRzIEJhc2VDb21wb25lbnQge1xuXG4gIEBJbnB1dCgpIGNhcHRpb246IHN0cmluZztcblxuICBASW5wdXQoKSBoYXNBZGRBY3Rpb246IGJvb2xlYW47XG5cbiAgQElucHV0KCkgaGFzU2VhcmNoSW5wdXQ6IGJvb2xlYW47XG5cbiAgQElucHV0KCkgaGFzU2VhcmNoQm94OiBib29sZWFuO1xuXG4gIEBJbnB1dCgpIGFkZEJ1dHRvbjogQnV0dG9uUHJvcHM7XG5cbiAgQE91dHB1dCgpIG9uU2ltcGxlU2VhcmNoID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIEBWaWV3Q2hpbGQoJ3NlYXJjaEJ1aWxkZXJQYW5lbCcpIHNlYXJjaEJ1aWxkZXJQYW5lbDogT3ZlcmxheVBhbmVsO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwbmdUYWJsZTogUG5nVGFibGVDb21wb25lbnQpIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgc2VhcmNoKGV2ZW50KSB7XG4gICAgdGhpcy5vblNpbXBsZVNlYXJjaC5lbWl0KGV2ZW50KTtcbiAgfVxuXG4gIG9wZW5QYW5lbCgpIHtcbiAgICBTdGF0ZXNVdGlscy51cGRhdGUoU3RhdGVOYW1lcy5wb3B1cCwgPFBvcHVwRGlhbG9nUHJvcD57XG4gICAgICBoZWFkZXI6ICfmn6Xor6LmnaHku7blrprkuYknLFxuICAgICAgY29udGVudDogdGhpcy5zZWFyY2hCdWlsZGVyUGFuZWwsXG4gICAgICB2aXNpYmxlOiB0cnVlLFxuICAgICAgbWluV2lkdGg6IDcwMCxcbiAgICAgIGNvbnRlbnRNYXhIZWlnaHQ6IDQwMFxuICAgIH0gYXMge30pO1xuICB9XG5cbiAgcmVmcmVzaCgpIHtcbiAgICB0aGlzLnBuZ1RhYmxlLmxvYWQoKTtcbiAgfVxufVxuIl19