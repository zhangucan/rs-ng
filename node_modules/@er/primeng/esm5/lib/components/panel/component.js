/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, ElementRef, Input, Renderer2, ViewChild } from '@angular/core';
import { BaseComponent, DiUtils } from '@er/core';
import { DomUtils } from '@er/utils';
var PngPanelComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PngPanelComponent, _super);
    function PngPanelComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.collapsed = false;
        _this.toggleable = false;
        _this.showHeader = true;
        _this.templateNames = {
            header: 'header',
            footer: 'footer'
        };
        return _this;
    }
    /**
     * @return {?}
     */
    PngPanelComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        _super.prototype.ngAfterViewInit.call(this);
        /** @type {?} */
        var titleBar = this.panelEle.nativeElement.querySelector('.ui-panel-titlebar');
        if (titleBar) {
            if (this.barStyleClass) {
                DomUtils.addClasses(titleBar, this.barStyleClass);
            }
            if (this.barStyle) {
                Object.keys(this.barStyle).forEach(function (name) {
                    DiUtils.get(Renderer2).setStyle(titleBar, name, _this.barStyle[name]);
                });
            }
        }
    };
    PngPanelComponent.decorators = [
        { type: Component, args: [{
                    selector: 'png-panel',
                    template: "<div class=\"ui-g\">\n  <div class=\"ui-g-12\">\n    <p-panel #pngPanel [styleClass]=\"styleClass\" [style]=\"style\" [toggleable]=\"toggleable\" [showHeader]=\"showHeader\"\n             [collapsed]=\"collapsed\">\n      <p-header>\n        <ng-container *ngIf=\"header\">\n          <i *ngIf=\"icon\" [class]=\"icon\"></i>\n          <er-dyna-content [content]=\"header\" class=\"d-inline-block\"></er-dyna-content>\n        </ng-container>\n        <ng-container *ngIf=\"template(templateNames.header)\">\n          <ng-container *ngTemplateOutlet=\"template(templateNames.header)\"></ng-container>\n        </ng-container>\n      </p-header>\n      <ng-content></ng-content>\n      <ng-container *ngIf=\"footer || template(templateNames.footer)\">\n        <p-footer>\n          <ng-container *ngIf=\"footer\">\n            <er-dyna-content [content]=\"footer\"></er-dyna-content>\n          </ng-container>\n          <ng-container *ngIf=\"template(templateNames.footer)\">\n            <ng-container *ngTemplateOutlet=\"template(templateNames.footer)\"></ng-container>\n          </ng-container>\n        </p-footer>\n      </ng-container>\n    </p-panel>\n  </div>\n</div>\n\n",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    PngPanelComponent.propDecorators = {
        barStyle: [{ type: Input }],
        barStyleClass: [{ type: Input }],
        style: [{ type: Input }],
        styleClass: [{ type: Input }],
        header: [{ type: Input }],
        footer: [{ type: Input }],
        icon: [{ type: Input }],
        collapsed: [{ type: Input }],
        toggleable: [{ type: Input }],
        showHeader: [{ type: Input }],
        panelEle: [{ type: ViewChild, args: ['pngPanel', { read: ElementRef },] }]
    };
    return PngPanelComponent;
}(BaseComponent));
export { PngPanelComponent };
if (false) {
    /** @type {?} */
    PngPanelComponent.prototype.barStyle;
    /** @type {?} */
    PngPanelComponent.prototype.barStyleClass;
    /** @type {?} */
    PngPanelComponent.prototype.style;
    /** @type {?} */
    PngPanelComponent.prototype.styleClass;
    /** @type {?} */
    PngPanelComponent.prototype.header;
    /** @type {?} */
    PngPanelComponent.prototype.footer;
    /** @type {?} */
    PngPanelComponent.prototype.icon;
    /** @type {?} */
    PngPanelComponent.prototype.collapsed;
    /** @type {?} */
    PngPanelComponent.prototype.toggleable;
    /** @type {?} */
    PngPanelComponent.prototype.showHeader;
    /** @type {?} */
    PngPanelComponent.prototype.panelEle;
    /** @type {?} */
    PngPanelComponent.prototype.templateNames;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL3ByaW1lbmcvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9wYW5lbC9jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQWdCLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekgsT0FBTyxFQUFDLGFBQWEsRUFBRSxPQUFPLEVBQUMsTUFBTSxVQUFVLENBQUM7QUFFaEQsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUVuQztJQUt1Qyw2Q0FBYTtJQUxwRDtRQUFBLHFFQXNDQztRQXpCVSxlQUFTLEdBQUcsS0FBSyxDQUFDO1FBQ2xCLGdCQUFVLEdBQUcsS0FBSyxDQUFDO1FBQ25CLGdCQUFVLEdBQUcsSUFBSSxDQUFDO1FBSTNCLG1CQUFhLEdBQUc7WUFDZCxNQUFNLEVBQUUsUUFBUTtZQUNoQixNQUFNLEVBQUUsUUFBUTtTQUNqQixDQUFDOztJQWdCSixDQUFDOzs7O0lBZEMsMkNBQWU7OztJQUFmO1FBQUEsaUJBYUM7UUFaQyxpQkFBTSxlQUFlLFdBQUUsQ0FBQzs7WUFDbEIsUUFBUSxHQUFtQixJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsb0JBQW9CLENBQUM7UUFDaEcsSUFBSSxRQUFRLEVBQUU7WUFDWixJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUU7Z0JBQ3RCLFFBQVEsQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQzthQUNuRDtZQUNELElBQUksSUFBSSxDQUFDLFFBQVEsRUFBRTtnQkFDakIsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsT0FBTyxDQUFDLFVBQUEsSUFBSTtvQkFDckMsT0FBTyxDQUFDLEdBQUcsQ0FBWSxTQUFTLENBQUMsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLElBQUksRUFBRSxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQ2xGLENBQUMsQ0FBQyxDQUFDO2FBQ0o7U0FDRjtJQUNILENBQUM7O2dCQXJDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLFdBQVc7b0JBQ3JCLDJxQ0FBdUI7b0JBQ3ZCLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRDs7OzJCQUVFLEtBQUs7Z0NBQ0wsS0FBSzt3QkFDTCxLQUFLOzZCQUNMLEtBQUs7eUJBQ0wsS0FBSzt5QkFDTCxLQUFLO3VCQUNMLEtBQUs7NEJBQ0wsS0FBSzs2QkFDTCxLQUFLOzZCQUNMLEtBQUs7MkJBRUwsU0FBUyxTQUFDLFVBQVUsRUFBRSxFQUFDLElBQUksRUFBRSxVQUFVLEVBQUM7O0lBcUIzQyx3QkFBQztDQUFBLEFBdENELENBS3VDLGFBQWEsR0FpQ25EO1NBakNZLGlCQUFpQjs7O0lBQzVCLHFDQUFzQjs7SUFDdEIsMENBQStCOztJQUMvQixrQ0FBbUI7O0lBQ25CLHVDQUE0Qjs7SUFDNUIsbUNBQTZCOztJQUM3QixtQ0FBNkI7O0lBQzdCLGlDQUFzQjs7SUFDdEIsc0NBQTJCOztJQUMzQix1Q0FBNEI7O0lBQzVCLHVDQUEyQjs7SUFFM0IscUNBQWdFOztJQUVoRSwwQ0FHRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7QWZ0ZXJWaWV3SW5pdCwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIFJlbmRlcmVyMiwgVmlld0NoaWxkfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7QmFzZUNvbXBvbmVudCwgRGlVdGlsc30gZnJvbSAnQGVyL2NvcmUnO1xuaW1wb3J0IHtEeW5hQ29udGVudH0gZnJvbSAnQGVyL3R5cGVzJztcbmltcG9ydCB7RG9tVXRpbHN9IGZyb20gJ0Blci91dGlscyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3BuZy1wYW5lbCcsXG4gIHRlbXBsYXRlVXJsOiAndHBsLmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBQbmdQYW5lbENvbXBvbmVudCBleHRlbmRzIEJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgQElucHV0KCkgYmFyU3R5bGU6IHt9O1xuICBASW5wdXQoKSBiYXJTdHlsZUNsYXNzOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHN0eWxlOiB7fTtcbiAgQElucHV0KCkgc3R5bGVDbGFzczogc3RyaW5nO1xuICBASW5wdXQoKSBoZWFkZXI6IER5bmFDb250ZW50O1xuICBASW5wdXQoKSBmb290ZXI6IER5bmFDb250ZW50O1xuICBASW5wdXQoKSBpY29uOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGNvbGxhcHNlZCA9IGZhbHNlO1xuICBASW5wdXQoKSB0b2dnbGVhYmxlID0gZmFsc2U7XG4gIEBJbnB1dCgpIHNob3dIZWFkZXIgPSB0cnVlO1xuXG4gIEBWaWV3Q2hpbGQoJ3BuZ1BhbmVsJywge3JlYWQ6IEVsZW1lbnRSZWZ9KSBwYW5lbEVsZTogRWxlbWVudFJlZjtcblxuICB0ZW1wbGF0ZU5hbWVzID0ge1xuICAgIGhlYWRlcjogJ2hlYWRlcicsXG4gICAgZm9vdGVyOiAnZm9vdGVyJ1xuICB9O1xuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICBzdXBlci5uZ0FmdGVyVmlld0luaXQoKTtcbiAgICBjb25zdCB0aXRsZUJhcjogSFRNTERpdkVsZW1lbnQgPSB0aGlzLnBhbmVsRWxlLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvcignLnVpLXBhbmVsLXRpdGxlYmFyJyk7XG4gICAgaWYgKHRpdGxlQmFyKSB7XG4gICAgICBpZiAodGhpcy5iYXJTdHlsZUNsYXNzKSB7XG4gICAgICAgIERvbVV0aWxzLmFkZENsYXNzZXModGl0bGVCYXIsIHRoaXMuYmFyU3R5bGVDbGFzcyk7XG4gICAgICB9XG4gICAgICBpZiAodGhpcy5iYXJTdHlsZSkge1xuICAgICAgICBPYmplY3Qua2V5cyh0aGlzLmJhclN0eWxlKS5mb3JFYWNoKG5hbWUgPT4ge1xuICAgICAgICAgIERpVXRpbHMuZ2V0PFJlbmRlcmVyMj4oUmVuZGVyZXIyKS5zZXRTdHlsZSh0aXRsZUJhciwgbmFtZSwgdGhpcy5iYXJTdHlsZVtuYW1lXSk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIl19