/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { BaseComponent } from '@er/core';
import { CommonsUtils, DataItemUtils } from '@er/utils';
var PngOptionItemComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PngOptionItemComponent, _super);
    function PngOptionItemComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(PngOptionItemComponent.prototype, "labels", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var _label = DataItemUtils.getItemLabel(this.item, this.props.dropDownOptionKey || this.props.labelKey || 'label');
            if (CommonsUtils.isArray(_label)) {
                return _label;
            }
            else {
                return [_label];
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PngOptionItemComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.props) {
            this.props = {};
        }
    };
    PngOptionItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'png-option-item',
                    template: "\n    <ng-container *ngIf=\"customerTpl;else default\">\n      <ng-container *ngTemplateOutlet=\"customerTpl;context:{$implicit:item}\"></ng-container>\n    </ng-container>\n    <ng-template #default>\n      <div class=\"d-flex option-item\" [ngClass]=\"props.itemStyleClass || 'ui-helper-clearfix'\">\n          <span class=\"label mr-3\" *ngFor=\"let label of labels\" [ngClass]=\"props.labelStyleClass\" [innerHTML]=\"label\"></span>\n          <span class=\"pull-right count\" *ngIf=\"props.showCounter && item['count']\">\n          <span [ngClass]=\"props.counterStyleClass || 'badge badge-pill badge-info'\">{{item['count']}}</span>\n        </span>\n      </div>\n    </ng-template>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: [".option-item{border-bottom:1px solid #d5d5d5;font-size:.8em}.option-item:hover{font-weight:700;font-size:1em}"]
                }] }
    ];
    PngOptionItemComponent.propDecorators = {
        item: [{ type: Input }],
        props: [{ type: Input }]
    };
    return PngOptionItemComponent;
}(BaseComponent));
export { PngOptionItemComponent };
if (false) {
    /** @type {?} */
    PngOptionItemComponent.prototype.item;
    /** @type {?} */
    PngOptionItemComponent.prototype.props;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL3ByaW1lbmcvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9vcHRpb24taXRlbS9jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBUyxNQUFNLGVBQWUsQ0FBQztBQUNoRixPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sVUFBVSxDQUFDO0FBRXZDLE9BQU8sRUFBQyxZQUFZLEVBQUUsYUFBYSxFQUFDLE1BQU0sV0FBVyxDQUFDO0FBRXREO0lBbUI0QyxrREFBYTtJQW5CekQ7O0lBc0NBLENBQUM7SUFmQyxzQkFBSSwwQ0FBTTs7OztRQUFWOztnQkFDUSxNQUFNLEdBQUcsYUFBYSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsaUJBQWlCLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLElBQUksT0FBTyxDQUFDO1lBQ3BILElBQUksWUFBWSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRTtnQkFDaEMsT0FBTyxNQUFNLENBQUM7YUFDZjtpQkFBTTtnQkFDTCxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDakI7UUFDSCxDQUFDOzs7T0FBQTs7OztJQUVELHlDQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2YsSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7U0FDakI7SUFDSCxDQUFDOztnQkFwQ0YsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxpQkFBaUI7b0JBQzNCLFFBQVEsRUFBRSx3ckJBWVQ7b0JBRUQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O2lCQUNoRDs7O3VCQUdFLEtBQUs7d0JBQ0wsS0FBSzs7SUFpQlIsNkJBQUM7Q0FBQSxBQXRDRCxDQW1CNEMsYUFBYSxHQW1CeEQ7U0FuQlksc0JBQXNCOzs7SUFDakMsc0NBQWtCOztJQUNsQix1Q0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0LCBPbkluaXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtCYXNlQ29tcG9uZW50fSBmcm9tICdAZXIvY29yZSc7XG5pbXBvcnQge0RhdGFJdGVtUHJvcHN9IGZyb20gJ0Blci90eXBlcyc7XG5pbXBvcnQge0NvbW1vbnNVdGlscywgRGF0YUl0ZW1VdGlsc30gZnJvbSAnQGVyL3V0aWxzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG5nLW9wdGlvbi1pdGVtJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiY3VzdG9tZXJUcGw7ZWxzZSBkZWZhdWx0XCI+XG4gICAgICA8bmctY29udGFpbmVyICpuZ1RlbXBsYXRlT3V0bGV0PVwiY3VzdG9tZXJUcGw7Y29udGV4dDp7JGltcGxpY2l0Oml0ZW19XCI+PC9uZy1jb250YWluZXI+XG4gICAgPC9uZy1jb250YWluZXI+XG4gICAgPG5nLXRlbXBsYXRlICNkZWZhdWx0PlxuICAgICAgPGRpdiBjbGFzcz1cImQtZmxleCBvcHRpb24taXRlbVwiIFtuZ0NsYXNzXT1cInByb3BzLml0ZW1TdHlsZUNsYXNzIHx8ICd1aS1oZWxwZXItY2xlYXJmaXgnXCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJsYWJlbCBtci0zXCIgKm5nRm9yPVwibGV0IGxhYmVsIG9mIGxhYmVsc1wiIFtuZ0NsYXNzXT1cInByb3BzLmxhYmVsU3R5bGVDbGFzc1wiIFtpbm5lckhUTUxdPVwibGFiZWxcIj48L3NwYW4+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJwdWxsLXJpZ2h0IGNvdW50XCIgKm5nSWY9XCJwcm9wcy5zaG93Q291bnRlciAmJiBpdGVtWydjb3VudCddXCI+XG4gICAgICAgICAgPHNwYW4gW25nQ2xhc3NdPVwicHJvcHMuY291bnRlclN0eWxlQ2xhc3MgfHwgJ2JhZGdlIGJhZGdlLXBpbGwgYmFkZ2UtaW5mbydcIj57e2l0ZW1bJ2NvdW50J119fTwvc3Bhbj5cbiAgICAgICAgPC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgYCxcbiAgc3R5bGVVcmxzOiBbJ3N0eWxlcy5zY3NzJ10sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuXG5leHBvcnQgY2xhc3MgUG5nT3B0aW9uSXRlbUNvbXBvbmVudCBleHRlbmRzIEJhc2VDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBpdGVtOiB7fTtcbiAgQElucHV0KCkgcHJvcHM6IERhdGFJdGVtUHJvcHM7XG5cbiAgZ2V0IGxhYmVscygpIHtcbiAgICBjb25zdCBfbGFiZWwgPSBEYXRhSXRlbVV0aWxzLmdldEl0ZW1MYWJlbCh0aGlzLml0ZW0sIHRoaXMucHJvcHMuZHJvcERvd25PcHRpb25LZXkgfHwgdGhpcy5wcm9wcy5sYWJlbEtleSB8fCAnbGFiZWwnKTtcbiAgICBpZiAoQ29tbW9uc1V0aWxzLmlzQXJyYXkoX2xhYmVsKSkge1xuICAgICAgcmV0dXJuIF9sYWJlbDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIFtfbGFiZWxdO1xuICAgIH1cbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIGlmICghdGhpcy5wcm9wcykge1xuICAgICAgdGhpcy5wcm9wcyA9IHt9O1xuICAgIH1cbiAgfVxuXG59XG4iXX0=