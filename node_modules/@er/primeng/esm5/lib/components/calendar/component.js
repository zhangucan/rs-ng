/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, forwardRef } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { ControlWrapperComponent } from '@er/core';
import { DateUtils } from '@er/utils';
import { DEFAULT_CALENDAR_PROPS } from './type';
var PngCalendarComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PngCalendarComponent, _super);
    function PngCalendarComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.modelFormatter = _this.formatter;
        _this.today = DateUtils.getDay();
        _this.templateNames = {
            header: 'header',
            footer: 'footer',
            date: 'date'
        };
        _this.$defaultProps = DEFAULT_CALENDAR_PROPS;
        return _this;
    }
    /**
     * @param {?} model
     * @return {?}
     */
    PngCalendarComponent.prototype.formatter = /**
     * @param {?} model
     * @return {?}
     */
    function (model) {
        if (model) {
            return DateUtils.toDate(model);
        }
    };
    PngCalendarComponent.decorators = [
        { type: Component, args: [{
                    selector: 'png-calendar',
                    template: "\n    <p-calendar\n      [(ngModel)]=\"value\"\n      erPropsBind\n      [props]=\"$props\"\n      [context]=\"ctx\"\n      [monthNavigator]=\"$props.monthNavigator\"\n      [yearNavigator]=\"$props.yearNavigator\"\n      [yearRange]=\"$props.yearRange\"\n      (onBlur)=\"updateTouch()\"\n    >\n      <p-header *ngIf=\"template(templateNames.header)\">\n        <ng-container *ngTemplateOutlet=\"template(templateNames.header)\"></ng-container>\n      </p-header>\n\n      <p-footer *ngIf=\"template(templateNames.footer)\">\n        <ng-container *ngTemplateOutlet=\"template(templateNames.footer)\"></ng-container>\n      </p-footer>\n      \n      <ng-template pTemplate=\"date\" let-date>\n        <ng-container *ngTemplateOutlet=\"template(templateNames.date, dateTpl);context:{$implicit: date}\"></ng-container>\n      </ng-template>\n    </p-calendar>\n\n    <ng-template #dateTpl let-date>\n      <span [ngClass]=\"{'bg-red white': (date.day === today)}\"\n            style=\"border-radius:50%;\">{{date.day}}</span>\n    </ng-template>\n  ",
                    providers: [{
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: forwardRef(function () { return PngCalendarComponent; }),
                            multi: true
                        }]
                }] }
    ];
    return PngCalendarComponent;
}(ControlWrapperComponent));
export { PngCalendarComponent };
if (false) {
    /** @type {?} */
    PngCalendarComponent.prototype.modelFormatter;
    /** @type {?} */
    PngCalendarComponent.prototype.today;
    /** @type {?} */
    PngCalendarComponent.prototype.templateNames;
    /** @type {?} */
    PngCalendarComponent.prototype.$defaultProps;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL3ByaW1lbmcvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9jYWxlbmRhci9jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNwRCxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUNqRCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSxVQUFVLENBQUM7QUFDakQsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUNwQyxPQUFPLEVBQUMsc0JBQXNCLEVBQW1CLE1BQU0sUUFBUSxDQUFDO0FBSWhFO0lBc0MwQyxnREFBeUM7SUF0Q25GO1FBQUEscUVBeURDO1FBakJDLG9CQUFjLEdBQUcsS0FBSSxDQUFDLFNBQVMsQ0FBQztRQUVoQyxXQUFLLEdBQUcsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBRTNCLG1CQUFhLEdBQUc7WUFDZCxNQUFNLEVBQUUsUUFBUTtZQUNoQixNQUFNLEVBQUUsUUFBUTtZQUNoQixJQUFJLEVBQUUsTUFBTTtTQUNiLENBQUM7UUFFRixtQkFBYSxHQUFHLHNCQUFzQixDQUFDOztJQU96QyxDQUFDOzs7OztJQUxDLHdDQUFTOzs7O0lBQVQsVUFBVSxLQUFLO1FBQ2IsSUFBSSxLQUFLLEVBQUU7WUFDVCxPQUFPLFNBQVMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDaEM7SUFDSCxDQUFDOztnQkF4REYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxjQUFjO29CQUN4QixRQUFRLEVBQUUsNmhDQTRCVDtvQkFDRCxTQUFTLEVBQUUsQ0FBQzs0QkFDVixPQUFPLEVBQUUsaUJBQWlCOzRCQUMxQixXQUFXLEVBQUUsVUFBVSxDQUFDLGNBQU0sT0FBQSxvQkFBb0IsRUFBcEIsQ0FBb0IsQ0FBQzs0QkFDbkQsS0FBSyxFQUFFLElBQUk7eUJBQ1osQ0FBQztpQkFDSDs7SUFxQkQsMkJBQUM7Q0FBQSxBQXpERCxDQXNDMEMsdUJBQXVCLEdBbUJoRTtTQW5CWSxvQkFBb0I7OztJQUUvQiw4Q0FBZ0M7O0lBRWhDLHFDQUEyQjs7SUFFM0IsNkNBSUU7O0lBRUYsNkNBQXVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIGZvcndhcmRSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtOR19WQUxVRV9BQ0NFU1NPUn0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtDb250cm9sV3JhcHBlckNvbXBvbmVudH0gZnJvbSAnQGVyL2NvcmUnO1xuaW1wb3J0IHtEYXRlVXRpbHN9IGZyb20gJ0Blci91dGlscyc7XG5pbXBvcnQge0RFRkFVTFRfQ0FMRU5EQVJfUFJPUFMsIFBuZ0NhbGVuZGFyUHJvcHN9IGZyb20gJy4vdHlwZSc7XG5cbmV4cG9ydCB7UG5nQ2FsZW5kYXJQcm9wc30gZnJvbSAnLi90eXBlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncG5nLWNhbGVuZGFyJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8cC1jYWxlbmRhclxuICAgICAgWyhuZ01vZGVsKV09XCJ2YWx1ZVwiXG4gICAgICBlclByb3BzQmluZFxuICAgICAgW3Byb3BzXT1cIiRwcm9wc1wiXG4gICAgICBbY29udGV4dF09XCJjdHhcIlxuICAgICAgW21vbnRoTmF2aWdhdG9yXT1cIiRwcm9wcy5tb250aE5hdmlnYXRvclwiXG4gICAgICBbeWVhck5hdmlnYXRvcl09XCIkcHJvcHMueWVhck5hdmlnYXRvclwiXG4gICAgICBbeWVhclJhbmdlXT1cIiRwcm9wcy55ZWFyUmFuZ2VcIlxuICAgICAgKG9uQmx1cik9XCJ1cGRhdGVUb3VjaCgpXCJcbiAgICA+XG4gICAgICA8cC1oZWFkZXIgKm5nSWY9XCJ0ZW1wbGF0ZSh0ZW1wbGF0ZU5hbWVzLmhlYWRlcilcIj5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdUZW1wbGF0ZU91dGxldD1cInRlbXBsYXRlKHRlbXBsYXRlTmFtZXMuaGVhZGVyKVwiPjwvbmctY29udGFpbmVyPlxuICAgICAgPC9wLWhlYWRlcj5cblxuICAgICAgPHAtZm9vdGVyICpuZ0lmPVwidGVtcGxhdGUodGVtcGxhdGVOYW1lcy5mb290ZXIpXCI+XG4gICAgICAgIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJ0ZW1wbGF0ZSh0ZW1wbGF0ZU5hbWVzLmZvb3RlcilcIj48L25nLWNvbnRhaW5lcj5cbiAgICAgIDwvcC1mb290ZXI+XG4gICAgICBcbiAgICAgIDxuZy10ZW1wbGF0ZSBwVGVtcGxhdGU9XCJkYXRlXCIgbGV0LWRhdGU+XG4gICAgICAgIDxuZy1jb250YWluZXIgKm5nVGVtcGxhdGVPdXRsZXQ9XCJ0ZW1wbGF0ZSh0ZW1wbGF0ZU5hbWVzLmRhdGUsIGRhdGVUcGwpO2NvbnRleHQ6eyRpbXBsaWNpdDogZGF0ZX1cIj48L25nLWNvbnRhaW5lcj5cbiAgICAgIDwvbmctdGVtcGxhdGU+XG4gICAgPC9wLWNhbGVuZGFyPlxuXG4gICAgPG5nLXRlbXBsYXRlICNkYXRlVHBsIGxldC1kYXRlPlxuICAgICAgPHNwYW4gW25nQ2xhc3NdPVwieydiZy1yZWQgd2hpdGUnOiAoZGF0ZS5kYXkgPT09IHRvZGF5KX1cIlxuICAgICAgICAgICAgc3R5bGU9XCJib3JkZXItcmFkaXVzOjUwJTtcIj57e2RhdGUuZGF5fX08L3NwYW4+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgYCxcbiAgcHJvdmlkZXJzOiBbe1xuICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IFBuZ0NhbGVuZGFyQ29tcG9uZW50KSxcbiAgICBtdWx0aTogdHJ1ZVxuICB9XVxufSlcblxuZXhwb3J0IGNsYXNzIFBuZ0NhbGVuZGFyQ29tcG9uZW50IGV4dGVuZHMgQ29udHJvbFdyYXBwZXJDb21wb25lbnQ8UG5nQ2FsZW5kYXJQcm9wcz4ge1xuXG4gIG1vZGVsRm9ybWF0dGVyID0gdGhpcy5mb3JtYXR0ZXI7XG5cbiAgdG9kYXkgPSBEYXRlVXRpbHMuZ2V0RGF5KCk7XG5cbiAgdGVtcGxhdGVOYW1lcyA9IHtcbiAgICBoZWFkZXI6ICdoZWFkZXInLFxuICAgIGZvb3RlcjogJ2Zvb3RlcicsXG4gICAgZGF0ZTogJ2RhdGUnXG4gIH07XG5cbiAgJGRlZmF1bHRQcm9wcyA9IERFRkFVTFRfQ0FMRU5EQVJfUFJPUFM7XG5cbiAgZm9ybWF0dGVyKG1vZGVsKSB7XG4gICAgaWYgKG1vZGVsKSB7XG4gICAgICByZXR1cm4gRGF0ZVV0aWxzLnRvRGF0ZShtb2RlbCk7XG4gICAgfVxuICB9XG59XG4iXX0=