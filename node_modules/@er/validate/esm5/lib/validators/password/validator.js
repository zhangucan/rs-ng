/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @record
 */
export function PasswordValidatorOptions() { }
if (false) {
    /** @type {?|undefined} */
    PasswordValidatorOptions.prototype.minLength;
    /** @type {?|undefined} */
    PasswordValidatorOptions.prototype.maxLength;
    /** @type {?|undefined} */
    PasswordValidatorOptions.prototype.requireLetters;
    /** @type {?|undefined} */
    PasswordValidatorOptions.prototype.requireLowerCaseLetters;
    /** @type {?|undefined} */
    PasswordValidatorOptions.prototype.requireUpperCaseLetters;
    /** @type {?|undefined} */
    PasswordValidatorOptions.prototype.requireNumbers;
    /** @type {?|undefined} */
    PasswordValidatorOptions.prototype.requireSpecialCharacters;
}
/** @type {?} */
export var passwordValidator = function (options) {
    if (!options) {
        options = {
            minLength: 6,
            requireLetters: true,
            requireNumbers: true
        };
    }
    /** @type {?} */
    var validator = new PasswordValidator(options);
    return function (control) {
        return validator.validate(control.value);
    };
};
var PasswordValidator = /** @class */ (function () {
    function PasswordValidator(options) {
        this.options = options;
        this.letterMatcher = /[a-zA-Z]/;
        this.lowerCaseLetterMatcher = /[a-z]/;
        this.upperCaseLetterMatcher = /[A-Z]/;
        this.numberMatcher = /[0-9]/;
        this.specialCharactersMatcher = /[-+=_.,:;~`!@#$%^&*(){}<>\[\]"'\/\\]/;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    PasswordValidator.prototype.validate = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (!value) {
            return null;
        }
        /** @type {?} */
        var errors = {};
        // Minimum length.
        if (this.options.minLength > 0 && value.length < this.options.minLength) {
            errors.passwordMinLengthRequired = {
                minLength: this.options.minLength
            };
        }
        // Maximum length.
        if (this.options.maxLength >= 0 && value.length > this.options.maxLength) {
            errors.passwordMaxLengthExceeded = {
                maxLength: this.options.maxLength
            };
        }
        // Letters.
        if (this.options.requireLetters && !this.letterMatcher.test(value)) {
            errors.passwordLetterRequired = true;
        }
        // Lower-case letters.
        if (this.options.requireLowerCaseLetters && !this.lowerCaseLetterMatcher.test(value)) {
            errors.passwordLowerCaseLetterRequired = true;
        }
        // Upper-case letters.
        if (this.options.requireUpperCaseLetters && !this.upperCaseLetterMatcher.test(value)) {
            errors.passwordUpperCaseLetterRequired = true;
        }
        // Numbers.
        if (this.options.requireNumbers && !this.numberMatcher.test(value)) {
            errors.passwordNumberRequired = true;
        }
        // Special characters.
        if (this.options.requireSpecialCharacters && !this.specialCharactersMatcher.test(value)) {
            errors.passwordSpecialCharacterRequired = true;
        }
        return Object.keys(errors).length > 0 ? { password: { errors: errors, options: this.options } } : null;
    };
    return PasswordValidator;
}());
if (false) {
    /**
     * @type {?}
     * @private
     */
    PasswordValidator.prototype.letterMatcher;
    /**
     * @type {?}
     * @private
     */
    PasswordValidator.prototype.lowerCaseLetterMatcher;
    /**
     * @type {?}
     * @private
     */
    PasswordValidator.prototype.upperCaseLetterMatcher;
    /**
     * @type {?}
     * @private
     */
    PasswordValidator.prototype.numberMatcher;
    /**
     * @type {?}
     * @private
     */
    PasswordValidator.prototype.specialCharactersMatcher;
    /**
     * @type {?}
     * @private
     */
    PasswordValidator.prototype.options;
}
/**
 * @param {?} error
 * @return {?}
 */
export function passwordValidationMessage(error) {
    /** @type {?} */
    var options = (/** @type {?} */ (error.options));
    /** @type {?} */
    var s = [];
    if (options.minLength) {
        s.push('最少' + options.minLength + '位');
    }
    if (options.maxLength) {
        s.push('最多' + options.maxLength + '位');
    }
    if (options.requireLetters) {
        s.push('包含字母');
    }
    if (options.requireLowerCaseLetters) {
        s.push('包含小写字母');
    }
    if (options.requireUpperCaseLetters) {
        s.push('包含大小字母');
    }
    if (options.requireNumbers) {
        s.push('包含数字');
    }
    if (options.requireSpecialCharacters) {
        s.push('包含非数字和字母');
    }
    return "\u767B\u5F55\u5BC6\u7801\u5FC5\u987B:<br>" + s.join('<br>');
}
;
//# sourceMappingURL=data:application/json;base64,