{"version":3,"sources":["ng://@er/validate/lib/validators/after/validator.ts","ng://@er/validate/lib/validators/age-range/validator.ts","ng://@er/validate/lib/validators/before/validator.ts","ng://@er/validate/lib/validators/between/validator.ts","ng://@er/validate/lib/validators/condition/validator.ts","ng://@er/validate/lib/validators/date-format/validator.ts","ng://@er/validate/lib/validators/equal-to/validator.ts","ng://@er/validate/lib/validators/match/validator.ts","ng://@er/validate/lib/validators/not-equal-to/validator.ts","ng://@er/validate/lib/validators/password/validator.ts","ng://@er/validate/lib/validators/all.ts","ng://@er/validate/lib/utils/index.ts","ng://@er/validate/lib/components/form/component.ts","node_modules/tslib/tslib.es6.js","ng://@er/validate/lib/components/control/component.ts","ng://@er/validate/lib/directives/control-on-blur/directive.ts","ng://@er/validate/lib/directives/control/validate-message.directive.ts","ng://@er/validate/lib/directives/control/validate-state.directive.ts","ng://@er/validate/lib/directives/all.ts","ng://@er/validate/lib/er-validate.module.ts"],"names":["dateAfterValidator","after","control","value","DateUtils","isDate","CommonsUtils","isAfter","dateAfter","message","ageValidator","min","max","age","getAge","dateBeforeValidator","before","isBefore","dataBefore","dateBetweenValidator","dataBetween","conditionValidator","condition","dateFormatValidator","dateRegPattern","RegPatterns","date_yyyymmdd","match","dateFormat","format","equalToValidator","controlName","target","parent","FormGroup","FormUtils","getFormControl","equalTo","matchValidator","pattern","errorKey","isEmptyString","RegUtils","test","_a","notEqualToValidator","notEqualTo","passwordValidator","options","minLength","requireLetters","requireNumbers","validator","PasswordValidator","validate","this","letterMatcher","lowerCaseLetterMatcher","upperCaseLetterMatcher","numberMatcher","specialCharactersMatcher","prototype","errors","length","passwordMinLengthRequired","maxLength","passwordMaxLengthExceeded","passwordLetterRequired","requireLowerCaseLetters","passwordLowerCaseLetterRequired","requireUpperCaseLetters","passwordUpperCaseLetterRequired","passwordNumberRequired","requireSpecialCharacters","passwordSpecialCharacterRequired","Object","keys","password","passwordValidationMessage","error","s","push","join","NgValidators","letter","character","ascii","chinese","digit","integer","numeric","phone","idCard","IdCardUtils","status","ip","halfWidth","fullWidth","between","formatPattern","conditionFn","minlength","Validators","maxlength","minValue","maxValue","reg","rangeLength","CustomValidators","range","gt","gte","lt","lte","minDate","maxDate","equal","notEqual","equalTo2","notEqualTo2","required","accept","requiredTrue","email","url","date","json","base64","creditCard","NgValidateMessages","requiredLength","dateBefore","number","not_matching","unique","duplicated","exists","ValidateUtils","getFormErrors","form","messages","formlyfield","FormControl","getControlErrors","controls","map","name","FormArray","err_1","forEach","getErrorMessage","_this","errorMessages","key","validators","asyncValidators","hasOwnProperty","apply","dynaValidationMessageFn","context","values","isJson","errorProps","Array","isArray","dyna","get","info","find","templateStr","FormValidateMessagesComponent","controlContainer","errors$","Subject","checkFormValidate","invalid","alert","next","fields","undefined","ngOnInit","formDirective","subscription","statusChanges","subscribe","errorKeys","errorMsg","getText","ngOnDestroy","unsubscribe","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","ControlContainer","decorators","type","Optional","Input","ContentChild","TemplateRef","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","done","__spread","arguments","concat","ValidateMessagesComponent","cd","showAllErrors","BehaviorSubject","getErrorMessages","dirty","getFirstError","getErrors","lst","formlyField","formControl","path","ChangeDetectorRef","ValidateOnBlurMessageDirective","model","defineProperty","onFocus","asyncValidator","clearAsyncValidators","clearValidators","onBlur","setAsyncValidators","setValidators","updateValueAndValidity","Directive","NgControl","HostListener","ValidationMessageDirective","componentFactoryResolver","viewContainerRef","ngControl","showError","enableValidation","valid","ngAfterViewInit","attrs","element","nativeElement","attributes","tag","getNamedItem","componentFactory","CacheUtils","resolveComponentFactory","put","parentElement","className","indexOf","componentRef","createComponent","ComponentFactoryResolver","ViewContainerRef","HostBinding","ValidateStateDirective","directives","ErValidateModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","CustomFormsModule","declarations","exports","entryComponents"],"mappings":"sqBAGA,IAAaA,EAAqB,SAAUC,GAS1C,OARW,SAACC,OACJC,EAAQD,EAAQC,MACtB,OAAKC,EAAAA,UAAUC,OAAOF,GAGNG,EAAAA,aAAaC,QAAQJ,EAAOF,GAC3B,KAAO,CAACO,UAAa,CAACL,MAAKA,EAAEF,MAAKA,IAH1C,CAACO,UAAa,CAACC,QAAS,UAAWN,MAAKA,MCJxCO,EAAe,SAAUC,EAAaC,GAkBjD,OAjBW,SAACV,OACJC,EAAQD,EAAQC,MAEtB,IAAKA,EACH,OAAO,KAGT,IAAKC,EAAAA,UAAUC,OAAOF,GACpB,MAAO,CAACU,IAAO,CAACJ,QAAS,UAAWN,MAAKA,QAGrCU,EAAMP,EAAAA,aAAaQ,OAAOX,GAIhC,OAFyB,EAANQ,GAAWE,EAAMF,GAAe,EAANC,GAAiBA,EAANC,EAErC,KAAO,CAACA,IAAO,CAACF,IAAGA,EAAEC,IAAGA,EAAET,MAAKA,MChBzCY,EAAsB,SAASC,GAS1C,OARW,SAACd,OACJC,EAAQD,EAAQC,MACtB,OAAKC,EAAAA,UAAUC,OAAOF,GAGLG,EAAAA,aAAaW,SAASf,EAAQC,MAAOa,GACpC,KAAO,CAACE,WAAc,CAACf,MAAKA,EAAEa,OAAMA,IAH7C,CAACE,WAAc,CAACT,QAAS,UAAWN,MAAKA,MCJzCgB,EAAuB,SAASH,EAAQf,GAUnD,OATY,SAACC,OACLC,EAAQD,EAAQC,MACtB,OAAKC,EAAAA,UAAUC,OAAOF,GAGJG,EAAAA,aAAaW,SAASd,EAAOa,IAC1CV,EAAAA,aAAaC,QAAQJ,EAAOF,GACd,KAAO,CAACmB,YAAe,CAACjB,MAAKA,EAAEa,OAAMA,EAAEf,MAAKA,IAJtD,CAACmB,YAAe,CAACX,QAAS,UAAWN,MAAKA,MCL1CkB,EAAqB,SAAUC,GAM1C,OALW,SAACpB,GACV,OAAOoB,EAAUpB,EAAQC,OAAS,KAAO,CACvCmB,UAAW,CAACA,UAASA,EAAEnB,MAAOD,EAAQC,UCF/BoB,EAAsB,SAAUC,QAAA,IAAAA,IAAAA,EAAiBC,EAAAA,YAAYC,eAMxE,OALW,SAACxB,OACJC,EAAQD,EAAQC,MAEtB,OADiBA,GAASA,EAAMwB,MAAMH,GACrB,KAAO,CAACI,WAAc,CAACzB,MAAKA,EAAE0B,OAAUL,MCHhDM,EAAmB,SAAUC,GAiBxC,OAhBW,SAAC7B,GAGV,QADI8B,EADAC,EAAS/B,EAAQ+B,OAEdA,aAAkBC,EAAAA,aACvBF,EAAUG,EAAAA,UAAUC,eAAeH,EAAQF,KAE3CE,EAASA,EAAOA,OAElB,GAAID,EAAQ,KACJ7B,EAAQD,EAAQC,MAGtB,OADgBA,IADI6B,EAAO7B,MAEV,KAAO,CAACkC,QAAW,CAAClC,MAAKA,EAAE4B,YAAWA,IAEzD,OAAO,OChBEO,EAAiB,SAAUC,EAAgDC,QAAA,IAAAA,IAAAA,EAAA,SAQtF,OAPW,SAACtC,SACJC,EAAQD,EAAQC,MACtB,OAAIG,EAAAA,aAAamC,cAActC,GACtB,KAEFuC,EAAAA,SAASC,KAAKxC,EAAOoC,GAAW,OAAIK,EAAA,IAAKJ,GAAW,CAACD,QAAOA,EAAEpC,MAAKA,GAACyC,KCLlEC,EAAsB,SAAUd,GAiB3C,OAhBW,SAAC7B,GAGV,QADI8B,EADAC,EAAS/B,EAAQ+B,OAEdA,aAAkBC,EAAAA,aACvBF,EAAUG,EAAAA,UAAUC,eAAeH,EAAQF,KAE3CE,EAASA,EAAOA,OAElB,GAAID,EAAQ,KACJ7B,EAAQD,EAAQC,MAGtB,OADgBA,IADI6B,EAAO7B,MAEV,KAAO,CAAC2C,WAAc,CAAC3C,MAAKA,EAAE4B,YAAWA,IAE5D,OAAO,OCNEgB,EAAoB,SAAUC,GAEpCA,IACHA,EAAU,CACRC,UAAW,EACXC,gBAAgB,EAChBC,gBAAgB,QAIdC,EAAY,IAAIC,EAAkBL,GAExC,OAAO,SAAC9C,GACN,OAAOkD,EAAUE,SAASpD,EAAQC,SAItCkD,EAAA,WASE,SAAAA,EAAoBL,GAAAO,KAAAP,QAAAA,EAPZO,KAAAC,cAAgB,WAChBD,KAAAE,uBAAyB,QACzBF,KAAAG,uBAAyB,QACzBH,KAAAI,cAAgB,QAChBJ,KAAAK,yBAA2B,uCA0DrC,OAnDEP,EAAAQ,UAAAP,SAAA,SAASnD,GAEP,IAAKA,EACH,OAAO,SAGH2D,EAAc,GAyCpB,OAtC6B,EAAzBP,KAAKP,QAAQC,WAAiB9C,EAAM4D,OAASR,KAAKP,QAAQC,YAC5Da,EAAOE,0BAA4B,CACjCf,UAAWM,KAAKP,QAAQC,YAKE,GAA1BM,KAAKP,QAAQiB,WAAkB9D,EAAM4D,OAASR,KAAKP,QAAQiB,YAC7DH,EAAOI,0BAA4B,CACjCD,UAAWV,KAAKP,QAAQiB,YAKxBV,KAAKP,QAAQE,iBAAmBK,KAAKC,cAAcb,KAAKxC,KAC1D2D,EAAOK,wBAAyB,GAI9BZ,KAAKP,QAAQoB,0BAA4Bb,KAAKE,uBAAuBd,KAAKxC,KAC5E2D,EAAOO,iCAAkC,GAIvCd,KAAKP,QAAQsB,0BAA4Bf,KAAKG,uBAAuBf,KAAKxC,KAC5E2D,EAAOS,iCAAkC,GAIvChB,KAAKP,QAAQG,iBAAmBI,KAAKI,cAAchB,KAAKxC,KAC1D2D,EAAOU,wBAAyB,GAI9BjB,KAAKP,QAAQyB,2BAA6BlB,KAAKK,yBAAyBjB,KAAKxC,KAC/E2D,EAAOY,kCAAmC,GAGR,EAA7BC,OAAOC,KAAKd,GAAQC,OAAa,CAACc,SAAU,CAACf,OAAMA,EAAEd,QAASO,KAAKP,UAAY,MAI1FK,EAhEA,GAkEA,SAAgByB,EAA0BC,OAClC/B,EAAoC+B,EAAa,QACnDC,EAAI,GAsBR,OArBIhC,EAAQC,WACV+B,EAAEC,KAAK,KAAOjC,EAAQC,UAAY,KAEhCD,EAAQiB,WACVe,EAAEC,KAAK,KAAOjC,EAAQiB,UAAY,KAEhCjB,EAAQE,gBACV8B,EAAEC,KAAK,QAELjC,EAAQoB,yBACVY,EAAEC,KAAK,UAELjC,EAAQsB,yBACVU,EAAEC,KAAK,UAELjC,EAAQG,gBACV6B,EAAEC,KAAK,QAELjC,EAAQyB,0BACVO,EAAEC,KAAK,YAEF,cAAcD,EAAEE,KAAK,QCxH9B,IAAAC,EAAA,WAiBA,SAAAA,KAyNA,OA7MSA,EAAAC,OAAP,SAAclF,OACNC,EAAQD,EAAQC,MACtB,OAAIG,EAAAA,aAAamC,cAActC,GACtB,KAEFuC,EAAAA,SAASC,KAAKxC,EAAOsB,EAAAA,YAAY2D,QAAU,KAAO,CAACA,QAAQ,IAG7DD,EAAAE,UAAP,SAAiBnF,OACTC,EAAQD,EAAQC,MACtB,OAAIG,EAAAA,aAAamC,cAActC,GACtB,KAEFuC,EAAAA,SAASC,KAAKxC,EAAOsB,EAAAA,YAAY4D,WAAa,KAAO,CAACA,WAAW,IAGnEF,EAAAG,MAAP,SAAapF,OACLC,EAAQD,EAAQC,MACtB,OAAIG,EAAAA,aAAamC,cAActC,GACtB,KAEFuC,EAAAA,SAASC,KAAKxC,EAAOsB,EAAAA,YAAY6D,OAAS,KAAO,CAACA,OAAO,IAG3DH,EAAAI,QAAP,SAAerF,OACPC,EAAQD,EAAQC,MACtB,OAAIG,EAAAA,aAAamC,cAActC,GACtB,KAEFuC,EAAAA,SAASC,KAAKxC,EAAOsB,EAAAA,YAAY8D,SAAW,KAAO,CAACA,SAAS,IAG/DJ,EAAAK,MAAP,SAAatF,OACLC,EAAQD,EAAQC,MACtB,OAAIG,EAAAA,aAAamC,cAActC,GACtB,KAEFuC,EAAAA,SAASC,KAAKxC,EAAOsB,EAAAA,YAAY+D,OAAS,KAAO,CAACA,OAAO,IAG3DL,EAAAM,QAAP,SAAevF,OACPC,EAAQD,EAAQC,MACtB,OAAIG,EAAAA,aAAamC,cAActC,GACtB,KAEFuC,EAAAA,SAASC,KAAKxC,EAAOsB,EAAAA,YAAYgE,SAAW,KAAO,CAACA,SAAS,IAG/DN,EAAAO,QAAP,SAAexF,OACPC,EAAQD,EAAQC,MACtB,OAAIG,EAAAA,aAAamC,cAActC,GACtB,KAEFuC,EAAAA,SAASC,KAAKxC,EAAOsB,EAAAA,YAAYiE,SAAW,KAAO,CAACA,SAAS,IAG/DP,EAAAQ,MAAP,SAAazF,OACLC,EAAQD,EAAQC,MACtB,OAAIG,EAAAA,aAAamC,cAActC,GACtB,KAEFuC,EAAAA,SAASC,KAAKxC,EAAOsB,EAAAA,YAAYkE,OAAS,KAAO,CAACA,OAAO,IAG3DR,EAAAS,OAAP,SAAc1F,OACNC,EAAQD,EAAQC,MACtB,OAAIG,EAAAA,aAAamC,cAActC,GACtB,KAEU0F,EAAAA,YAAYlD,KAAKxC,GAElB2F,OAAS,KAAO,CAACF,QAAQ,IAGtCT,EAAAY,GAAP,SAAU7F,OACFC,EAAQD,EAAQC,MACtB,OAAIG,EAAAA,aAAamC,cAActC,GACtB,KAEFuC,EAAAA,SAASC,KAAKxC,EAAOsB,EAAAA,YAAYsE,IAAM,KAAO,CAACA,IAAI,IAGrDZ,EAAAa,UAAP,SAAiB9F,OACTC,EAAQD,EAAQC,MACtB,OAAIG,EAAAA,aAAamC,cAActC,GACtB,KAEFuC,EAAAA,SAASC,KAAKxC,EAAOsB,EAAAA,YAAYuE,WAAa,KAAO,CAACA,WAAW,IAGnEb,EAAAc,UAAP,SAAiB/F,OACTC,EAAQD,EAAQC,MACtB,OAAIG,EAAAA,aAAamC,cAActC,GACtB,KAEFuC,EAAAA,SAASC,KAAKxC,EAAOsB,EAAAA,YAAYwE,WAAa,KAAO,CAACA,WAAW,IAGnEd,EAAAxD,MAAP,SAAaY,GACX,OAAOD,EAAeC,IAGjB4C,EAAAN,SAAP,SAAgB7B,GACd,OAAOD,EAAkBC,IAGpBmC,EAAAnE,OAAP,SAAcA,GACZ,OAAOD,EAAoBC,IAGtBmE,EAAAlF,MAAP,SAAaA,GACX,OAAOD,EAAmBC,IAGrBkF,EAAAe,QAAP,SAAelF,EAAuBf,GACpC,OAAOkB,EAAqBH,EAAQf,IAG/BkF,EAAAvD,WAAP,SAAkBuE,GAChB,OAAO5E,EAAoB4E,IAGtBhB,EAAAtE,IAAP,SAAWF,EAAiBC,GAC1B,YADS,IAAAD,IAAAA,EAAA,QAAiB,IAAAC,IAAAA,EAAA,GACnBF,EAAaC,EAAKC,IAGpBuE,EAAA7D,UAAP,SAAiB8E,GACf,OAAO/E,EAAmB+E,IAGrBjB,EAAA9C,QAAP,SAAeN,GACb,OAAOD,EAAiBC,IAGnBoD,EAAArC,WAAP,SAAkBf,GAChB,OAAOc,EAAoBd,IAGtBoD,EAAAlC,UAAP,SAAiBoD,GACf,OAAOC,EAAAA,WAAWrD,UAAUoD,IAGvBlB,EAAAlB,UAAP,SAAiBsC,GACf,OAAOD,EAAAA,WAAWrC,UAAUsC,IAGvBpB,EAAAxE,IAAP,SAAW6F,GACT,OAAOF,EAAAA,WAAW3F,IAAI6F,IAGjBrB,EAAAvE,IAAP,SAAW6F,GACT,OAAOH,EAAAA,WAAW1F,IAAI6F,IAGjBtB,EAAA5C,QAAP,SAAemE,GACb,OAAOJ,EAAAA,WAAW/D,QAAQmE,IAGrBvB,EAAAwB,YAAP,SAAmB1D,EAAmBgB,GACpC,OAAO2C,EAAAA,iBAAiBD,YAAY,CAAC1D,EAAWgB,KAG3CkB,EAAA0B,MAAP,SAAalG,EAAaC,GACxB,OAAOgG,EAAAA,iBAAiBC,MAAM,CAAClG,EAAKC,KAG/BuE,EAAA2B,GAAP,SAAU3G,GACR,OAAOyG,EAAAA,iBAAiBE,GAAG3G,IAGtBgF,EAAA4B,IAAP,SAAW5G,GACT,OAAOyG,EAAAA,iBAAiBG,IAAI5G,IAGvBgF,EAAA6B,GAAP,SAAU7G,GACR,OAAOyG,EAAAA,iBAAiBI,GAAG7G,IAGtBgF,EAAA8B,IAAP,SAAW9G,GACT,OAAOyG,EAAAA,iBAAiBK,IAAI9G,IAGvBgF,EAAA+B,QAAP,SAAeA,GACb,OAAON,EAAAA,iBAAiBM,QAAQA,IAG3B/B,EAAAgC,QAAP,SAAeA,GACb,OAAOP,EAAAA,iBAAiBO,QAAQA,IAG3BhC,EAAAiC,MAAP,SAAapC,GACX,OAAO4B,EAAAA,iBAAiBQ,MAAMpC,IAGzBG,EAAAkC,SAAP,SAAgBrC,GACd,OAAO4B,EAAAA,iBAAiBS,SAASrC,IAG5BG,EAAAmC,SAAP,SAAgBpH,GACd,OAAO0G,EAAAA,iBAAiBvE,QAAQnC,IAG3BiF,EAAAoC,YAAP,SAAmBrH,GACjB,OAAO0G,EAAAA,iBAAiB9D,WAAW5C,IArN9BiF,EAAAqC,SAAWlB,EAAAA,WAAWkB,SACtBrC,EAAAsC,OAASnB,EAAAA,WAAWoB,aAEpBvC,EAAAwC,MAAQf,EAAAA,iBAAiBe,MACzBxC,EAAAyC,IAAMhB,EAAAA,iBAAiBgB,IACvBzC,EAAA0C,KAAOjB,EAAAA,iBAAiBiB,KACxB1C,EAAA2C,KAAOlB,EAAAA,iBAAiBkB,KACxB3C,EAAA4C,OAASnB,EAAAA,iBAAiBmB,OAC1B5C,EAAA6C,WAAapB,EAAAA,iBAAiBoB,WA+MvC7C,EA1OA,gBA4OA,SAAA8C,KAyFA,OA3DSA,EAAA1B,UAAP,SAAiBxB,GACf,MAAO,iBAAiBA,EAAMmD,eAAc,eAGvCD,EAAA5B,UAAP,SAAiBtB,GACf,MAAO,iBAAiBA,EAAMmD,eAAc,eAGvCD,EAAAtH,IAAP,SAAWoE,GACT,MAAO,eAAeA,EAAMpE,IAAG,aAG1BsH,EAAArH,IAAP,SAAWmE,GACT,MAAO,eAAeA,EAAMnE,IAAG,aAG1BqH,EAAApH,IAAP,SAAWkE,GACT,MAAO,UAAUA,EAAMpE,IAAG,IAAIoE,EAAMnE,KAG/BqH,EAAApD,SAAP,SAAgBE,GACd,OAAOD,EAA0BC,IAG5BkD,EAAAE,WAAP,SAAkBpD,GAChB,MAAO,SAASA,EAAM/D,OAAM,MAGvBiH,EAAAzH,UAAP,SAAiBuE,GACf,MAAO,SAASA,EAAM9E,MAAK,MAGtBgI,EAAA7G,YAAP,SAAmB2D,GACjB,MAAO,SAASA,EAAM/D,OAAM,IAAI+D,EAAM9E,MAAK,MAGtCgI,EAAAtB,YAAP,SAAmB5B,GACjB,MAAO,iBAAiBA,EAAMnE,IAAG,aAG5BqH,EAAAnB,GAAP,SAAU/B,GACR,MAAO,eAAeA,EAAMnE,IAAG,aAG1BqH,EAAAjB,GAAP,SAAUjC,GACR,MAAO,eAAeA,EAAMiC,GAAE,aAGzBiB,EAAAhB,IAAP,SAAWlC,GACT,MAAO,eAAeA,EAAMkC,IAAG,aAG1BgB,EAAApB,MAAP,SAAa9B,GACX,MAAO,eAAeA,EAAMkC,IAAG,aAG1BgB,EAAAf,QAAP,SAAenC,GACb,MAAO,iBAAiBA,EAAMmC,QAAO,aAtFhCe,EAAAT,SAAW,WACXS,EAAA1F,QAAU,UACV0F,EAAA7C,OAAS,cACT6C,EAAAzC,MAAQ,YACRyC,EAAA5C,UAAY,iBACZ4C,EAAA1C,QAAU,cACV0C,EAAAxC,QAAU,YACVwC,EAAAG,OAAS,YACTH,EAAAhC,UAAY,YACZgC,EAAAjC,UAAY,YACZiC,EAAAtC,MAAQ,cACRsC,EAAA3G,UAAY,UACZ2G,EAAAN,MAAQ,aACRM,EAAArC,OAAS,UACTqC,EAAAI,aAAe,QACfJ,EAAAK,OAAS,SACTL,EAAAlB,IAAM,UACNkB,EAAAL,IAAM,YACNK,EAAAJ,KAAO,YACPI,EAAAd,QAAU,UACVc,EAAAH,KAAO,UACPG,EAAAF,OAAS,UACTE,EAAAb,MAAQ,UACRa,EAAAZ,SAAW,WACXY,EAAA5F,QAAU,UACV4F,EAAAnF,WAAa,WACbmF,EAAAM,WAAa,eACbN,EAAAO,OAAS,eA6DlBP,KCrUAQ,EAAA,WAKA,SAAAA,KA4EA,OA1ESA,EAAAC,cAAP,SAAqBC,EAAuBC,EAAsCC,OAC1E/E,EAAS,GACf,GAAI6E,aAAgBG,EAAAA,YAClB,OAAQL,EAAcM,iBAAgB,EAAoBH,EAAUC,GAC/D,GAAIF,aAAgBzG,EAAAA,UACzByC,OAAOC,KAAK+D,EAAKK,UAAUC,IAAI,SAAAC,GAC7B,OAAApF,EAAOoF,GAAST,EAAcC,cAAyBC,EAAKK,SAASE,GAAON,EAAUC,UAEnF,GAAIF,aAAgBQ,EAAAA,UAAW,KAC9BC,EAAM,GAIZ,OAHYT,EAAKK,SAASE,MAAOF,SAASK,QAAQ,SAAAnJ,GAChD,OAAAkJ,EAAInE,KAAMwD,EAAcC,cAAcxI,EAAS0I,EAAUC,MAEpDO,EAET,OAAOtF,GAGF2E,EAAAM,iBAAP,SAAwB7I,EAAsB0I,EAAsCC,GAClF,OAAOJ,EAAca,gBAAgBpJ,EAAQ4D,OAAQ8E,EAAUC,IAG1DJ,EAAAa,gBAAP,SAAuBxF,EAA0B8E,EAAsCC,GAAvF,IAAAU,EAAAhG,KACE,IAAKO,EACH,MAAO,OAEH0F,EAAgB,GAyBtB,OAxBA7E,OAAOC,KAAKd,GAAQuF,QAAQ,SAAAI,OACtBhJ,EACAoI,IACEA,EAAYa,YAAcb,EAAYa,WAAWD,IAAQZ,EAAYa,WAAWD,GAAKhJ,QACvFA,EAAUoI,EAAYa,WAAWD,GAAKhJ,QAC7BoI,EAAYc,iBAAmBd,EAAYc,gBAAgBF,IAAQZ,EAAYc,gBAAgBF,GAAKhJ,UAC7GA,EAAUoI,EAAYc,gBAAgBF,GAAKhJ,UAG1CA,IAEDA,EADEmI,GAAYA,EAASgB,eAAeH,GAC5Bb,EAASa,GACVxB,EAAmB2B,eAAeH,GACjCxB,EAAmBwB,GAEnBA,GAGS,iBAAZhJ,EACT+I,EAAcC,GAAOhJ,EACO,mBAAZA,IAChB+I,EAAcC,GAAOhJ,EAAQoJ,MAAMN,EAAM,CAACzF,EAAO2F,GAAMZ,OAGpDW,GAGFf,EAAAqB,wBAAP,SACE/E,EACAgF,OAEIC,EAAS,GACb,GAAI1J,EAAAA,aAAa2J,OAAOlF,IAAUgF,EAAQG,WACpCC,MAAMC,QAAQL,EAAQG,YACxBH,EAAQG,WAAWb,QAAQ,SAAAI,GAAO,OAAAO,EAAO/E,KAAKF,EAAM0E,MAEpDO,EAAO/E,KAAKF,EAAMgF,EAAQG,iBAEvB,KACCG,EAAc/J,EAAAA,aAAagK,IAAIP,EAAS,kBAAmB,IAC3DQ,EAAOjK,EAAAA,aAAakK,KAAKH,EAAM,CAACZ,IAAKM,EAAQvH,WAC/C+H,IACFP,EAASO,EAAW,MAAK,IAG7B,OAAOjK,EAAAA,aAAamK,YAAYV,EAAQlI,OAAQmI,IAEpDvB,EAjFA,GCAAiC,EAAA,WA4BE,SAAAA,EAAgCC,GAAApH,KAAAoH,iBAAAA,EAJhCpH,KAAAqH,QAAuB,IAAIC,EAAAA,QAyC7B,OAlCEH,EAAA7G,UAAAiH,kBAAA,WACMvH,KAAKoF,KAAKoC,SACZC,QACAzH,KAAKqH,QAAQK,KAAKxC,EAAcC,cAAcnF,KAAKoF,KAAMpF,KAAKqF,SAAUrF,KAAK2H,UAE7E3H,KAAKqH,QAAQK,KAAKE,YAItBT,EAAA7G,UAAAuH,SAAA,WAAA,IAAA7B,EAAAhG,MACOA,KAAKoF,MAAQpF,KAAKoH,mBACrBpH,KAAKoF,KAAOpF,KAAKoH,iBAAiBU,cAAiB9H,KAAKoH,iBAA8B,cAAwBhC,KAAO,MAEnHpF,KAAKoF,OACPpF,KAAK+H,aAAe/H,KAAKoF,KAAK4C,cAC3BC,UAAU,WACTjC,EAAKuB,wBAKbJ,EAAA7G,UAAA4H,UAAA,SAAU3H,GACR,OAAOa,OAAOC,KAAKd,IAGrB4G,EAAA7G,UAAA6H,SAAA,SAAS3G,GACP,OAAOzE,EAAAA,aAAaqL,QAAQ5G,IAG9B2F,EAAA7G,UAAA+H,YAAA,WACMrI,KAAK+H,cACP/H,KAAK+H,aAAaO,mCAvDvBC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,4BACVC,SAAA,yaACAC,gBAAiBC,EAAAA,wBAAwBC,oDATnCC,EAAAA,iBAAgBC,WAAA,CAAA,CAAAC,KA2BTC,EAAAA,4CAdZC,EAAAA,wBAEAA,EAAAA,sBAEAA,EAAAA,0BAEAA,EAAAA,2BAEAC,EAAAA,aAAYX,KAAA,CAACY,EAAAA,gBA2ChBjC,EAjEA,GCcA,SAuGgBkC,EAAOC,EAAGC,GACtB,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EAAG,OAAOF,EACf,IAAmBK,EAAYC,EAA3BC,EAAIL,EAAEM,KAAKR,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANR,GAAsB,EAANA,QAAcI,EAAIE,EAAEnC,QAAQsC,MAAMD,EAAGrI,KAAKiI,EAAE/M,OAExE,MAAO4E,GAASoI,EAAI,CAAEpI,MAAOA,WAEzB,IACQmI,IAAMA,EAAEK,OAASR,EAAIK,EAAU,YAAIL,EAAEM,KAAKD,WAExC,GAAID,EAAG,MAAMA,EAAEpI,OAE7B,OAAOuI,EAGX,SAAgBE,IACZ,IAAK,IAAIF,EAAK,GAAIF,EAAI,EAAGA,EAAIK,UAAU1J,OAAQqJ,IAC3CE,EAAKA,EAAGI,OAAOd,EAAOa,UAAUL,KACpC,OAAOE,mBCjFT,SAAAK,EAAgChD,EAA4CiD,GAA5CrK,KAAAoH,iBAAAA,EAA4CpH,KAAAqK,GAAAA,EAVnErK,KAAAsK,eAAgB,EAMzBtK,KAAAqH,QAAqC,IAAIkD,EAAAA,gBAA0B3C,WA0DrE,OAnDEwC,EAAA9J,UAAAkK,iBAAA,WACE,IAAIxK,KAAKrD,QAAQ8N,QAASzK,KAAKrD,QAAQ6K,QAKrC,OAAOxH,KAAKqH,QAAQK,KAAK,QAJnBzB,EAAgBf,EAAca,gBAAgB/F,KAAKrD,QAAQ4D,QAC3DA,EAASP,KAAKsK,cAAgBrE,EAAgBjG,KAAK0K,cAAczE,GACvEjG,KAAKqH,QAAQK,KAAK1H,KAAK2K,UAAUpK,KAMrC6J,EAAA9J,UAAAoK,cAAA,SAAczE,GACZ,OAAwC,EAApC7E,OAAOC,KAAK4E,GAAezF,OACtByF,EAAc7E,OAAOC,KAAK4E,GAAe,IAE3C,QAGTmE,EAAA9J,UAAAqK,UAAA,SAAU1E,GAAV,IAAAD,EAAAhG,KACQ4K,EAAM,GAMZ,OALI3E,GACF7E,OAAOC,KAAK4E,GAAeP,IAAI,SAAAQ,GAC7B0E,EAAIlJ,KAAK,CAACwE,IAAGA,EAAEtJ,MAAQoJ,EAAKX,UAAYW,EAAKX,SAASa,IAASD,EAAcC,OAG1E0E,GAGTR,EAAA9J,UAAAuH,SAAA,WAAA,IAAA7B,EAAAhG,KACE,IAAKA,KAAKrD,UACJqD,KAAK6K,cACP7K,KAAKrD,QAAUqD,KAAK6K,YAAYC,cAE7B9K,KAAKrD,SAAWqD,KAAKoH,kBAAkB,KACpChC,EAAOpF,KAAKoH,iBAAiBU,cAAiB9H,KAAKoH,iBAA8B,cAAwBhC,KAAO,KAClHA,IACFpF,KAAKrD,QAAUiC,EAAAA,UAAUC,eAAcyH,MAAxB1H,EAAAA,UAASqL,EAAA,CAAgB7E,GAASpF,KAAKoH,iBAAiB2D,KAAI,CAAE/K,KAAKxB,gBAIpFwB,KAAKrD,UACPqD,KAAK+H,aAAe/H,KAAKrD,QAAQqL,cAAcC,UAAU,WACvDjC,EAAKwE,uBAKXJ,EAAA9J,UAAA+H,YAAA,WACMrI,KAAK+H,cACP/H,KAAK+H,aAAaO,mCAzFvBC,EAAAA,UAASC,KAAA,CAAC,CACTC,SAAU,uBACVC,SAAU,0fAYVC,gBAAiBC,EAAAA,wBAAwBC,oDArBnCC,EAAAA,iBAAgBC,WAAA,CAAA,CAAAC,KA6CTC,EAAAA,kBAtDb+B,EAAAA,sDAkCC9B,EAAAA,2BAEAA,EAAAA,2BAEAA,EAAAA,qBAEAA,EAAAA,0BAEAA,EAAAA,6BAEAA,EAAAA,wBAEAA,EAAAA,2BAEAC,EAAAA,aAAYX,KAAA,CAACY,EAAAA,gBA4DhBgB,KC9GAa,EAAA,WAWE,SAAAA,EAAgCC,GAAAlL,KAAAkL,MAAAA,EA8BlC,OA3BE9J,OAAA+J,eAAIF,EAAA3K,UAAA,UAAO,KAAX,WACE,OAAIN,KAAKkL,OAASlL,KAAKkL,MAAMvO,QACpBqD,KAAKkL,MAAMvO,QAEXiL,2CAKXqD,EAAA3K,UAAA8K,QADA,WAEMpL,KAAKrD,UACPqD,KAAKmG,WAAanG,KAAKrD,QAAQkD,UAC/BG,KAAKoG,gBAAkBpG,KAAKrD,QAAQ0O,eACpCrL,KAAKrD,QAAQ2O,uBACbtL,KAAKrD,QAAQ4O,oBAKjBN,EAAA3K,UAAAkL,OADA,WAEMxL,KAAKrD,UACPqD,KAAKrD,QAAQ8O,mBAAmBzL,KAAKoG,iBACrCpG,KAAKrD,QAAQ+O,cAAc1L,KAAKmG,YAChCnG,KAAKrD,QAAQgP,+CAlClBC,EAAAA,UAASpD,KAAA,CAAC,CACTC,SAAU,kEAHJoD,EAAAA,UAAS9C,WAAA,CAAA,CAAAC,KAUFC,EAAAA,+CAWZ6C,EAAAA,aAAYtD,KAAA,CAAC,yBAUbsD,EAAAA,aAAYtD,KAAA,CAAC,WAShByC,EAzCA,GCiBAc,EAAA,WAgBE,SAAAA,EAAoBC,EACAC,EACYC,GAFZlM,KAAAgM,yBAAAA,EACAhM,KAAAiM,iBAAAA,EACYjM,KAAAkM,UAAAA,EAXvBlM,KAAAmM,WAAY,EAEZnM,KAAAoM,kBAAmB,EAiE9B,OArDEhL,OAAA+J,eAAIY,EAAAzL,UAAA,UAAO,KAAX,WACE,OAAIN,KAAKkM,WAAalM,KAAKkM,UAAUvP,QAC5BqD,KAAKkM,UAAUvP,QAEfiL,2CAIXxG,OAAA+J,eACIY,EAAAzL,UAAA,UAAO,KADX,WAEE,SAAKN,KAAKmM,YAAenM,KAAKkM,WAAuC,MAA1BlM,KAAKkM,UAAUvP,WAGnDqD,KAAKkM,WAAalM,KAAKkM,UAAUvP,SAAWqD,KAAKkM,UAAUvP,QAAQ0P,wCAG5EjL,OAAA+J,eACIY,EAAAzL,UAAA,YAAS,KADb,WAEE,SAAKN,KAAKmM,YAAenM,KAAKkM,WAAuC,MAA1BlM,KAAKkM,UAAUvP,WAGnDqD,KAAKkM,WAAalM,KAAKkM,UAAUvP,SAAWqD,KAAKkM,UAAUvP,QAAQ6K,0CAG5EuE,EAAAzL,UAAAgM,gBAAA,WACE,GAAKtM,KAAKkM,WAAclM,KAAKoM,iBAA7B,KAIMG,EAAsBvM,KAAKiM,iBAAiBO,QAAQC,cAAcC,WACxE,GAAIH,EAAO,KACHI,IAAQJ,EAAMK,aAAa,WACjC,GAAI5M,KAAKmM,WAAaQ,EAEpB,YADA3M,KAAKmM,WAAY,GAKrBnM,KAAK6M,iBAAmBC,EAAAA,WAAW/F,IAAI,oBAAqB,oCACvD/G,KAAK6M,mBACR7M,KAAK6M,iBAAmB7M,KAAKgM,yBAAyBe,wBAAwB3C,GAC9E0C,EAAAA,WAAWE,IAAI,oBAAqB,qCAAsChN,KAAK6M,mBAE/D7M,KAAKiM,iBAAiBO,QAAQC,cAAcQ,cAAcC,UAC9DC,QAAQ,eAEtBnN,KAAKoN,aAAepN,KAAKiM,iBAAiBoB,gBAAgBrN,KAAK6M,kBACnC7M,KAAKoN,aAAqB,SAAE/H,SAAWrF,KAAKqF,SAC5CrF,KAAKoN,aAAqB,SAAEzQ,QAAuBqD,KAAY,8BArE9F4L,EAAAA,UAASpD,KAAA,CAAC,CACTC,SAAU,4DAfV6E,EAAAA,gCAMAC,EAAAA,wBAEmB1B,EAAAA,UAAS9C,WAAA,CAAA,CAAAC,KAwBfC,EAAAA,gDAbZC,EAAAA,yBAEAA,EAAAA,gCAEAA,EAAAA,uBAoBAsE,EAAAA,YAAWhF,KAAA,CAAC,qCAQZgF,EAAAA,YAAWhF,KAAA,CAAC,uBAqCfuD,EA1EA,GCZA0B,EAAA,WAaE,SAAAA,EAAoBzB,EACAC,EACYC,GAFZlM,KAAAgM,yBAAAA,EACAhM,KAAAiM,iBAAAA,EACYjM,KAAAkM,UAAAA,EARvBlM,KAAAmM,WAAY,EAEZnM,KAAAoM,kBAAmB,EAwC9B,OA/BEhL,OAAA+J,eAAIsC,EAAAnN,UAAA,UAAO,KAAX,WACE,OAAIN,KAAKkM,WAAalM,KAAKkM,UAAUvP,QAC5BqD,KAAKkM,UAAUvP,QAEfiL,2CAIXxG,OAAA+J,eACIsC,EAAAnN,UAAA,UAAO,KADX,WAEE,SAAKN,KAAKmM,YAAenM,KAAKkM,WAAuC,MAA1BlM,KAAKkM,UAAUvP,WAGnDqD,KAAKkM,WAAalM,KAAKkM,UAAUvP,SAAWqD,KAAKkM,UAAUvP,QAAQ0P,wCAG5EoB,EAAAnN,UAAAgM,gBAAA,WACE,GAAKtM,KAAKkM,WAAclM,KAAKoM,iBAA7B,KAIMG,EAAsBvM,KAAKiM,iBAAiBO,QAAQC,cAAcC,WACxE,GAAIH,EAAO,KACHI,IAAQJ,EAAMK,aAAa,WACjC,GAAI5M,KAAKmM,WAAaQ,EAEpB,YADA3M,KAAKmM,WAAY,0BA3CxBP,EAAAA,UAASpD,KAAA,CAAC,CACTC,SAAU,yFANW6E,EAAAA,gCAAmEC,EAAAA,wBAClF1B,EAAAA,UAAS9C,WAAA,CAAA,CAAAC,KAmBFC,EAAAA,gDAVZC,EAAAA,yBAEAA,EAAAA,gCAEAA,EAAAA,uBAiBAsE,EAAAA,YAAWhF,KAAA,CAAC,qBAuBfiF,EAjDA,GCIaC,EAAa,CACxB3B,EACA0B,EACAxC,gBCJF,SAAA0C,KAwBA,2BAxBCC,EAAAA,SAAQpF,KAAA,CAAC,CACRqF,QAAS,CACPC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,mBAEFC,aAAYjE,EAAA,CACVG,EACAjD,GACGuG,GAELS,QAAOlE,EAAA,CACL8D,EAAAA,YACAC,EAAAA,oBACA5D,EACAjD,GACGuG,GAELU,gBAAiB,CACfhE,OAIJuD","sourcesContent":["import {AbstractControl, ValidatorFn} from '@angular/forms';\nimport {CommonsUtils, DateUtils} from '@er/utils';\n\nexport const dateAfterValidator = function (after): ValidatorFn {\n  const fn = (control: AbstractControl) => {\n    const value = control.value;\n    if (!DateUtils.isDate(value)) {\n      return {'dateAfter': {message: 'éè¯¯çæ¥ææ ¼å¼', value}};\n    }\n    const isAfter = CommonsUtils.isAfter(value, after);\n    return isAfter ? null : {'dateAfter': {value, after}};\n  };\n  return fn;\n};\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\nimport {CommonsUtils, DateUtils} from '@er/utils';\n\nexport const ageValidator = function (min: number, max: number): ValidatorFn {\n  const fn = (control: AbstractControl) => {\n    const value = control.value;\n\n    if (!value) {\n      return null;\n    }\n\n    if (!DateUtils.isDate(value)) {\n      return {'age': {message: 'éè¯¯çæ¥ææ ¼å¼', value}};\n    }\n\n    const age = CommonsUtils.getAge(value);\n\n    const isInValid = (min > 0 && age < min) || (max > 0 && age > max);\n\n    return isInValid ? null : {'age': {min, max, value}};\n  };\n  return fn;\n};\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\nimport {CommonsUtils, DateUtils} from '@er/utils';\n\nexport const dateBeforeValidator = function(before: string | Date): ValidatorFn {\n  const fn = (control: AbstractControl) => {\n    const value = control.value;\n    if (!DateUtils.isDate(value)) {\n      return {'dataBefore': {message: 'éè¯¯çæ¥ææ ¼å¼', value}};\n    }\n    const isBefore = CommonsUtils.isBefore(control.value, before);\n    return isBefore ? null : {'dataBefore': {value, before}};\n  };\n  return fn;\n};\n\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\nimport {CommonsUtils, DateUtils} from '@er/utils';\n\nexport const dateBetweenValidator = function(before, after): ValidatorFn {\n  const fn =  (control: AbstractControl) => {\n    const value = control.value;\n    if (!DateUtils.isDate(value)) {\n      return {'dataBetween': {message: 'éè¯¯çæ¥ææ ¼å¼', value}};\n    }\n    const isBetween = CommonsUtils.isBefore(value, before)\n      && CommonsUtils.isAfter(value, after);\n    return isBetween ? null : {'dataBetween': {value, before, after}};\n  };\n  return fn;\n};\n\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\n\nexport const conditionValidator = function (condition: (value: any) => boolean): ValidatorFn {\n  const fn = (control: AbstractControl) => {\n    return condition(control.value) ? null : {\n      condition: {condition, value: control.value}\n    };\n  };\n  return fn;\n};\n\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\nimport {RegPatterns} from '@er/types';\n\nexport const dateFormatValidator = function (dateRegPattern = RegPatterns.date_yyyymmdd): ValidatorFn {\n  const fn = (control: AbstractControl) => {\n    const value = control.value;\n    const isValid = !value || value.match(dateRegPattern);\n    return isValid ? null : {'dateFormat': {value, 'format': dateRegPattern}};\n  };\n  return fn;\n};\n\nexport function dateFormatValidationMessage(error, field) {\n  return `æ¥ææ ¼å¼å¿é¡»æ¯ã${error.format}ãè¿æ ·çå½¢å¼`;\n}\n","import {AbstractControl, FormGroup, ValidatorFn} from '@angular/forms';\nimport {FormUtils} from '@er/utils';\n\n\nexport const equalToValidator = function (controlName: string): ValidatorFn {\n  const fn = (control: AbstractControl) => {\n    let parent = control.parent;\n    let target: AbstractControl;\n    while (parent instanceof FormGroup) {\n      target =  FormUtils.getFormControl(parent, controlName);\n      if (target) { break; }\n      parent = parent.parent;\n    }\n    if (target) {\n      const value = control.value;\n      const targetValue = target.value;\n      const isValid = value === targetValue;\n      return isValid ? null : {'equalTo': {value, controlName}};\n    }\n    return null;\n  };\n  return fn;\n};\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\nimport {CommonsUtils, RegUtils} from '@er/utils';\n\nexport const matchValidator = function (pattern: string | string[] | RegExp | RegExp[], errorKey: string = 'match'): ValidatorFn {\n  const fn = (control: AbstractControl) => {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, pattern) ? null : {[errorKey]: {pattern, value}};\n  };\n  return fn;\n};","import {AbstractControl, FormGroup, ValidatorFn} from '@angular/forms';\nimport {FormUtils} from '@er/utils';\n\n\nexport const notEqualToValidator = function (controlName: string): ValidatorFn {\n  const fn = (control: AbstractControl) => {\n    let parent = control.parent;\n    let target: AbstractControl;\n    while (parent instanceof FormGroup) {\n      target =  FormUtils.getFormControl(parent, controlName);\n      if (target) { break; }\n      parent = parent.parent;\n    }\n    if (target) {\n      const value = control.value;\n      const targetValue = target.value;\n      const isValid = value !== targetValue;\n      return isValid ? null : {'notEqualTo': {value, controlName}};\n    }\n    return null;\n  };\n  return fn;\n};\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\n\n\nexport interface PasswordValidatorOptions {\n  minLength?: number;\n  maxLength?: number;\n  requireLetters?: boolean;\n  requireLowerCaseLetters?: boolean;\n  requireUpperCaseLetters?: boolean;\n  requireNumbers?: boolean;\n  requireSpecialCharacters?: boolean;\n}\n\nexport const passwordValidator = function (options?: PasswordValidatorOptions): ValidatorFn {\n\n  if (!options) {\n    options = {\n      minLength: 6,\n      requireLetters: true,\n      requireNumbers: true\n    };\n  }\n\n  const validator = new PasswordValidator(options);\n\n  return (control: AbstractControl) => {\n    return validator.validate(control.value);\n  };\n};\n\nclass PasswordValidator {\n\n  private letterMatcher = /[a-zA-Z]/;\n  private lowerCaseLetterMatcher = /[a-z]/;\n  private upperCaseLetterMatcher = /[A-Z]/;\n  private numberMatcher = /[0-9]/;\n  private specialCharactersMatcher = /[-+=_.,:;~`!@#$%^&*(){}<>\\[\\]\"'\\/\\\\]/;\n\n\n  constructor(private options: PasswordValidatorOptions) {\n  }\n\n\n  validate(value: string): any {\n\n    if (!value) {\n      return null;\n    }\n\n    const errors: any = {};\n\n    // Minimum length.\n    if (this.options.minLength > 0 && value.length < this.options.minLength) {\n      errors.passwordMinLengthRequired = {\n        minLength: this.options.minLength\n      };\n    }\n\n    // Maximum length.\n    if (this.options.maxLength >= 0 && value.length > this.options.maxLength) {\n      errors.passwordMaxLengthExceeded = {\n        maxLength: this.options.maxLength\n      };\n    }\n\n    // Letters.\n    if (this.options.requireLetters && !this.letterMatcher.test(value)) {\n      errors.passwordLetterRequired = true;\n    }\n\n    // Lower-case letters.\n    if (this.options.requireLowerCaseLetters && !this.lowerCaseLetterMatcher.test(value)) {\n      errors.passwordLowerCaseLetterRequired = true;\n    }\n\n    // Upper-case letters.\n    if (this.options.requireUpperCaseLetters && !this.upperCaseLetterMatcher.test(value)) {\n      errors.passwordUpperCaseLetterRequired = true;\n    }\n\n    // Numbers.\n    if (this.options.requireNumbers && !this.numberMatcher.test(value)) {\n      errors.passwordNumberRequired = true;\n    }\n\n    // Special characters.\n    if (this.options.requireSpecialCharacters && !this.specialCharactersMatcher.test(value)) {\n      errors.passwordSpecialCharacterRequired = true;\n    }\n\n    return Object.keys(errors).length > 0 ? {password: {errors, options: this.options}} : null;\n\n  }\n\n}\n\nexport function passwordValidationMessage(error) {\n  const options = <PasswordValidatorOptions>error.options;\n  let s = [];\n  if (options.minLength) {\n    s.push('æå°' + options.minLength + 'ä½');\n  }\n  if (options.maxLength) {\n    s.push('æå¤' + options.maxLength + 'ä½');\n  }\n  if (options.requireLetters) {\n    s.push('åå«å­æ¯');\n  }\n  if (options.requireLowerCaseLetters) {\n    s.push('åå«å°åå­æ¯');\n  }\n  if (options.requireUpperCaseLetters) {\n    s.push('åå«å¤§å°å­æ¯');\n  }\n  if (options.requireNumbers) {\n    s.push('åå«æ°å­');\n  }\n  if (options.requireSpecialCharacters) {\n    s.push('åå«éæ°å­åå­æ¯');\n  }\n  return `ç»å½å¯ç å¿é¡»:<br>${s.join('<br>')}`;\n};\n","import {AbstractControl, Validators} from '@angular/forms';\nimport {RegPatterns} from '@er/types';\nimport {CommonsUtils, IdCardUtils, RegUtils} from '@er/utils';\nimport {CustomValidators} from 'ng2-validation';\nimport {dateAfterValidator} from './after/validator';\nimport {ageValidator} from './age-range/validator';\nimport {dateBeforeValidator} from './before/validator';\nimport {dateBetweenValidator} from './between/validator';\nimport {conditionValidator} from './condition/validator';\nimport {dateFormatValidator} from './date-format/validator';\nimport {equalToValidator} from './equal-to/validator';\nimport {matchValidator} from './match/validator';\nimport {notEqualToValidator} from './not-equal-to/validator';\nimport {passwordValidationMessage, passwordValidator, PasswordValidatorOptions} from './password/validator';\n\nexport {PasswordValidatorOptions} from './password/validator';\n\nexport class NgValidators {\n\n  static required = Validators.required;\n  static accept = Validators.requiredTrue;\n\n  static email = CustomValidators.email;\n  static url = CustomValidators.url;\n  static date = CustomValidators.date;\n  static json = CustomValidators.json;\n  static base64 = CustomValidators.base64;\n  static creditCard = CustomValidators.creditCard;\n\n  static letter(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.letter) ? null : {letter: true};\n  }\n\n  static character(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.character) ? null : {character: true};\n  }\n\n  static ascii(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.ascii) ? null : {ascii: true};\n  }\n\n  static chinese(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.chinese) ? null : {chinese: true};\n  }\n\n  static digit(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.digit) ? null : {digit: true};\n  }\n\n  static integer(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.integer) ? null : {integer: true};\n  }\n\n  static numeric(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.numeric) ? null : {numeric: true};\n  }\n\n  static phone(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.phone) ? null : {phone: true};\n  }\n\n  static idCard(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    const validation = IdCardUtils.test(value);\n\n    return validation.status ? null : {idCard: true};\n  }\n\n  static ip(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.ip) ? null : {ip: true};\n  }\n\n  static halfWidth(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.halfWidth) ? null : {halfWidth: true};\n  }\n\n  static fullWidth(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.fullWidth) ? null : {fullWidth: true};\n  }\n\n  static match(pattern: string | string[] | RegExp | RegExp[]) {\n    return matchValidator(pattern);\n  }\n\n  static password(options?: PasswordValidatorOptions) {\n    return passwordValidator(options);\n  }\n\n  static before(before: Date | string) {\n    return dateBeforeValidator(before);\n  }\n\n  static after(after: Date | string) {\n    return dateAfterValidator(after);\n  }\n\n  static between(before: Date | string, after: Date | string) {\n    return dateBetweenValidator(before, after);\n  }\n\n  static dateFormat(formatPattern?: RegExp) {\n    return dateFormatValidator(formatPattern);\n  }\n\n  static age(min: number = 0, max: number = 0) {\n    return ageValidator(min, max);\n  }\n\n  static condition(conditionFn: (value: any) => boolean) {\n    return conditionValidator(conditionFn);\n  }\n\n  static equalTo(controlName: string) {\n    return equalToValidator(controlName);\n  }\n\n  static notEqualTo(controlName: string) {\n    return notEqualToValidator(controlName);\n  }\n\n  static minLength(minlength: number) {\n    return Validators.minLength(minlength);\n  }\n\n  static maxLength(maxlength: number) {\n    return Validators.maxLength(maxlength);\n  }\n\n  static min(minValue: number) {\n    return Validators.min(minValue);\n  }\n\n  static max(maxValue: number) {\n    return Validators.max(maxValue);\n  }\n\n  static pattern(reg: string | RegExp) {\n    return Validators.pattern(reg);\n  }\n\n  static rangeLength(minLength: number, maxLength: number) {\n    return CustomValidators.rangeLength([minLength, maxLength]);\n  }\n\n  static range(min: number, max: number) {\n    return CustomValidators.range([min, max]);\n  }\n\n  static gt(value: number) {\n    return CustomValidators.gt(value);\n  }\n\n  static gte(value: number) {\n    return CustomValidators.gte(value);\n  }\n\n  static lt(value: number) {\n    return CustomValidators.lt(value);\n  }\n\n  static lte(value: number) {\n    return CustomValidators.lte(value);\n  }\n\n  static minDate(minDate: string) {\n    return CustomValidators.minDate(minDate);\n  }\n\n  static maxDate(maxDate: string) {\n    return CustomValidators.maxDate(maxDate);\n  }\n\n  static equal(s: any) {\n    return CustomValidators.equal(s);\n  }\n\n  static notEqual(s: any) {\n    return CustomValidators.notEqual(s);\n  }\n\n  static equalTo2(control: AbstractControl) {\n    return CustomValidators.equalTo(control);\n  }\n\n  static notEqualTo2(control: AbstractControl) {\n    return CustomValidators.notEqualTo(control);\n  }\n}\n\nexport class NgValidateMessages {\n  static required = 'æ­¤é¡¹åå®¹å¿é¡»å¡«å';\n  static pattern = 'æ ¼å¼ä¸ç¬¦åè¦æ±';\n  static letter = 'æ­¤é¡¹åå®¹å¿é¡»æ¯è±æå­æ¯';\n  static digit = 'æ­¤é¡¹åå®¹å¿é¡»æ¯æ°å­';\n  static character = 'æ­¤é¡¹åå®¹å¿é¡»æ¯è±æå­æ¯ææ°å­';\n  static chinese = 'æ­¤é¡¹åå®¹å¿é¡»æ¯ç®ä½ä¸­æ';\n  static integer = 'æ­¤é¡¹åå®¹å¿é¡»æ¯æ´æ°';\n  static number = 'æ­¤é¡¹åå®¹å¿é¡»æ¯æ°å¼';\n  static fullWidth = 'æ­¤é¡¹åå®¹å¿é¡»æ¯å¨è§';\n  static halfWidth = 'æ­¤é¡¹åå®¹å¿é¡»æ¯åè§';\n  static phone = 'ææºå·ç æ ¼å¼ä¸ç¬¦åè¦æ±';\n  static condition = 'è¾å¥ä¸ç¬¦åè¦æ±';\n  static email = 'æ æçemailå°å';\n  static idCard = 'æ æçèº«ä»½è¯å·';\n  static not_matching = 'å¯ç ä¸å¹é';\n  static unique = 'è¯¥å¼å·²ç»å­å¨';\n  static gte = 'è¾å¥ä¸ç¬¦åè¦æ±';\n  static url = 'å°åæ ¼å¼ä¸ç¬¦åè¦æ±';\n  static date = 'æ¥ææ ¼å¼ä¸ç¬¦åè¦æ±';\n  static maxDate = 'è¾å¥ä¸ç¬¦åè¦æ±';\n  static json = 'è¾å¥ä¸ç¬¦åè¦æ±';\n  static base64 = 'è¾å¥ä¸ç¬¦åè¦æ±';\n  static equal = 'ä¸¤æ¬¡è¾å¥ä¸ä¸è´';\n  static notEqual = 'ä¸¤æ¬¡è¾å¥ä¸è½ä¸è´';\n  static equalTo = 'ä¸¤æ¬¡è¾å¥ä¸ä¸è´';\n  static notEqualTo = 'ä¸¤æ¬¡è¾å¥ä¸è½ä¸è´';\n  static duplicated = 'å½åå¼å·²ç»å­å¨ï¼ä¸è½éå¤';\n  static exists = 'å½åå¼å·²ç»å­å¨ï¼ä¸è½ä½¿ç¨';\n\n  static maxlength(error) {\n    return `é¿åº¦ä¸è½å¤§äº<strong>${error.requiredLength}</strong>ä¸ªå­`;\n  }\n\n  static minlength(error) {\n    return `é¿åº¦ä¸è½å°äº<strong>${error.requiredLength}</strong>ä¸ªå­`;\n  }\n\n  static min(error) {\n    return `ä¸è½å°äº<strong>${error.min}</strong>`;\n  }\n\n  static max(error) {\n    return `ä¸è½å¤§äº<strong>${error.max}</strong>`;\n  }\n\n  static age(error) {\n    return `å¹´é¾å¿é¡»ä»äº ${error.min} ${error.max}`;\n  }\n\n  static password(error) {\n    return passwordValidationMessage(error);\n  }\n\n  static dateBefore(error) {\n    return `æ¥æå¿é¡»å¨ ${error.before}ä¹å`;\n  }\n\n  static dateAfter(error) {\n    return `æ¥æå¿é¡»å¨ ${error.after}ä¹å`;\n  }\n\n  static dataBetween(error) {\n    return `æ¥æå¿é¡»å¨ ${error.before}å${error.after}ä¹é´`;\n  }\n\n  static rangeLength(error) {\n    return `é¿åº¦å¿é¡»å¤§äº<strong>${error.max}</strong>`;\n  }\n\n  static gt(error) {\n    return `å¿é¡»å¤§äº<strong>${error.max}</strong>`;\n  }\n\n  static lt(error) {\n    return `ä¸è½å¤§äº<strong>${error.lt}</strong>`;\n  }\n\n  static lte(error) {\n    return `ä¸è½å¤§äº<strong>${error.lte}</strong>`;\n  }\n\n  static range(error) {\n    return `ä¸è½å¤§äº<strong>${error.lte}</strong>`;\n  }\n\n  static minDate(error) {\n    return `æ¥æä¸è½å°äº<strong>${error.minDate}</strong>`;\n  }\n}\n","import {AbstractControl, FormArray, FormControl, FormGroup, ValidationErrors} from '@angular/forms';\nimport {CommonsUtils} from '@er/utils';\nimport {NgValidateMessages} from '../validators/all';\n\n\nexport class ValidateUtils {\n\n  static getFormErrors(form: AbstractControl, messages?: { [key: string]: string }, formlyfield?: any) {\n    const errors = {};\n    if (form instanceof FormControl) {\n      return (ValidateUtils.getControlErrors(<FormControl>form, messages, formlyfield));\n    } else if (form instanceof FormGroup) {\n      Object.keys(form.controls).map(name =>\n        errors[name] = (ValidateUtils.getFormErrors(<FormGroup>form.controls[name], messages, formlyfield))\n      );\n    } else if (form instanceof FormArray) {\n      const err = [];\n      (<FormArray>form.controls[name]).controls.forEach(control =>\n        err.push((ValidateUtils.getFormErrors(control, messages, formlyfield)))\n      );\n      return err;\n    }\n    return errors;\n  }\n\n  static getControlErrors(control: FormControl, messages?: { [key: string]: string }, formlyfield?: any) {\n    return ValidateUtils.getErrorMessage(control.errors, messages, formlyfield);\n  }\n\n  static getErrorMessage(errors: ValidationErrors, messages?: { [key: string]: string }, formlyfield?: any) {\n    if (!errors) {\n      return {};\n    }\n    const errorMessages = {};\n    Object.keys(errors).forEach(key => {\n      let message;\n      if (formlyfield) {\n        if (formlyfield.validators && formlyfield.validators[key] && formlyfield.validators[key].message) {\n          message = formlyfield.validators[key].message;\n        } else if (formlyfield.asyncValidators && formlyfield.asyncValidators[key] && formlyfield.asyncValidators[key].message) {\n          message = formlyfield.asyncValidators[key].message;\n        }\n      }\n      if (!message) {\n        if (messages && messages.hasOwnProperty(key)) {\n          message = messages[key];\n        } else if (NgValidateMessages.hasOwnProperty(key)) {\n          message = NgValidateMessages[key];\n        } else {\n          message = key;\n        }\n      }\n      if (typeof message === 'string') {\n        errorMessages[key] = message;\n      } else if (typeof message === 'function') {\n        errorMessages[key] = message.apply(this, [errors[key], formlyfield]);\n      }\n    });\n    return errorMessages;\n  }\n\n  static dynaValidationMessageFn(\n    error,\n    context?: { errorKey?: string, format?: string, errorProps?: string | string[], formlyField?: any }\n  ) {\n    let values = [];\n    if (CommonsUtils.isJson(error) && context.errorProps) {\n      if (Array.isArray(context.errorProps)) {\n        context.errorProps.forEach(key => values.push(error[key]));\n      } else {\n        values.push(error[context.errorProps]);\n      }\n    } else {\n      const dyna: any[] = CommonsUtils.get(context, 'validation.dyna', []);\n      const info = CommonsUtils.find(dyna, {key: context.errorKey});\n      if (info) {\n        values = info['args'] || [];\n      }\n    }\n    return CommonsUtils.templateStr(context.format, values);\n  }\n}\n","import {ChangeDetectionStrategy, Component, ContentChild, Input, OnDestroy, OnInit, Optional, TemplateRef} from '@angular/core';\nimport {ControlContainer, FormGroup, FormGroupDirective} from '@angular/forms';\nimport {CommonsUtils} from '@er/utils';\nimport {Subject, Subscription} from 'rxjs';\nimport {ValidateUtils} from '../../utils';\n\n\n@Component({\n  selector: 'er-form-validate-messages',\n  templateUrl: 'tpl.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormValidateMessagesComponent implements OnInit, OnDestroy {\n\n  @Input() form: FormGroup;\n\n  @Input() messages: { [key: string]: string };\n\n  @Input() fields: {};\n\n  @Input() styleClass: string;\n\n  @ContentChild(TemplateRef) errorMsgTpl: TemplateRef<any>;\n\n  errors$: Subject<{}> = new Subject();\n\n  subscription: Subscription;\n\n  constructor(@Optional() private controlContainer: ControlContainer) {\n  }\n\n  checkFormValidate() {\n    if (this.form.invalid) {\n      alert();\n      this.errors$.next(ValidateUtils.getFormErrors(this.form, this.messages, this.fields));\n    } else {\n      this.errors$.next(undefined);\n    }\n  }\n\n  ngOnInit(): void {\n    if (!this.form && this.controlContainer) {\n      this.form = this.controlContainer.formDirective ? (this.controlContainer.formDirective as FormGroupDirective).form : null;\n    }\n    if (this.form) {\n      this.subscription = this.form.statusChanges\n        .subscribe(() => {\n          this.checkFormValidate();\n        });\n    }\n  }\n\n  errorKeys(errors: {}) {\n    return Object.keys(errors);\n  }\n\n  errorMsg(error) {\n    return CommonsUtils.getText(error);\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  TemplateRef\n} from '@angular/core';\nimport {ControlContainer, FormControl, FormGroupDirective} from '@angular/forms';\nimport {FormUtils} from '@er/utils';\nimport {Subscription} from 'rxjs';\nimport {BehaviorSubject} from 'rxjs/internal/BehaviorSubject';\nimport {ValidateUtils} from '../../utils';\n\n\n@Component({\n  selector: 'er-validate-messages',\n  template: `\n    <div *ngIf=\"errors$|async as errors\">\n      <ng-container *ngTemplateOutlet=\"errorMsgTpl?errorMsgTpl:defaultTpl;context:{$implicit:errors}\"></ng-container>\n    </div>\n    <ng-template #defaultTpl let-errors>\n      <div class=\"text-danger\" [ngClass]=\"styleClass\">\n        <ul *ngFor=\"let error of errors \" class=\"d-flex flex-column justify-content-start\">\n          <li [innerHTML]=\"error.value\" class=\"my-1\" style=\"font-size: 0.8em\"></li>\n        </ul>\n      </div>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ValidateMessagesComponent implements OnInit, OnDestroy {\n\n  @Input() control: FormControl;\n\n  @Input() controlName: string;\n\n  @Input() formlyField: any;\n\n  @Input() force: boolean;\n\n  @Input() styleClass: string;\n\n  @Input() showAllErrors = true;\n\n  @Input() messages: { [key: string]: string };\n\n  @ContentChild(TemplateRef) errorMsgTpl: TemplateRef<any>;\n\n  errors$: BehaviorSubject<string[]> = new BehaviorSubject<string[]>(undefined);\n\n  subscription: Subscription;\n\n  constructor(@Optional() private controlContainer: ControlContainer, private cd: ChangeDetectorRef) {\n  }\n\n  getErrorMessages() {\n    if (this.control.dirty && this.control.invalid) {\n      const errorMessages = ValidateUtils.getErrorMessage(this.control.errors);\n      const errors = this.showAllErrors ? errorMessages : this.getFirstError(errorMessages);\n      this.errors$.next(this.getErrors(errors));\n    } else {\n      return this.errors$.next([]);\n    }\n  }\n\n  getFirstError(errorMessages) {\n    if (Object.keys(errorMessages).length > 0) {\n      return errorMessages[Object.keys(errorMessages)[0]];\n    }\n    return 'æ ¡éªå¤±è´¥';\n  }\n\n  getErrors(errorMessages) {\n    const lst = [];\n    if (errorMessages) {\n      Object.keys(errorMessages).map(key => {\n        lst.push({key, value: (this.messages && this.messages[key]) || errorMessages[key]});\n      });\n    }\n    return lst;\n  }\n\n  ngOnInit(): void {\n    if (!this.control) {\n      if (this.formlyField) {\n        this.control = this.formlyField.formControl;\n      }\n      if (!this.control && this.controlContainer) {\n        const form = this.controlContainer.formDirective ? (this.controlContainer.formDirective as FormGroupDirective).form : null;\n        if (form) {\n          this.control = FormUtils.getFormControl(form, ...this.controlContainer.path, this.controlName);\n        }\n      }\n    }\n    if (this.control) {\n      this.subscription = this.control.statusChanges.subscribe(() => {\n        this.getErrorMessages();\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import {Directive, HostListener, Optional} from '@angular/core';\nimport {NgControl} from '@angular/forms';\n\n@Directive({\n  selector: '[erValidateOnBlur]'\n})\nexport class ValidateOnBlurMessageDirective {\n\n  private validators: any;\n  private asyncValidators: any;\n\n  constructor(@Optional() private model: NgControl) {\n  }\n\n  get control() {\n    if (this.model && this.model.control) {\n      return this.model.control;\n    } else {\n      return undefined;\n    }\n  }\n\n  @HostListener('focus')\n  onFocus() {\n    if (this.control) {\n      this.validators = this.control.validator;\n      this.asyncValidators = this.control.asyncValidator;\n      this.control.clearAsyncValidators();\n      this.control.clearValidators();\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.control) {\n      this.control.setAsyncValidators(this.asyncValidators);\n      this.control.setValidators(this.validators);\n      this.control.updateValueAndValidity();\n    }\n  }\n\n}\n","import {\n  AfterViewInit,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  HostBinding,\n  Input,\n  Optional,\n  ViewContainerRef\n} from '@angular/core';\nimport {FormControl, NgControl} from '@angular/forms';\nimport {CacheUtils} from '@er/utils';\nimport {ValidateMessagesComponent} from '../../components/control/component';\n\n\n/* tslint:disable:directive-selector */\n@Directive({\n  selector: '[erValidate]'\n})\nexport class ValidationMessageDirective implements AfterViewInit {\n\n  @Input() messages: { [key: string]: string };\n\n  @Input() showError = true;\n\n  @Input() enableValidation = true;\n\n  currentState: string;\n\n  private componentFactory: ComponentFactory<ValidateMessagesComponent>;\n  private componentRef: ComponentRef<ValidateMessagesComponent>;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\n              private viewContainerRef: ViewContainerRef,\n              @Optional() private ngControl: NgControl) {\n  }\n\n  get control() {\n    if (this.ngControl && this.ngControl.control) {\n      return this.ngControl.control;\n    } else {\n      return undefined;\n    }\n  }\n\n  @HostBinding('class.er-valid')\n  get isValid(): boolean {\n    if (!this.showError || (!this.ngControl && this.ngControl.control == null)) {\n      return false;\n    }\n    return this.ngControl && this.ngControl.control && this.ngControl.control.valid;\n  }\n\n  @HostBinding('class.er-invalid')\n  get isInvalid(): boolean {\n    if (!this.showError || (!this.ngControl && this.ngControl.control == null)) {\n      return false;\n    }\n    return this.ngControl && this.ngControl.control && this.ngControl.control.invalid;\n  }\n\n  ngAfterViewInit() {\n    if (!this.ngControl || !this.enableValidation) {\n      return;\n    }\n\n    const attrs: NamedNodeMap = this.viewContainerRef.element.nativeElement.attributes;\n    if (attrs) {\n      const tag = !!attrs.getNamedItem('noerror');\n      if (this.showError && tag) {\n        this.showError = false;\n        return;\n      }\n    }\n\n    this.componentFactory = CacheUtils.get('$componentFactory', 'ValidateMessagesComponentFactory');\n    if (!this.componentFactory) {\n      this.componentFactory = this.componentFactoryResolver.resolveComponentFactory(ValidateMessagesComponent);\n      CacheUtils.put('$componentFactory', 'validationMessagesComponentFactory', this.componentFactory);\n    }\n    const className = this.viewContainerRef.element.nativeElement.parentElement.className;\n    if (className.indexOf('input-group') >= 0) {\n    }\n    this.componentRef = this.viewContainerRef.createComponent(this.componentFactory);\n    (<ValidateMessagesComponent>this.componentRef.instance).messages = this.messages;\n    (<ValidateMessagesComponent>this.componentRef.instance).control = <FormControl>this.control;\n  }\n\n\n\n}\n","import {AfterViewInit, ComponentFactoryResolver, Directive, HostBinding, Input, Optional, ViewContainerRef} from '@angular/core';\nimport {NgControl} from '@angular/forms';\n\n\n/* tslint:disable:directive-selector */\n@Directive({\n  selector: '[formControlName],[formControl],[ngModel]'\n})\nexport class ValidateStateDirective implements AfterViewInit {\n\n  @Input() messages: { [key: string]: string };\n\n  @Input() showError = true;\n\n  @Input() enableValidation = true;\n\n  currentState: string;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\n              private viewContainerRef: ViewContainerRef,\n              @Optional() private ngControl: NgControl) {\n  }\n\n  get control() {\n    if (this.ngControl && this.ngControl.control) {\n      return this.ngControl.control;\n    } else {\n      return undefined;\n    }\n  }\n\n  @HostBinding('class.er-valid')\n  get isValid(): boolean {\n    if (!this.showError || (!this.ngControl && this.ngControl.control == null)) {\n      return false;\n    }\n    return this.ngControl && this.ngControl.control && this.ngControl.control.valid;\n  }\n\n  ngAfterViewInit() {\n    if (!this.ngControl || !this.enableValidation) {\n      return;\n    }\n\n    const attrs: NamedNodeMap = this.viewContainerRef.element.nativeElement.attributes;\n    if (attrs) {\n      const tag = !!attrs.getNamedItem('noerror');\n      if (this.showError && tag) {\n        this.showError = false;\n        return;\n      }\n    }\n  }\n\n}\n","import {ValidateOnBlurMessageDirective} from './control-on-blur/directive';\nimport {ValidationMessageDirective} from './control/validate-message.directive';\nimport {ValidateStateDirective} from './control/validate-state.directive';\n\nexport {ValidationMessageDirective} from './control/validate-message.directive';\nexport {ValidateStateDirective} from './control/validate-state.directive';\nexport {ValidateOnBlurMessageDirective} from './control-on-blur/directive';\n\n\nexport const directives = [\n  ValidationMessageDirective,\n  ValidateStateDirective,\n  ValidateOnBlurMessageDirective\n]\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CustomFormsModule} from 'ng2-validation';\nimport {ValidateMessagesComponent} from './components/control/component';\nimport {FormValidateMessagesComponent} from './components/form/component';\nimport {directives} from './directives/all';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CustomFormsModule\n  ],\n  declarations: [\n    ValidateMessagesComponent,\n    FormValidateMessagesComponent,\n    ...directives\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    ValidateMessagesComponent,\n    FormValidateMessagesComponent,\n    ...directives\n  ],\n  entryComponents: [\n    ValidateMessagesComponent\n  ]\n})\nexport class ErValidateModule {\n}\n"]}