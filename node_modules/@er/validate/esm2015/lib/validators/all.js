/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Validators } from '@angular/forms';
import { RegPatterns } from '@er/types';
import { CommonsUtils, IdCardUtils, RegUtils } from '@er/utils';
import { CustomValidators } from 'ng2-validation';
import { dateAfterValidator } from './after/validator';
import { ageValidator } from './age-range/validator';
import { dateBeforeValidator } from './before/validator';
import { dateBetweenValidator } from './between/validator';
import { conditionValidator } from './condition/validator';
import { dateFormatValidator } from './date-format/validator';
import { equalToValidator } from './equal-to/validator';
import { matchValidator } from './match/validator';
import { notEqualToValidator } from './not-equal-to/validator';
import { passwordValidationMessage, passwordValidator } from './password/validator';
export class NgValidators {
    /**
     * @param {?} control
     * @return {?}
     */
    static letter(control) {
        /** @type {?} */
        const value = control.value;
        if (CommonsUtils.isEmptyString(value)) {
            return null;
        }
        return RegUtils.test(value, RegPatterns.letter) ? null : { letter: true };
    }
    /**
     * @param {?} control
     * @return {?}
     */
    static character(control) {
        /** @type {?} */
        const value = control.value;
        if (CommonsUtils.isEmptyString(value)) {
            return null;
        }
        return RegUtils.test(value, RegPatterns.character) ? null : { character: true };
    }
    /**
     * @param {?} control
     * @return {?}
     */
    static ascii(control) {
        /** @type {?} */
        const value = control.value;
        if (CommonsUtils.isEmptyString(value)) {
            return null;
        }
        return RegUtils.test(value, RegPatterns.ascii) ? null : { ascii: true };
    }
    /**
     * @param {?} control
     * @return {?}
     */
    static chinese(control) {
        /** @type {?} */
        const value = control.value;
        if (CommonsUtils.isEmptyString(value)) {
            return null;
        }
        return RegUtils.test(value, RegPatterns.chinese) ? null : { chinese: true };
    }
    /**
     * @param {?} control
     * @return {?}
     */
    static digit(control) {
        /** @type {?} */
        const value = control.value;
        if (CommonsUtils.isEmptyString(value)) {
            return null;
        }
        return RegUtils.test(value, RegPatterns.digit) ? null : { digit: true };
    }
    /**
     * @param {?} control
     * @return {?}
     */
    static integer(control) {
        /** @type {?} */
        const value = control.value;
        if (CommonsUtils.isEmptyString(value)) {
            return null;
        }
        return RegUtils.test(value, RegPatterns.integer) ? null : { integer: true };
    }
    /**
     * @param {?} control
     * @return {?}
     */
    static numeric(control) {
        /** @type {?} */
        const value = control.value;
        if (CommonsUtils.isEmptyString(value)) {
            return null;
        }
        return RegUtils.test(value, RegPatterns.numeric) ? null : { numeric: true };
    }
    /**
     * @param {?} control
     * @return {?}
     */
    static phone(control) {
        /** @type {?} */
        const value = control.value;
        if (CommonsUtils.isEmptyString(value)) {
            return null;
        }
        return RegUtils.test(value, RegPatterns.phone) ? null : { phone: true };
    }
    /**
     * @param {?} control
     * @return {?}
     */
    static idCard(control) {
        /** @type {?} */
        const value = control.value;
        if (CommonsUtils.isEmptyString(value)) {
            return null;
        }
        /** @type {?} */
        const validation = IdCardUtils.test(value);
        return validation.status ? null : { idCard: true };
    }
    /**
     * @param {?} control
     * @return {?}
     */
    static ip(control) {
        /** @type {?} */
        const value = control.value;
        if (CommonsUtils.isEmptyString(value)) {
            return null;
        }
        return RegUtils.test(value, RegPatterns.ip) ? null : { ip: true };
    }
    /**
     * @param {?} control
     * @return {?}
     */
    static halfWidth(control) {
        /** @type {?} */
        const value = control.value;
        if (CommonsUtils.isEmptyString(value)) {
            return null;
        }
        return RegUtils.test(value, RegPatterns.halfWidth) ? null : { halfWidth: true };
    }
    /**
     * @param {?} control
     * @return {?}
     */
    static fullWidth(control) {
        /** @type {?} */
        const value = control.value;
        if (CommonsUtils.isEmptyString(value)) {
            return null;
        }
        return RegUtils.test(value, RegPatterns.fullWidth) ? null : { fullWidth: true };
    }
    /**
     * @param {?} pattern
     * @return {?}
     */
    static match(pattern) {
        return matchValidator(pattern);
    }
    /**
     * @param {?=} options
     * @return {?}
     */
    static password(options) {
        return passwordValidator(options);
    }
    /**
     * @param {?} before
     * @return {?}
     */
    static before(before) {
        return dateBeforeValidator(before);
    }
    /**
     * @param {?} after
     * @return {?}
     */
    static after(after) {
        return dateAfterValidator(after);
    }
    /**
     * @param {?} before
     * @param {?} after
     * @return {?}
     */
    static between(before, after) {
        return dateBetweenValidator(before, after);
    }
    /**
     * @param {?=} formatPattern
     * @return {?}
     */
    static dateFormat(formatPattern) {
        return dateFormatValidator(formatPattern);
    }
    /**
     * @param {?=} min
     * @param {?=} max
     * @return {?}
     */
    static age(min = 0, max = 0) {
        return ageValidator(min, max);
    }
    /**
     * @param {?} conditionFn
     * @return {?}
     */
    static condition(conditionFn) {
        return conditionValidator(conditionFn);
    }
    /**
     * @param {?} controlName
     * @return {?}
     */
    static equalTo(controlName) {
        return equalToValidator(controlName);
    }
    /**
     * @param {?} controlName
     * @return {?}
     */
    static notEqualTo(controlName) {
        return notEqualToValidator(controlName);
    }
    /**
     * @param {?} minlength
     * @return {?}
     */
    static minLength(minlength) {
        return Validators.minLength(minlength);
    }
    /**
     * @param {?} maxlength
     * @return {?}
     */
    static maxLength(maxlength) {
        return Validators.maxLength(maxlength);
    }
    /**
     * @param {?} minValue
     * @return {?}
     */
    static min(minValue) {
        return Validators.min(minValue);
    }
    /**
     * @param {?} maxValue
     * @return {?}
     */
    static max(maxValue) {
        return Validators.max(maxValue);
    }
    /**
     * @param {?} reg
     * @return {?}
     */
    static pattern(reg) {
        return Validators.pattern(reg);
    }
    /**
     * @param {?} minLength
     * @param {?} maxLength
     * @return {?}
     */
    static rangeLength(minLength, maxLength) {
        return CustomValidators.rangeLength([minLength, maxLength]);
    }
    /**
     * @param {?} min
     * @param {?} max
     * @return {?}
     */
    static range(min, max) {
        return CustomValidators.range([min, max]);
    }
    /**
     * @param {?} value
     * @return {?}
     */
    static gt(value) {
        return CustomValidators.gt(value);
    }
    /**
     * @param {?} value
     * @return {?}
     */
    static gte(value) {
        return CustomValidators.gte(value);
    }
    /**
     * @param {?} value
     * @return {?}
     */
    static lt(value) {
        return CustomValidators.lt(value);
    }
    /**
     * @param {?} value
     * @return {?}
     */
    static lte(value) {
        return CustomValidators.lte(value);
    }
    /**
     * @param {?} minDate
     * @return {?}
     */
    static minDate(minDate) {
        return CustomValidators.minDate(minDate);
    }
    /**
     * @param {?} maxDate
     * @return {?}
     */
    static maxDate(maxDate) {
        return CustomValidators.maxDate(maxDate);
    }
    /**
     * @param {?} s
     * @return {?}
     */
    static equal(s) {
        return CustomValidators.equal(s);
    }
    /**
     * @param {?} s
     * @return {?}
     */
    static notEqual(s) {
        return CustomValidators.notEqual(s);
    }
    /**
     * @param {?} control
     * @return {?}
     */
    static equalTo2(control) {
        return CustomValidators.equalTo(control);
    }
    /**
     * @param {?} control
     * @return {?}
     */
    static notEqualTo2(control) {
        return CustomValidators.notEqualTo(control);
    }
}
NgValidators.required = Validators.required;
NgValidators.accept = Validators.requiredTrue;
NgValidators.email = CustomValidators.email;
NgValidators.url = CustomValidators.url;
NgValidators.date = CustomValidators.date;
NgValidators.json = CustomValidators.json;
NgValidators.base64 = CustomValidators.base64;
NgValidators.creditCard = CustomValidators.creditCard;
if (false) {
    /** @type {?} */
    NgValidators.required;
    /** @type {?} */
    NgValidators.accept;
    /** @type {?} */
    NgValidators.email;
    /** @type {?} */
    NgValidators.url;
    /** @type {?} */
    NgValidators.date;
    /** @type {?} */
    NgValidators.json;
    /** @type {?} */
    NgValidators.base64;
    /** @type {?} */
    NgValidators.creditCard;
}
export class NgValidateMessages {
    /**
     * @param {?} error
     * @return {?}
     */
    static maxlength(error) {
        return `长度不能大于<strong>${error.requiredLength}</strong>个字`;
    }
    /**
     * @param {?} error
     * @return {?}
     */
    static minlength(error) {
        return `长度不能少于<strong>${error.requiredLength}</strong>个字`;
    }
    /**
     * @param {?} error
     * @return {?}
     */
    static min(error) {
        return `不能小于<strong>${error.min}</strong>`;
    }
    /**
     * @param {?} error
     * @return {?}
     */
    static max(error) {
        return `不能大于<strong>${error.max}</strong>`;
    }
    /**
     * @param {?} error
     * @return {?}
     */
    static age(error) {
        return `年龄必须介于 ${error.min} ${error.max}`;
    }
    /**
     * @param {?} error
     * @return {?}
     */
    static password(error) {
        return passwordValidationMessage(error);
    }
    /**
     * @param {?} error
     * @return {?}
     */
    static dateBefore(error) {
        return `日期必须在 ${error.before}之前`;
    }
    /**
     * @param {?} error
     * @return {?}
     */
    static dateAfter(error) {
        return `日期必须在 ${error.after}之后`;
    }
    /**
     * @param {?} error
     * @return {?}
     */
    static dataBetween(error) {
        return `日期必须在 ${error.before}和${error.after}之间`;
    }
    /**
     * @param {?} error
     * @return {?}
     */
    static rangeLength(error) {
        return `长度必须大于<strong>${error.max}</strong>`;
    }
    /**
     * @param {?} error
     * @return {?}
     */
    static gt(error) {
        return `必须大于<strong>${error.max}</strong>`;
    }
    /**
     * @param {?} error
     * @return {?}
     */
    static lt(error) {
        return `不能大于<strong>${error.lt}</strong>`;
    }
    /**
     * @param {?} error
     * @return {?}
     */
    static lte(error) {
        return `不能大于<strong>${error.lte}</strong>`;
    }
    /**
     * @param {?} error
     * @return {?}
     */
    static range(error) {
        return `不能大于<strong>${error.lte}</strong>`;
    }
    /**
     * @param {?} error
     * @return {?}
     */
    static minDate(error) {
        return `日期不能小于<strong>${error.minDate}</strong>`;
    }
}
NgValidateMessages.required = '此项内容必须填写';
NgValidateMessages.pattern = '格式不符合要求';
NgValidateMessages.letter = '此项内容必须是英文字母';
NgValidateMessages.digit = '此项内容必须是数字';
NgValidateMessages.character = '此项内容必须是英文字母或数字';
NgValidateMessages.chinese = '此项内容必须是简体中文';
NgValidateMessages.integer = '此项内容必须是整数';
NgValidateMessages.number = '此项内容必须是数值';
NgValidateMessages.fullWidth = '此项内容必须是全角';
NgValidateMessages.halfWidth = '此项内容必须是半角';
NgValidateMessages.phone = '手机号码格式不符合要求';
NgValidateMessages.condition = '输入不符合要求';
NgValidateMessages.email = '无效的email地址';
NgValidateMessages.idCard = '无效的身份证号';
NgValidateMessages.not_matching = '密码不匹配';
NgValidateMessages.unique = '该值已经存在';
NgValidateMessages.gte = '输入不符合要求';
NgValidateMessages.url = '地址格式不符合要求';
NgValidateMessages.date = '日期格式不符合要求';
NgValidateMessages.maxDate = '输入不符合要求';
NgValidateMessages.json = '输入不符合要求';
NgValidateMessages.base64 = '输入不符合要求';
NgValidateMessages.equal = '两次输入不一致';
NgValidateMessages.notEqual = '两次输入不能一致';
NgValidateMessages.equalTo = '两次输入不一致';
NgValidateMessages.notEqualTo = '两次输入不能一致';
NgValidateMessages.duplicated = '当前值已经存在，不能重复';
NgValidateMessages.exists = '当前值已经存在，不能使用';
if (false) {
    /** @type {?} */
    NgValidateMessages.required;
    /** @type {?} */
    NgValidateMessages.pattern;
    /** @type {?} */
    NgValidateMessages.letter;
    /** @type {?} */
    NgValidateMessages.digit;
    /** @type {?} */
    NgValidateMessages.character;
    /** @type {?} */
    NgValidateMessages.chinese;
    /** @type {?} */
    NgValidateMessages.integer;
    /** @type {?} */
    NgValidateMessages.number;
    /** @type {?} */
    NgValidateMessages.fullWidth;
    /** @type {?} */
    NgValidateMessages.halfWidth;
    /** @type {?} */
    NgValidateMessages.phone;
    /** @type {?} */
    NgValidateMessages.condition;
    /** @type {?} */
    NgValidateMessages.email;
    /** @type {?} */
    NgValidateMessages.idCard;
    /** @type {?} */
    NgValidateMessages.not_matching;
    /** @type {?} */
    NgValidateMessages.unique;
    /** @type {?} */
    NgValidateMessages.gte;
    /** @type {?} */
    NgValidateMessages.url;
    /** @type {?} */
    NgValidateMessages.date;
    /** @type {?} */
    NgValidateMessages.maxDate;
    /** @type {?} */
    NgValidateMessages.json;
    /** @type {?} */
    NgValidateMessages.base64;
    /** @type {?} */
    NgValidateMessages.equal;
    /** @type {?} */
    NgValidateMessages.notEqual;
    /** @type {?} */
    NgValidateMessages.equalTo;
    /** @type {?} */
    NgValidateMessages.notEqualTo;
    /** @type {?} */
    NgValidateMessages.duplicated;
    /** @type {?} */
    NgValidateMessages.exists;
}
//# sourceMappingURL=data:application/json;base64,