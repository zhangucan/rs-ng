{"version":3,"file":"er-validate.js.map","sources":["ng://@er/validate/lib/validators/after/validator.ts","ng://@er/validate/lib/validators/age-range/validator.ts","ng://@er/validate/lib/validators/before/validator.ts","ng://@er/validate/lib/validators/between/validator.ts","ng://@er/validate/lib/validators/condition/validator.ts","ng://@er/validate/lib/validators/date-format/validator.ts","ng://@er/validate/lib/validators/equal-to/validator.ts","ng://@er/validate/lib/validators/match/validator.ts","ng://@er/validate/lib/validators/not-equal-to/validator.ts","ng://@er/validate/lib/validators/password/validator.ts","ng://@er/validate/lib/validators/all.ts","ng://@er/validate/lib/utils/index.ts","ng://@er/validate/lib/components/form/component.ts","ng://@er/validate/lib/components/control/component.ts","ng://@er/validate/lib/directives/control-on-blur/directive.ts","ng://@er/validate/lib/directives/control/validate-message.directive.ts","ng://@er/validate/lib/directives/control/validate-state.directive.ts","ng://@er/validate/lib/directives/all.ts","ng://@er/validate/lib/er-validate.module.ts"],"sourcesContent":["import {AbstractControl, ValidatorFn} from '@angular/forms';\nimport {CommonsUtils, DateUtils} from '@er/utils';\n\nexport const dateAfterValidator = function (after): ValidatorFn {\n  const fn = (control: AbstractControl) => {\n    const value = control.value;\n    if (!DateUtils.isDate(value)) {\n      return {'dateAfter': {message: 'éè¯¯çæ¥ææ ¼å¼', value}};\n    }\n    const isAfter = CommonsUtils.isAfter(value, after);\n    return isAfter ? null : {'dateAfter': {value, after}};\n  };\n  return fn;\n};\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\nimport {CommonsUtils, DateUtils} from '@er/utils';\n\nexport const ageValidator = function (min: number, max: number): ValidatorFn {\n  const fn = (control: AbstractControl) => {\n    const value = control.value;\n\n    if (!value) {\n      return null;\n    }\n\n    if (!DateUtils.isDate(value)) {\n      return {'age': {message: 'éè¯¯çæ¥ææ ¼å¼', value}};\n    }\n\n    const age = CommonsUtils.getAge(value);\n\n    const isInValid = (min > 0 && age < min) || (max > 0 && age > max);\n\n    return isInValid ? null : {'age': {min, max, value}};\n  };\n  return fn;\n};\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\nimport {CommonsUtils, DateUtils} from '@er/utils';\n\nexport const dateBeforeValidator = function(before: string | Date): ValidatorFn {\n  const fn = (control: AbstractControl) => {\n    const value = control.value;\n    if (!DateUtils.isDate(value)) {\n      return {'dataBefore': {message: 'éè¯¯çæ¥ææ ¼å¼', value}};\n    }\n    const isBefore = CommonsUtils.isBefore(control.value, before);\n    return isBefore ? null : {'dataBefore': {value, before}};\n  };\n  return fn;\n};\n\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\nimport {CommonsUtils, DateUtils} from '@er/utils';\n\nexport const dateBetweenValidator = function(before, after): ValidatorFn {\n  const fn =  (control: AbstractControl) => {\n    const value = control.value;\n    if (!DateUtils.isDate(value)) {\n      return {'dataBetween': {message: 'éè¯¯çæ¥ææ ¼å¼', value}};\n    }\n    const isBetween = CommonsUtils.isBefore(value, before)\n      && CommonsUtils.isAfter(value, after);\n    return isBetween ? null : {'dataBetween': {value, before, after}};\n  };\n  return fn;\n};\n\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\n\nexport const conditionValidator = function (condition: (value: any) => boolean): ValidatorFn {\n  const fn = (control: AbstractControl) => {\n    return condition(control.value) ? null : {\n      condition: {condition, value: control.value}\n    };\n  };\n  return fn;\n};\n\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\nimport {RegPatterns} from '@er/types';\n\nexport const dateFormatValidator = function (dateRegPattern = RegPatterns.date_yyyymmdd): ValidatorFn {\n  const fn = (control: AbstractControl) => {\n    const value = control.value;\n    const isValid = !value || value.match(dateRegPattern);\n    return isValid ? null : {'dateFormat': {value, 'format': dateRegPattern}};\n  };\n  return fn;\n};\n\nexport function dateFormatValidationMessage(error, field) {\n  return `æ¥ææ ¼å¼å¿é¡»æ¯ã${error.format}ãè¿æ ·çå½¢å¼`;\n}\n","import {AbstractControl, FormGroup, ValidatorFn} from '@angular/forms';\nimport {FormUtils} from '@er/utils';\n\n\nexport const equalToValidator = function (controlName: string): ValidatorFn {\n  const fn = (control: AbstractControl) => {\n    let parent = control.parent;\n    let target: AbstractControl;\n    while (parent instanceof FormGroup) {\n      target =  FormUtils.getFormControl(parent, controlName);\n      if (target) { break; }\n      parent = parent.parent;\n    }\n    if (target) {\n      const value = control.value;\n      const targetValue = target.value;\n      const isValid = value === targetValue;\n      return isValid ? null : {'equalTo': {value, controlName}};\n    }\n    return null;\n  };\n  return fn;\n};\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\nimport {CommonsUtils, RegUtils} from '@er/utils';\n\nexport const matchValidator = function (pattern: string | string[] | RegExp | RegExp[], errorKey: string = 'match'): ValidatorFn {\n  const fn = (control: AbstractControl) => {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, pattern) ? null : {[errorKey]: {pattern, value}};\n  };\n  return fn;\n};","import {AbstractControl, FormGroup, ValidatorFn} from '@angular/forms';\nimport {FormUtils} from '@er/utils';\n\n\nexport const notEqualToValidator = function (controlName: string): ValidatorFn {\n  const fn = (control: AbstractControl) => {\n    let parent = control.parent;\n    let target: AbstractControl;\n    while (parent instanceof FormGroup) {\n      target =  FormUtils.getFormControl(parent, controlName);\n      if (target) { break; }\n      parent = parent.parent;\n    }\n    if (target) {\n      const value = control.value;\n      const targetValue = target.value;\n      const isValid = value !== targetValue;\n      return isValid ? null : {'notEqualTo': {value, controlName}};\n    }\n    return null;\n  };\n  return fn;\n};\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\n\n\nexport interface PasswordValidatorOptions {\n  minLength?: number;\n  maxLength?: number;\n  requireLetters?: boolean;\n  requireLowerCaseLetters?: boolean;\n  requireUpperCaseLetters?: boolean;\n  requireNumbers?: boolean;\n  requireSpecialCharacters?: boolean;\n}\n\nexport const passwordValidator = function (options?: PasswordValidatorOptions): ValidatorFn {\n\n  if (!options) {\n    options = {\n      minLength: 6,\n      requireLetters: true,\n      requireNumbers: true\n    };\n  }\n\n  const validator = new PasswordValidator(options);\n\n  return (control: AbstractControl) => {\n    return validator.validate(control.value);\n  };\n};\n\nclass PasswordValidator {\n\n  private letterMatcher = /[a-zA-Z]/;\n  private lowerCaseLetterMatcher = /[a-z]/;\n  private upperCaseLetterMatcher = /[A-Z]/;\n  private numberMatcher = /[0-9]/;\n  private specialCharactersMatcher = /[-+=_.,:;~`!@#$%^&*(){}<>\\[\\]\"'\\/\\\\]/;\n\n\n  constructor(private options: PasswordValidatorOptions) {\n  }\n\n\n  validate(value: string): any {\n\n    if (!value) {\n      return null;\n    }\n\n    const errors: any = {};\n\n    // Minimum length.\n    if (this.options.minLength > 0 && value.length < this.options.minLength) {\n      errors.passwordMinLengthRequired = {\n        minLength: this.options.minLength\n      };\n    }\n\n    // Maximum length.\n    if (this.options.maxLength >= 0 && value.length > this.options.maxLength) {\n      errors.passwordMaxLengthExceeded = {\n        maxLength: this.options.maxLength\n      };\n    }\n\n    // Letters.\n    if (this.options.requireLetters && !this.letterMatcher.test(value)) {\n      errors.passwordLetterRequired = true;\n    }\n\n    // Lower-case letters.\n    if (this.options.requireLowerCaseLetters && !this.lowerCaseLetterMatcher.test(value)) {\n      errors.passwordLowerCaseLetterRequired = true;\n    }\n\n    // Upper-case letters.\n    if (this.options.requireUpperCaseLetters && !this.upperCaseLetterMatcher.test(value)) {\n      errors.passwordUpperCaseLetterRequired = true;\n    }\n\n    // Numbers.\n    if (this.options.requireNumbers && !this.numberMatcher.test(value)) {\n      errors.passwordNumberRequired = true;\n    }\n\n    // Special characters.\n    if (this.options.requireSpecialCharacters && !this.specialCharactersMatcher.test(value)) {\n      errors.passwordSpecialCharacterRequired = true;\n    }\n\n    return Object.keys(errors).length > 0 ? {password: {errors, options: this.options}} : null;\n\n  }\n\n}\n\nexport function passwordValidationMessage(error) {\n  const options = <PasswordValidatorOptions>error.options;\n  let s = [];\n  if (options.minLength) {\n    s.push('æå°' + options.minLength + 'ä½');\n  }\n  if (options.maxLength) {\n    s.push('æå¤' + options.maxLength + 'ä½');\n  }\n  if (options.requireLetters) {\n    s.push('åå«å­æ¯');\n  }\n  if (options.requireLowerCaseLetters) {\n    s.push('åå«å°åå­æ¯');\n  }\n  if (options.requireUpperCaseLetters) {\n    s.push('åå«å¤§å°å­æ¯');\n  }\n  if (options.requireNumbers) {\n    s.push('åå«æ°å­');\n  }\n  if (options.requireSpecialCharacters) {\n    s.push('åå«éæ°å­åå­æ¯');\n  }\n  return `ç»å½å¯ç å¿é¡»:<br>${s.join('<br>')}`;\n};\n","import {AbstractControl, Validators} from '@angular/forms';\nimport {RegPatterns} from '@er/types';\nimport {CommonsUtils, IdCardUtils, RegUtils} from '@er/utils';\nimport {CustomValidators} from 'ng2-validation';\nimport {dateAfterValidator} from './after/validator';\nimport {ageValidator} from './age-range/validator';\nimport {dateBeforeValidator} from './before/validator';\nimport {dateBetweenValidator} from './between/validator';\nimport {conditionValidator} from './condition/validator';\nimport {dateFormatValidator} from './date-format/validator';\nimport {equalToValidator} from './equal-to/validator';\nimport {matchValidator} from './match/validator';\nimport {notEqualToValidator} from './not-equal-to/validator';\nimport {passwordValidationMessage, passwordValidator, PasswordValidatorOptions} from './password/validator';\n\nexport {PasswordValidatorOptions} from './password/validator';\n\nexport class NgValidators {\n\n  static required = Validators.required;\n  static accept = Validators.requiredTrue;\n\n  static email = CustomValidators.email;\n  static url = CustomValidators.url;\n  static date = CustomValidators.date;\n  static json = CustomValidators.json;\n  static base64 = CustomValidators.base64;\n  static creditCard = CustomValidators.creditCard;\n\n  static letter(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.letter) ? null : {letter: true};\n  }\n\n  static character(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.character) ? null : {character: true};\n  }\n\n  static ascii(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.ascii) ? null : {ascii: true};\n  }\n\n  static chinese(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.chinese) ? null : {chinese: true};\n  }\n\n  static digit(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.digit) ? null : {digit: true};\n  }\n\n  static integer(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.integer) ? null : {integer: true};\n  }\n\n  static numeric(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.numeric) ? null : {numeric: true};\n  }\n\n  static phone(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.phone) ? null : {phone: true};\n  }\n\n  static idCard(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    const validation = IdCardUtils.test(value);\n\n    return validation.status ? null : {idCard: true};\n  }\n\n  static ip(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.ip) ? null : {ip: true};\n  }\n\n  static halfWidth(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.halfWidth) ? null : {halfWidth: true};\n  }\n\n  static fullWidth(control: AbstractControl) {\n    const value = control.value;\n    if (CommonsUtils.isEmptyString(value)) {\n      return null;\n    }\n    return RegUtils.test(value, RegPatterns.fullWidth) ? null : {fullWidth: true};\n  }\n\n  static match(pattern: string | string[] | RegExp | RegExp[]) {\n    return matchValidator(pattern);\n  }\n\n  static password(options?: PasswordValidatorOptions) {\n    return passwordValidator(options);\n  }\n\n  static before(before: Date | string) {\n    return dateBeforeValidator(before);\n  }\n\n  static after(after: Date | string) {\n    return dateAfterValidator(after);\n  }\n\n  static between(before: Date | string, after: Date | string) {\n    return dateBetweenValidator(before, after);\n  }\n\n  static dateFormat(formatPattern?: RegExp) {\n    return dateFormatValidator(formatPattern);\n  }\n\n  static age(min: number = 0, max: number = 0) {\n    return ageValidator(min, max);\n  }\n\n  static condition(conditionFn: (value: any) => boolean) {\n    return conditionValidator(conditionFn);\n  }\n\n  static equalTo(controlName: string) {\n    return equalToValidator(controlName);\n  }\n\n  static notEqualTo(controlName: string) {\n    return notEqualToValidator(controlName);\n  }\n\n  static minLength(minlength: number) {\n    return Validators.minLength(minlength);\n  }\n\n  static maxLength(maxlength: number) {\n    return Validators.maxLength(maxlength);\n  }\n\n  static min(minValue: number) {\n    return Validators.min(minValue);\n  }\n\n  static max(maxValue: number) {\n    return Validators.max(maxValue);\n  }\n\n  static pattern(reg: string | RegExp) {\n    return Validators.pattern(reg);\n  }\n\n  static rangeLength(minLength: number, maxLength: number) {\n    return CustomValidators.rangeLength([minLength, maxLength]);\n  }\n\n  static range(min: number, max: number) {\n    return CustomValidators.range([min, max]);\n  }\n\n  static gt(value: number) {\n    return CustomValidators.gt(value);\n  }\n\n  static gte(value: number) {\n    return CustomValidators.gte(value);\n  }\n\n  static lt(value: number) {\n    return CustomValidators.lt(value);\n  }\n\n  static lte(value: number) {\n    return CustomValidators.lte(value);\n  }\n\n  static minDate(minDate: string) {\n    return CustomValidators.minDate(minDate);\n  }\n\n  static maxDate(maxDate: string) {\n    return CustomValidators.maxDate(maxDate);\n  }\n\n  static equal(s: any) {\n    return CustomValidators.equal(s);\n  }\n\n  static notEqual(s: any) {\n    return CustomValidators.notEqual(s);\n  }\n\n  static equalTo2(control: AbstractControl) {\n    return CustomValidators.equalTo(control);\n  }\n\n  static notEqualTo2(control: AbstractControl) {\n    return CustomValidators.notEqualTo(control);\n  }\n}\n\nexport class NgValidateMessages {\n  static required = 'æ­¤é¡¹åå®¹å¿é¡»å¡«å';\n  static pattern = 'æ ¼å¼ä¸ç¬¦åè¦æ±';\n  static letter = 'æ­¤é¡¹åå®¹å¿é¡»æ¯è±æå­æ¯';\n  static digit = 'æ­¤é¡¹åå®¹å¿é¡»æ¯æ°å­';\n  static character = 'æ­¤é¡¹åå®¹å¿é¡»æ¯è±æå­æ¯ææ°å­';\n  static chinese = 'æ­¤é¡¹åå®¹å¿é¡»æ¯ç®ä½ä¸­æ';\n  static integer = 'æ­¤é¡¹åå®¹å¿é¡»æ¯æ´æ°';\n  static number = 'æ­¤é¡¹åå®¹å¿é¡»æ¯æ°å¼';\n  static fullWidth = 'æ­¤é¡¹åå®¹å¿é¡»æ¯å¨è§';\n  static halfWidth = 'æ­¤é¡¹åå®¹å¿é¡»æ¯åè§';\n  static phone = 'ææºå·ç æ ¼å¼ä¸ç¬¦åè¦æ±';\n  static condition = 'è¾å¥ä¸ç¬¦åè¦æ±';\n  static email = 'æ æçemailå°å';\n  static idCard = 'æ æçèº«ä»½è¯å·';\n  static not_matching = 'å¯ç ä¸å¹é';\n  static unique = 'è¯¥å¼å·²ç»å­å¨';\n  static gte = 'è¾å¥ä¸ç¬¦åè¦æ±';\n  static url = 'å°åæ ¼å¼ä¸ç¬¦åè¦æ±';\n  static date = 'æ¥ææ ¼å¼ä¸ç¬¦åè¦æ±';\n  static maxDate = 'è¾å¥ä¸ç¬¦åè¦æ±';\n  static json = 'è¾å¥ä¸ç¬¦åè¦æ±';\n  static base64 = 'è¾å¥ä¸ç¬¦åè¦æ±';\n  static equal = 'ä¸¤æ¬¡è¾å¥ä¸ä¸è´';\n  static notEqual = 'ä¸¤æ¬¡è¾å¥ä¸è½ä¸è´';\n  static equalTo = 'ä¸¤æ¬¡è¾å¥ä¸ä¸è´';\n  static notEqualTo = 'ä¸¤æ¬¡è¾å¥ä¸è½ä¸è´';\n  static duplicated = 'å½åå¼å·²ç»å­å¨ï¼ä¸è½éå¤';\n  static exists = 'å½åå¼å·²ç»å­å¨ï¼ä¸è½ä½¿ç¨';\n\n  static maxlength(error) {\n    return `é¿åº¦ä¸è½å¤§äº<strong>${error.requiredLength}</strong>ä¸ªå­`;\n  }\n\n  static minlength(error) {\n    return `é¿åº¦ä¸è½å°äº<strong>${error.requiredLength}</strong>ä¸ªå­`;\n  }\n\n  static min(error) {\n    return `ä¸è½å°äº<strong>${error.min}</strong>`;\n  }\n\n  static max(error) {\n    return `ä¸è½å¤§äº<strong>${error.max}</strong>`;\n  }\n\n  static age(error) {\n    return `å¹´é¾å¿é¡»ä»äº ${error.min} ${error.max}`;\n  }\n\n  static password(error) {\n    return passwordValidationMessage(error);\n  }\n\n  static dateBefore(error) {\n    return `æ¥æå¿é¡»å¨ ${error.before}ä¹å`;\n  }\n\n  static dateAfter(error) {\n    return `æ¥æå¿é¡»å¨ ${error.after}ä¹å`;\n  }\n\n  static dataBetween(error) {\n    return `æ¥æå¿é¡»å¨ ${error.before}å${error.after}ä¹é´`;\n  }\n\n  static rangeLength(error) {\n    return `é¿åº¦å¿é¡»å¤§äº<strong>${error.max}</strong>`;\n  }\n\n  static gt(error) {\n    return `å¿é¡»å¤§äº<strong>${error.max}</strong>`;\n  }\n\n  static lt(error) {\n    return `ä¸è½å¤§äº<strong>${error.lt}</strong>`;\n  }\n\n  static lte(error) {\n    return `ä¸è½å¤§äº<strong>${error.lte}</strong>`;\n  }\n\n  static range(error) {\n    return `ä¸è½å¤§äº<strong>${error.lte}</strong>`;\n  }\n\n  static minDate(error) {\n    return `æ¥æä¸è½å°äº<strong>${error.minDate}</strong>`;\n  }\n}\n","import {AbstractControl, FormArray, FormControl, FormGroup, ValidationErrors} from '@angular/forms';\nimport {CommonsUtils} from '@er/utils';\nimport {NgValidateMessages} from '../validators/all';\n\n\nexport class ValidateUtils {\n\n  static getFormErrors(form: AbstractControl, messages?: { [key: string]: string }, formlyfield?: any) {\n    const errors = {};\n    if (form instanceof FormControl) {\n      return (ValidateUtils.getControlErrors(<FormControl>form, messages, formlyfield));\n    } else if (form instanceof FormGroup) {\n      Object.keys(form.controls).map(name =>\n        errors[name] = (ValidateUtils.getFormErrors(<FormGroup>form.controls[name], messages, formlyfield))\n      );\n    } else if (form instanceof FormArray) {\n      const err = [];\n      (<FormArray>form.controls[name]).controls.forEach(control =>\n        err.push((ValidateUtils.getFormErrors(control, messages, formlyfield)))\n      );\n      return err;\n    }\n    return errors;\n  }\n\n  static getControlErrors(control: FormControl, messages?: { [key: string]: string }, formlyfield?: any) {\n    return ValidateUtils.getErrorMessage(control.errors, messages, formlyfield);\n  }\n\n  static getErrorMessage(errors: ValidationErrors, messages?: { [key: string]: string }, formlyfield?: any) {\n    if (!errors) {\n      return {};\n    }\n    const errorMessages = {};\n    Object.keys(errors).forEach(key => {\n      let message;\n      if (formlyfield) {\n        if (formlyfield.validators && formlyfield.validators[key] && formlyfield.validators[key].message) {\n          message = formlyfield.validators[key].message;\n        } else if (formlyfield.asyncValidators && formlyfield.asyncValidators[key] && formlyfield.asyncValidators[key].message) {\n          message = formlyfield.asyncValidators[key].message;\n        }\n      }\n      if (!message) {\n        if (messages && messages.hasOwnProperty(key)) {\n          message = messages[key];\n        } else if (NgValidateMessages.hasOwnProperty(key)) {\n          message = NgValidateMessages[key];\n        } else {\n          message = key;\n        }\n      }\n      if (typeof message === 'string') {\n        errorMessages[key] = message;\n      } else if (typeof message === 'function') {\n        errorMessages[key] = message.apply(this, [errors[key], formlyfield]);\n      }\n    });\n    return errorMessages;\n  }\n\n  static dynaValidationMessageFn(\n    error,\n    context?: { errorKey?: string, format?: string, errorProps?: string | string[], formlyField?: any }\n  ) {\n    let values = [];\n    if (CommonsUtils.isJson(error) && context.errorProps) {\n      if (Array.isArray(context.errorProps)) {\n        context.errorProps.forEach(key => values.push(error[key]));\n      } else {\n        values.push(error[context.errorProps]);\n      }\n    } else {\n      const dyna: any[] = CommonsUtils.get(context, 'validation.dyna', []);\n      const info = CommonsUtils.find(dyna, {key: context.errorKey});\n      if (info) {\n        values = info['args'] || [];\n      }\n    }\n    return CommonsUtils.templateStr(context.format, values);\n  }\n}\n","import {ChangeDetectionStrategy, Component, ContentChild, Input, OnDestroy, OnInit, Optional, TemplateRef} from '@angular/core';\nimport {ControlContainer, FormGroup, FormGroupDirective} from '@angular/forms';\nimport {CommonsUtils} from '@er/utils';\nimport {Subject, Subscription} from 'rxjs';\nimport {ValidateUtils} from '../../utils';\n\n\n@Component({\n  selector: 'er-form-validate-messages',\n  templateUrl: 'tpl.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormValidateMessagesComponent implements OnInit, OnDestroy {\n\n  @Input() form: FormGroup;\n\n  @Input() messages: { [key: string]: string };\n\n  @Input() fields: {};\n\n  @Input() styleClass: string;\n\n  @ContentChild(TemplateRef) errorMsgTpl: TemplateRef<any>;\n\n  errors$: Subject<{}> = new Subject();\n\n  subscription: Subscription;\n\n  constructor(@Optional() private controlContainer: ControlContainer) {\n  }\n\n  checkFormValidate() {\n    if (this.form.invalid) {\n      alert();\n      this.errors$.next(ValidateUtils.getFormErrors(this.form, this.messages, this.fields));\n    } else {\n      this.errors$.next(undefined);\n    }\n  }\n\n  ngOnInit(): void {\n    if (!this.form && this.controlContainer) {\n      this.form = this.controlContainer.formDirective ? (this.controlContainer.formDirective as FormGroupDirective).form : null;\n    }\n    if (this.form) {\n      this.subscription = this.form.statusChanges\n        .subscribe(() => {\n          this.checkFormValidate();\n        });\n    }\n  }\n\n  errorKeys(errors: {}) {\n    return Object.keys(errors);\n  }\n\n  errorMsg(error) {\n    return CommonsUtils.getText(error);\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  TemplateRef\n} from '@angular/core';\nimport {ControlContainer, FormControl, FormGroupDirective} from '@angular/forms';\nimport {FormUtils} from '@er/utils';\nimport {Subscription} from 'rxjs';\nimport {BehaviorSubject} from 'rxjs/internal/BehaviorSubject';\nimport {ValidateUtils} from '../../utils';\n\n\n@Component({\n  selector: 'er-validate-messages',\n  template: `\n    <div *ngIf=\"errors$|async as errors\">\n      <ng-container *ngTemplateOutlet=\"errorMsgTpl?errorMsgTpl:defaultTpl;context:{$implicit:errors}\"></ng-container>\n    </div>\n    <ng-template #defaultTpl let-errors>\n      <div class=\"text-danger\" [ngClass]=\"styleClass\">\n        <ul *ngFor=\"let error of errors \" class=\"d-flex flex-column justify-content-start\">\n          <li [innerHTML]=\"error.value\" class=\"my-1\" style=\"font-size: 0.8em\"></li>\n        </ul>\n      </div>\n    </ng-template>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ValidateMessagesComponent implements OnInit, OnDestroy {\n\n  @Input() control: FormControl;\n\n  @Input() controlName: string;\n\n  @Input() formlyField: any;\n\n  @Input() force: boolean;\n\n  @Input() styleClass: string;\n\n  @Input() showAllErrors = true;\n\n  @Input() messages: { [key: string]: string };\n\n  @ContentChild(TemplateRef) errorMsgTpl: TemplateRef<any>;\n\n  errors$: BehaviorSubject<string[]> = new BehaviorSubject<string[]>(undefined);\n\n  subscription: Subscription;\n\n  constructor(@Optional() private controlContainer: ControlContainer, private cd: ChangeDetectorRef) {\n  }\n\n  getErrorMessages() {\n    if (this.control.dirty && this.control.invalid) {\n      const errorMessages = ValidateUtils.getErrorMessage(this.control.errors);\n      const errors = this.showAllErrors ? errorMessages : this.getFirstError(errorMessages);\n      this.errors$.next(this.getErrors(errors));\n    } else {\n      return this.errors$.next([]);\n    }\n  }\n\n  getFirstError(errorMessages) {\n    if (Object.keys(errorMessages).length > 0) {\n      return errorMessages[Object.keys(errorMessages)[0]];\n    }\n    return 'æ ¡éªå¤±è´¥';\n  }\n\n  getErrors(errorMessages) {\n    const lst = [];\n    if (errorMessages) {\n      Object.keys(errorMessages).map(key => {\n        lst.push({key, value: (this.messages && this.messages[key]) || errorMessages[key]});\n      });\n    }\n    return lst;\n  }\n\n  ngOnInit(): void {\n    if (!this.control) {\n      if (this.formlyField) {\n        this.control = this.formlyField.formControl;\n      }\n      if (!this.control && this.controlContainer) {\n        const form = this.controlContainer.formDirective ? (this.controlContainer.formDirective as FormGroupDirective).form : null;\n        if (form) {\n          this.control = FormUtils.getFormControl(form, ...this.controlContainer.path, this.controlName);\n        }\n      }\n    }\n    if (this.control) {\n      this.subscription = this.control.statusChanges.subscribe(() => {\n        this.getErrorMessages();\n      });\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import {Directive, HostListener, Optional} from '@angular/core';\nimport {NgControl} from '@angular/forms';\n\n@Directive({\n  selector: '[erValidateOnBlur]'\n})\nexport class ValidateOnBlurMessageDirective {\n\n  private validators: any;\n  private asyncValidators: any;\n\n  constructor(@Optional() private model: NgControl) {\n  }\n\n  get control() {\n    if (this.model && this.model.control) {\n      return this.model.control;\n    } else {\n      return undefined;\n    }\n  }\n\n  @HostListener('focus')\n  onFocus() {\n    if (this.control) {\n      this.validators = this.control.validator;\n      this.asyncValidators = this.control.asyncValidator;\n      this.control.clearAsyncValidators();\n      this.control.clearValidators();\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.control) {\n      this.control.setAsyncValidators(this.asyncValidators);\n      this.control.setValidators(this.validators);\n      this.control.updateValueAndValidity();\n    }\n  }\n\n}\n","import {\n  AfterViewInit,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  HostBinding,\n  Input,\n  Optional,\n  ViewContainerRef\n} from '@angular/core';\nimport {FormControl, NgControl} from '@angular/forms';\nimport {CacheUtils} from '@er/utils';\nimport {ValidateMessagesComponent} from '../../components/control/component';\n\n\n/* tslint:disable:directive-selector */\n@Directive({\n  selector: '[erValidate]'\n})\nexport class ValidationMessageDirective implements AfterViewInit {\n\n  @Input() messages: { [key: string]: string };\n\n  @Input() showError = true;\n\n  @Input() enableValidation = true;\n\n  currentState: string;\n\n  private componentFactory: ComponentFactory<ValidateMessagesComponent>;\n  private componentRef: ComponentRef<ValidateMessagesComponent>;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\n              private viewContainerRef: ViewContainerRef,\n              @Optional() private ngControl: NgControl) {\n  }\n\n  get control() {\n    if (this.ngControl && this.ngControl.control) {\n      return this.ngControl.control;\n    } else {\n      return undefined;\n    }\n  }\n\n  @HostBinding('class.er-valid')\n  get isValid(): boolean {\n    if (!this.showError || (!this.ngControl && this.ngControl.control == null)) {\n      return false;\n    }\n    return this.ngControl && this.ngControl.control && this.ngControl.control.valid;\n  }\n\n  @HostBinding('class.er-invalid')\n  get isInvalid(): boolean {\n    if (!this.showError || (!this.ngControl && this.ngControl.control == null)) {\n      return false;\n    }\n    return this.ngControl && this.ngControl.control && this.ngControl.control.invalid;\n  }\n\n  ngAfterViewInit() {\n    if (!this.ngControl || !this.enableValidation) {\n      return;\n    }\n\n    const attrs: NamedNodeMap = this.viewContainerRef.element.nativeElement.attributes;\n    if (attrs) {\n      const tag = !!attrs.getNamedItem('noerror');\n      if (this.showError && tag) {\n        this.showError = false;\n        return;\n      }\n    }\n\n    this.componentFactory = CacheUtils.get('$componentFactory', 'ValidateMessagesComponentFactory');\n    if (!this.componentFactory) {\n      this.componentFactory = this.componentFactoryResolver.resolveComponentFactory(ValidateMessagesComponent);\n      CacheUtils.put('$componentFactory', 'validationMessagesComponentFactory', this.componentFactory);\n    }\n    const className = this.viewContainerRef.element.nativeElement.parentElement.className;\n    if (className.indexOf('input-group') >= 0) {\n    }\n    this.componentRef = this.viewContainerRef.createComponent(this.componentFactory);\n    (<ValidateMessagesComponent>this.componentRef.instance).messages = this.messages;\n    (<ValidateMessagesComponent>this.componentRef.instance).control = <FormControl>this.control;\n  }\n\n\n\n}\n","import {AfterViewInit, ComponentFactoryResolver, Directive, HostBinding, Input, Optional, ViewContainerRef} from '@angular/core';\nimport {NgControl} from '@angular/forms';\n\n\n/* tslint:disable:directive-selector */\n@Directive({\n  selector: '[formControlName],[formControl],[ngModel]'\n})\nexport class ValidateStateDirective implements AfterViewInit {\n\n  @Input() messages: { [key: string]: string };\n\n  @Input() showError = true;\n\n  @Input() enableValidation = true;\n\n  currentState: string;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver,\n              private viewContainerRef: ViewContainerRef,\n              @Optional() private ngControl: NgControl) {\n  }\n\n  get control() {\n    if (this.ngControl && this.ngControl.control) {\n      return this.ngControl.control;\n    } else {\n      return undefined;\n    }\n  }\n\n  @HostBinding('class.er-valid')\n  get isValid(): boolean {\n    if (!this.showError || (!this.ngControl && this.ngControl.control == null)) {\n      return false;\n    }\n    return this.ngControl && this.ngControl.control && this.ngControl.control.valid;\n  }\n\n  ngAfterViewInit() {\n    if (!this.ngControl || !this.enableValidation) {\n      return;\n    }\n\n    const attrs: NamedNodeMap = this.viewContainerRef.element.nativeElement.attributes;\n    if (attrs) {\n      const tag = !!attrs.getNamedItem('noerror');\n      if (this.showError && tag) {\n        this.showError = false;\n        return;\n      }\n    }\n  }\n\n}\n","import {ValidateOnBlurMessageDirective} from './control-on-blur/directive';\nimport {ValidationMessageDirective} from './control/validate-message.directive';\nimport {ValidateStateDirective} from './control/validate-state.directive';\n\nexport {ValidationMessageDirective} from './control/validate-message.directive';\nexport {ValidateStateDirective} from './control/validate-state.directive';\nexport {ValidateOnBlurMessageDirective} from './control-on-blur/directive';\n\n\nexport const directives = [\n  ValidationMessageDirective,\n  ValidateStateDirective,\n  ValidateOnBlurMessageDirective\n]\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CustomFormsModule} from 'ng2-validation';\nimport {ValidateMessagesComponent} from './components/control/component';\nimport {FormValidateMessagesComponent} from './components/form/component';\nimport {directives} from './directives/all';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CustomFormsModule\n  ],\n  declarations: [\n    ValidateMessagesComponent,\n    FormValidateMessagesComponent,\n    ...directives\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    ValidateMessagesComponent,\n    FormValidateMessagesComponent,\n    ...directives\n  ],\n  entryComponents: [\n    ValidateMessagesComponent\n  ]\n})\nexport class ErValidateModule {\n}\n"],"names":[],"mappings":"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"}
