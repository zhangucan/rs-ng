/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const DataType = {
    STRING: 'string',
    BOOLEAN: 'boolean',
    NUMBER: 'number',
    DATE: 'date',
    JSON: 'json',
    List: 'list',
    UNKNOWN: 'unKnown',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const AggMethods = {
    AVG: 'avg',
    SUM: 'sum',
    MAX: 'max',
    MIN: 'min',
    COUNT: 'count',
    DISTINCT: 'distinct',
    TERMS: 'terms',
    HISTOGRAM: 'histogram',
    DATE_HISTOGRAM: 'dateHistogram',
    CUSTOMER: 'customer',
};
/** @type {?} */
const AggMethodsProps = {
    avg: { label: '平均值', key: 'avg', dataTypes: [DataType.NUMBER, DataType.DATE] },
    sum: { label: '合计值', key: 'sum', dataTypes: [DataType.NUMBER] },
    max: { label: '最大值', key: 'max', dataTypes: [DataType.NUMBER, DataType.DATE] },
    min: { label: '最小值', key: 'min', dataTypes: [DataType.NUMBER, DataType.DATE] },
    distinct: { label: '唯一值', key: 'distinct' },
    count: { label: '总数', key: 'count' },
    terms: { label: '值分布', key: 'terms' }
};
/** @enum {string} */
const AggInterval = {
    YEAR: 'year',
    MONTH: 'month',
    MILL_SECOND: 'millSecond',
    SECOND: 'second',
    MINUTE: 'minute',
    HOUR: 'hour',
    DAY: 'day',
    WEEK: 'week',
    QUARTER: 'quarter',
};
/** @type {?} */
const AggIntervalProps = {
    year: { label: '年', key: 'year', format: 'yy' },
    month: { label: '月', key: 'month', format: 'MM' },
    day: { label: '日', key: 'day', format: 'MM-dd' },
    week: { label: '星期', key: 'week', format: 'MM-dd' },
    quarter: { label: '季度', key: 'quarter', format: 'MM' },
    hour: { label: '小时', key: 'hour', format: 'HH' },
    minute: { label: '分钟', key: 'minute', format: 'HH:mm' },
    second: { label: '秒', key: 'second', format: 'ss' },
    millSecond: { label: '毫秒', key: 'millSecond', format: 'ms' }
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const ChartType = {
    PIE: 'pie',
    LINE: 'line',
    BAR: 'bar',
    RADAR: 'radar',
    AREA: 'polarArea',
    DOUGHNUT: 'doughnut',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const ContextNames = {
    now: 'now',
    today: 'today',
    year: 'year',
    lastYear: 'lastYear',
    month: 'month',
    lastMonth: 'lastMonth',
    day: 'day',
    yesterday: 'yesterday',
    userId: 'id',
    userToken: 'token',
    userName: 'name',
    userDistrict: 'district',
    userOrg: 'org',
    userDept: 'dept',
    userType: 'type',
    userFullName: 'fullName',
    userPhone: 'phone',
    userRoles: 'roles',
    userPermissions: 'permissions',
    isAdmin: 'isAdmin',
    isSu: 'isSu'
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const LifeCycleNames = {
    onInit: 'onInit',
    onChanges: 'onChanges',
    doCheck: 'doCheck',
    afterContentInit: 'afterContentInit',
    afterContentChecked: 'afterContentChecked',
    afterViewInit: 'afterViewInit',
    afterViewChecked: 'afterViewChecked',
    onDestroy: 'onDestroy',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const UI_COLORS = {
    color1: '#e45450',
    color31: '#9f74e5',
    color32: '#ab83eb',
    color2: '#d1756b',
    color3: '#df7976',
    color4: '#fe8585',
    color29: '#8f63d7',
    color30: '#956cd7',
    color33: '#b997f0',
    color34: '#c4a3f9',
    color35: '#997cc8',
    color5: '#f4a9ae',
    color6: '#ffa897',
    color7: '#ff914e',
    color8: '#f1ad4b',
    color36: '#9279ba',
    color37: '#a08ac3',
    color9: '#facf68',
    color10: '#fdb86e',
    color11: '#fec18b',
    color12: '#9c95d0',
    color13: '#978ed7',
    color14: '#a7acf2',
    color15: '#b3abef',
    color16: '#ceabe5',
    color17: '#f06d69',
    color18: '#f47976',
    color19: '#f78b88',
    color20: '#fa9693',
    color21: '#f9a19e',
    color22: '#fcb0ae',
    color23: '#ffb9b7',
    color24: '#fc9d63',
    color25: '#fda671',
    color26: '#ffaf7e',
    color27: '#febc94',
    color28: '#fdc8a8',
    color38: '#ad9acc',
    color39: '#b8a4d8',
    color40: '#b9accf',
    color41: '#ada1c1',
    color42: '#9e94af',
    color43: '#8b809d',
    color44: '#7f768d',
    color45: '#716582'
};
/** @type {?} */
const THEME_COLORS = {
    blue: '#007bff',
    indigo: '#6610f2',
    purple: '#6f42c1',
    pink: '#e83e8c',
    red: '#dc3545',
    orange: '#fd7e14',
    yellow: '#ffc107',
    green: '#28a745',
    teal: '#20c997',
    cyan: '#17a2b8',
    white: '#FFFFFF'
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const DialogType = {
    CONFIRM: 'confirm',
    POPUP: 'popup',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {number} */
const MenuOrientation = {
    STATIC: 0,
    OVERLAY: 1,
    SLIM: 2,
    HORIZONTAL: 3,
};
MenuOrientation[MenuOrientation.STATIC] = 'STATIC';
MenuOrientation[MenuOrientation.OVERLAY] = 'OVERLAY';
MenuOrientation[MenuOrientation.SLIM] = 'SLIM';
MenuOrientation[MenuOrientation.HORIZONTAL] = 'HORIZONTAL';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const DEFAULT_TREE_NODE_KEYS = {
    idKey: 'id',
    labelKey: 'label',
    parentKey: 'parent',
    childrenKey: 'children',
    leafKey: 'leaf',
    dataKey: 'data',
    expandedKey: 'expanded'
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const ReadAs = {
    ARRAY: 'array',
    BINARY: 'binary',
    URL: 'url',
    TEXT: 'text',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const DataAttr = {
    ID: 'id',
    CODE: 'code',
    PHONE: 'phone',
    EMAIL: 'email',
    QQ: 'qq',
    WE_CHAT: 'wechat',
    ID_CARD: 'idCard',
    PASSWORD: 'password',
    CURRENCY: 'currency',
    DATA_CODE: 'dataCode',
    STATE: 'state',
    IMAGE: 'image',
    FRAME: 'frame',
    DATE: 'date',
    DATE_TIME: 'dataTime',
    TIME: 'time',
    YEAR: 'year',
    MONTH: 'month',
    UP_TO_NOW: 'upToNow',
    TEXT: 'text',
    PERCENT: 'percent',
    URL: 'url',
    TAG: 'tag',
    ICON: 'icon',
    COLOR: 'color',
    DISTINCT: 'distinct',
    BADGE: 'badge',
    BUTTONS: 'buttons',
    DATA: 'data',
    TREE: 'tree',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const FieldId = {
    key: 'id',
    label: 'id',
    dataType: DataType.STRING,
    dataAttr: DataAttr.ID
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const VarType = {
    STRING: 'string',
    NUMBER: 'number',
    BOOLEAN: 'boolean',
    DATE: 'date',
    ARRAY: 'array',
    JSON: 'json',
    FUNCTION: 'function',
    UNDEFINED: 'undefined',
    NULL: 'null',
    UNKNOWN: 'unknown',
};
/** @type {?} */
const NO_OP = () => {
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const RegPatterns = {
    // 匹配 max_length(12) => ["max_length",12]
    rule: /^(.+?)\((.+)\)$/,
    // 数字
    digit: /^[0-9]+$/,
    // 英文字母
    letter: /^[A-Za-z]+$/,
    // 字母，数字和下划线，横线(-)
    character: /\w+$/,
    // 汉字
    chinese: /^[\u0391-\uFFE5]+$/,
    // 整数
    integer: /^-?(\d+)$/,
    // 正整数
    pInteger: /^(\d+)$/,
    // 小数
    numeric: /^-?(\d+)(\.\d+)?$/,
    // 正小数
    pNumeric: /^(\d+)(\.\d+)?$/,
    /**
     * \@descrition:邮箱规则
     * 1.邮箱以a-z、A-Z、0-9开头，最小长度为1.
     * 2.如果左侧部分包含-、_、.则这些特殊符号的前面必须包一位数字或字母。
     * 3.\@符号是必填项
     * 4.右则部分可分为两部分，第一部分为邮件提供商域名地址，第二部分为域名后缀，现已知的最短为2位。最长的为6为。
     * 5.邮件提供商域可以包含特殊字符-、_、.
     */
    email: /^[a-z0-9]+([._\\-]*[a-z0-9])*@([a-z0-9]+[-a-z0-9]*[a-z0-9]+.){1,63}[a-z0-9]+$/,
    /**
     * [ip ipv4、ipv6]
     * "192.168.0.0"
     * "192.168.2.3.1.1"
     * "235.168.2.1"
     * "192.168.254.10"
     * "192.168.254.10.1.1"
     */
    ip: /^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])((\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])){3}|(\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])){5})$/,
    /**
     * \@descrition:判断输入的参数是否是个合格的固定电话号码。
     * 待验证的固定电话号码。
     * 国家代码(2到3位)-区号(2到3位)-电话号码(7到8位)-分机号(3位)
     *
     */
    fixPhone: /^(([0\+]\d{2,3}-)?(0\d{2,3})-)(\d{7,8})(-(\d{3,}))?$/,
    /**
     * \@descrition:手机号码段规则
     * 13段：130、131、132、133、134、135、136、137、138、139
     * 14段：145、147
     * 15段：150、151、152、153、155、156、157、158、159
     * 17段：170、176、177、178
     * 18段：180、181、182、183、184、185、186、187、188、189
     * 国际码 如：中国(+86)
     */
    phone: /^((\+?[0-9]{1,4})|(\(\+86\)))?(13[0-9]|14[57]|15[012356789]|17[03678]|18[0-9])\d{8}$/,
    /**
     * \@descrition 匹配 URL
     */
    url: /[a-zA-z]+:\/\/[^\s]/,
    /**
     * 金额
     */
    money: /^(0|[1-9]\d*)(\.\d+)?$/,
    ascii: /^[\x00-\x7F]+$/,
    no_space: /[^\s]/,
    /**
     * 全角
     */
    fullWidth: /[^\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/,
    /**
     * 半角
     */
    halfWidth: /[\u0020-\u007E\uFF61-\uFF9F\uFFA0-\uFFDC\uFFE8-\uFFEE0-9a-zA-Z]/,
    percent: /^(?:[1-9][0-9]?|100)(?:\.[0-9]{1,2})?$/,
    date_yyyy_mm_dd: /^(0?[1-9]|[12][0-9]|3[01])[\/\-](0?[1-9]|1[012])[\/\-]\d{4}$/,
    date_yyyymmdd: /^(0?[1-9]|[12][0-9]|3[01])[\/\-](0?[1-9]|1[012])[\/\-]\d{4}$/,
    role: /^[A-Za-z0-9]*$/,
    permission: /^\w+(:\w+)*$/
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const DEFAULT_ES_QUERY_CONDITION = 'AND';
/** @type {?} */
const ES_QUERY_OPERATORS = {
    contains: {
        label: '包含',
        key: 'contains',
        multiple: true,
        dataTypes: [DataType.STRING],
        operator: 'match'
    },
    equal: {
        label: '等于',
        key: 'equal',
        multiple: true,
        operator: 'terms'
    },
    in: {
        label: '包含',
        key: 'in',
        multiple: true,
        operator: 'in',
        getValue: function (v) {
            return v.split(',').map(function (e) {
                return e.trim();
            });
        }
    },
    less: {
        label: '小于',
        key: 'less',
        dataTypes: [DataType.NUMBER, DataType.DATE],
        operator: 'range',
        getValue: function (v) {
            return { 'lt': v };
        }
    },
    less_equal: {
        label: '小于等于',
        key: 'less_equal',
        dataTypes: [DataType.NUMBER, DataType.DATE],
        operator: 'range',
        getValue: function (v) {
            return { 'lte': v };
        }
    },
    greater: {
        label: '大于',
        key: 'greater',
        dataTypes: [DataType.NUMBER, DataType.DATE],
        operator: 'range',
        getValue: function (v) {
            return { 'gt': v };
        }
    },
    greater_equal: {
        label: '小于等于',
        key: 'greater_equal',
        dataTypes: [DataType.NUMBER, DataType.DATE],
        operator: 'range',
        getValue: function (v) {
            return { 'gte': v };
        }
    },
    between: {
        label: '介于',
        key: 'between',
        inputs: 2,
        dataTypes: [DataType.NUMBER, DataType.DATE],
        operator: 'range',
        getValue: function (v) {
            return { 'gte': v[0], 'lte': v[1] };
        }
    },
    begins_with: {
        label: '以...打头',
        key: 'begins_with',
        dataTypes: [DataType.STRING],
        operator: 'wildcard',
        getValue: function (v) {
            return 'v*';
        }
    },
    end_with: {
        label: '以...结尾',
        key: 'end_with',
        dataTypes: [DataType.STRING],
        operator: 'wildcard',
        getValue: function (v) {
            return '*v';
        }
    },
    pattern: {
        label: '匹配',
        key: 'pattern',
        dataTypes: [DataType.STRING],
        operator: 'wildcard'
    },
    phrase: {
        label: '短语',
        key: 'phrase',
        dataTypes: [DataType.STRING],
        operator: 'phrase'
    },
    phrase_prefix: {
        label: '短语前缀',
        key: 'phrase_prefix',
        dataTypes: [DataType.STRING],
        operator: 'phrase_prefix'
    },
    isEmpty: {
        label: '',
        key: 'is_empty',
        inputs: 0,
        dataTypes: [DataType.STRING]
    },
    isNull: {
        label: '',
        key: 'is_null',
        inputs: 0
    },
    isExists: {
        label: '存在',
        key: 'is_exists',
        inputs: 0,
        dataTypes: [DataType.STRING, DataType.NUMBER, DataType.DATE, DataType.BOOLEAN]
    },
    type: {
        label: '类型',
        key: 'is_type'
    }
};
/** @type {?} */
const EsQueryMethods = {
    match: { label: '包含', key: 'match', dataTypes: [DataType.STRING] },
    term: { label: '包含条目', key: 'term' },
    terms: { label: '包含多个条目', key: 'terms' },
    termsSet: { label: '包含多个条目', key: 'termsSet' },
    range: { label: '范围', key: 'range', dataTypes: [DataType.NUMBER, DataType.DATE] },
    exists: { label: '存在', key: 'exists' },
    prefix: { label: '前缀', key: 'prefix' },
    wildcard: { label: '通配', key: 'wildcard' },
    regexp: { label: '正则', key: '正则' },
    fuzzy: { label: '间距', key: 'fuzzy' },
    type: { label: '类型', key: 'type' },
    ids: { label: '唯一值', key: 'ids' }
};
/** @type {?} */
const EsAggMethods = {};
/** @type {?} */
const EsBulkAggMethods = {};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const NotifyType = {
    ALERT: 'alert',
    ANNOUNCE: 'announce',
};
/** @enum {string} */
const NotifyLevel = {
    INFO: 'info',
    ERROR: 'error',
    SUCCESS: 'success',
    WARN: 'warn',
    QUESTION: 'question',
};
/** @enum {string} */
const NotifyMethod = {
    APPEND: 'append',
    REPLACE: 'replace',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const Devices = {
    BROWSERS: {
        CHROME: 'chrome',
        FIREFOX: 'firefox',
        SAFARI: 'safari',
        OPERA: 'opera',
        IE: 'ie',
        MS_EDGE: 'ms-edge',
        FB_MESSANGER: 'fb-messanger',
        UNKNOWN: 'unknown'
    },
    DEVICES: {
        ANDROID: 'android',
        I_PAD: 'ipad',
        IPHONE: 'iphone',
        I_POD: 'ipod',
        BLACKBERRY: 'blackberry',
        FIREFOX_OS: 'firefox-os',
        CHROME_BOOK: 'chrome-book',
        WINDOWS_PHONE: 'windows-phone',
        PS4: 'ps4',
        VITA: 'vita',
        CHROMECAST: 'chromecast',
        APPLE_TV: 'apple-tv',
        GOOGLE_TV: 'google-tv',
        UNKNOWN: 'unknown'
    },
    OS: {
        WINDOWS: 'windows',
        MAC: 'mac',
        IOS: 'ios',
        ANDROID: 'android',
        LINUX: 'linux',
        UNIX: 'unix',
        FIREFOX_OS: 'firefox-os',
        CHROME_OS: 'chrome-os',
        WINDOWS_PHONE: 'windows-phone',
        UNKNOWN: 'unknown'
    },
    OS_VERSIONS: {
        WINDOWS_3_11: 'windows-3-11',
        WINDOWS_95: 'windows-95',
        WINDOWS_ME: 'windows-me',
        WINDOWS_98: 'windows-98',
        WINDOWS_CE: 'windows-ce',
        WINDOWS_2000: 'windows-2000',
        WINDOWS_XP: 'windows-xp',
        WINDOWS_SERVER_2003: 'windows-server-2003',
        WINDOWS_VISTA: 'windows-vista',
        WINDOWS_7: 'windows-7',
        WINDOWS_8_1: 'windows-8-1',
        WINDOWS_8: 'windows-8',
        WINDOWS_10: 'windows-10',
        WINDOWS_PHONE_7_5: 'windows-phone-7-5',
        WINDOWS_PHONE_8_1: 'windows-phone-8-1',
        WINDOWS_PHONE_10: 'windows-phone-10',
        WINDOWS_NT_4_0: 'windows-nt-4-0',
        MACOSX_15: 'mac-os-x-15',
        MACOSX_14: 'mac-os-x-14',
        MACOSX_13: 'mac-os-x-13',
        MACOSX_12: 'mac-os-x-12',
        MACOSX_11: 'mac-os-x-11',
        MACOSX_10: 'mac-os-x-10',
        MACOSX_9: 'mac-os-x-9',
        MACOSX_8: 'mac-os-x-8',
        MACOSX_7: 'mac-os-x-7',
        MACOSX_6: 'mac-os-x-6',
        MACOSX_5: 'mac-os-x-5',
        MACOSX_4: 'mac-os-x-4',
        MACOSX_3: 'mac-os-x-3',
        MACOSX_2: 'mac-os-x-2',
        MACOSX: 'mac-os-x',
        UNKNOWN: 'unknown'
    },
    OS_RE: {
        WINDOWS: { and: [{ or: [/\bWindows|(Win\d\d)\b/, /\bWin 9x\b/] }, { not: /\bWindows Phone\b/ }] },
        MAC: { and: [/\bMac OS\b/, { not: /Windows Phone/ }] },
        IOS: { and: [{ or: [/\biPad\b/, /\biPhone\b/, /\biPod\b/] }, { not: /Windows Phone/ }] },
        ANDROID: { and: [/\bAndroid\b/, { not: /Windows Phone/ }] },
        LINUX: /\bLinux\b/,
        UNIX: /\bUNIX\b/,
        FIREFOX_OS: { and: [/\bFirefox\b/, /Mobile\b/] },
        CHROME_OS: /\bCrOS\b/,
        WINDOWS_PHONE: { or: [/\bIEMobile\b/, /\bWindows Phone\b/] },
        PS4: /\bMozilla\/5.0 \(PlayStation 4\b/,
        VITA: /\bMozilla\/5.0 \(Play(S|s)tation Vita\b/
    },
    BROWSERS_RE: {
        CHROME: { and: [{ or: [/\bChrome\b/, /\bCriOS\b/] }, { not: { or: [/\bOPR\b/, /\bEdge\b/] } }] },
        FIREFOX: /\bFirefox\b/,
        SAFARI: { and: [/^((?!CriOS).)*\Safari\b.*$/, { not: { or: [/\bOPR\b/, /\bEdge\b/, /Windows Phone/] } }] },
        OPERA: { or: [/Opera\b/, /\bOPR\b/] },
        IE: { or: [/\bMSIE\b/, /\bTrident\b/, /^Mozilla\/5\.0 \(Windows NT 10\.0; Win64; x64\)$/] },
        MS_EDGE: { or: [/\bEdge\b/] },
        PS4: /\bMozilla\/5.0 \(PlayStation 4\b/,
        VITA: /\bMozilla\/5.0 \(Play(S|s)tation Vita\b/,
        FB_MESSANGER: /\bFBAN\/MessengerForiOS\b/
    },
    DEVICES_RE: {
        ANDROID: { and: [/\bAndroid\b/, { not: /Windows Phone/ }] },
        I_PAD: /\biPad\b/,
        IPHONE: { and: [/\biPhone\b/, { not: /Windows Phone/ }] },
        I_POD: /\biPod\b/,
        BLACKBERRY: /\bblackberry\b/,
        FIREFOX_OS: { and: [/\bFirefox\b/, /\bMobile\b/] },
        CHROME_BOOK: /\bCrOS\b/,
        WINDOWS_PHONE: { or: [/\bIEMobile\b/, /\bWindows Phone\b/] },
        PS4: /\bMozilla\/5.0 \(PlayStation 4\b/,
        CHROMECAST: /\bCrKey\b/,
        APPLE_TV: /^iTunes-AppleTV\/4.1$/,
        GOOGLE_TV: /\bGoogleTV\b/,
        VITA: /\bMozilla\/5.0 \(Play(S|s)tation Vita\b/
    },
    OS_VERSIONS_RE: {
        WINDOWS_3_11: /Win16/,
        WINDOWS_95: /(Windows 95|Win95|Windows_95)/,
        WINDOWS_ME: /(Win 9x 4.90|Windows ME)/,
        WINDOWS_98: /(Windows 98|Win98)/,
        WINDOWS_CE: /Windows CE/,
        WINDOWS_2000: /(Windows NT 5.0|Windows 2000)/,
        WINDOWS_XP: /(Windows NT 5.1|Windows XP)/,
        WINDOWS_SERVER_2003: /Windows NT 5.2/,
        WINDOWS_VISTA: /Windows NT 6.0/,
        WINDOWS_7: /(Windows 7|Windows NT 6.1)/,
        WINDOWS_8_1: /(Windows 8.1|Windows NT 6.3)/,
        WINDOWS_8: /(Windows 8|Windows NT 6.2)/,
        WINDOWS_10: /(Windows NT 10.0)/,
        WINDOWS_PHONE_7_5: /(Windows Phone OS 7.5)/,
        WINDOWS_PHONE_8_1: /(Windows Phone 8.1)/,
        WINDOWS_PHONE_10: /(Windows Phone 10)/,
        WINDOWS_NT_4_0: { and: [/(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/, { not: /Windows NT 10.0/ }] },
        MACOSX: /(MAC OS X\s*[^ 0-9])/,
        MACOSX_3: /(Darwin 10.3|Mac OS X 10.3)/,
        MACOSX_4: /(Darwin 10.4|Mac OS X 10.4)/,
        MACOSX_5: /(Mac OS X 10.5)/,
        MACOSX_6: /(Mac OS X 10.6)/,
        MACOSX_7: /(Mac OS X 10.7)/,
        MACOSX_8: /(Mac OS X 10.8)/,
        MACOSX_9: /(Mac OS X 10.9)/,
        MACOSX_10: /(Mac OS X 10.10)/,
        MACOSX_11: /(Mac OS X 10.11)/,
        MACOSX_12: /(Mac OS X 10.12)/,
        MACOSX_13: /(Mac OS X 10.13)/,
        MACOSX_14: /(Mac OS X 10.14)/,
        MACOSX_15: /(Mac OS X 10.15)/
    },
    BROWSER_VERSIONS_RE_MAP: {
        CHROME: [/\bChrome\/([\d\.]+)\b/, /\bCriOS\/([\d\.]+)\b/],
        FIREFOX: /\bFirefox\/([\d\.]+)\b/,
        SAFARI: /\bVersion\/([\d\.]+)\b/,
        OPERA: [/\bVersion\/([\d\.]+)\b/, /\bOPR\/([\d\.]+)\b/],
        IE: [/\bMSIE ([\d\.]+\w?)\b/, /\brv:([\d\.]+\w?)\b/],
        MS_EDGE: /\bEdge\/([\d\.]+)\b/
    },
    BROWSER_VERSIONS_RE: function () {
        return Object.keys(Devices.BROWSER_VERSIONS_RE_MAP).reduce(function (obj, key) {
            obj[Devices.BROWSERS[key]] = Devices.BROWSER_VERSIONS_RE_MAP[key];
            return obj;
        }, {});
    }
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const LogLevel = {
    DEBUG: 0,
    INFO: 1,
    WARN: 2,
    ERROR: 3
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const OverlayType = {
    TABLE: 'table',
    CHART: 'chart',
    IMAGE: 'image',
    PANEL: 'panel',
    FRAME: 'frame',
    MENU: 'menu',
    TREE: 'tree',
    COMPONENT: 'component',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const StateNames = {
    rootHttp: 'rootHttp',
    rootMenu: 'rootMenu',
    appTitle: 'appTitle',
    httpTimer: 'httpTimer',
    currentRoute: 'currentRoute',
    resources: 'resources',
    module: 'module',
    auth: 'auth',
    check: 'check',
    user: 'user',
    http: 'http',
    socket: 'socket',
    nav: 'nav',
    route: 'route',
    menu: 'menu',
    tree: 'tree',
    table: 'table',
    notify: 'notify',
    modal: 'modal',
    alert: 'alert',
    popup: 'popup',
    confirm: 'confirm',
    form: 'form',
    ocr: 'ocr',
    dict: 'dict',
    serverTime: 'serverTime',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const HttpMethod = {
    GET: 'Get',
    POST: 'Post',
    DELETE: 'Delete',
    OPTIONS: 'Options',
    PUT: 'Put',
    HEAD: 'Head',
    PATCH: 'Patch',
};
/** @enum {string} */
const HttpResponseType = {
    ARRAY: 'arraybuffer',
    BLOB: 'blob',
    JSON: 'json',
    TEXT: 'text',
};
/** @enum {string} */
const HttpContentType = {
    FORM: 'application/x-www-form-urlencoded',
    MULTIPART: 'multipart/form-data',
    JSON: 'application/json',
    TEXT: 'text/plain',
};
/** @enum {string} */
const HttpRequestPayloadType = {
    PARAMS: 'params',
    BODY: 'body',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const ApiServerType = {
    App: 'app',
    ES: 'es',
    ER: 'er',
    MOCK: 'mock',
    OTHER: 'other',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const DEFAULT_QUERY_CONDITION = 'AND';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const Order = {
    ASC: 'asc',
    DESC: 'desc',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const Roles = {
    GUEST: 'GUEST',
    USER: 'USER',
    FRONT_USER: 'FRONT_USER',
    BACKEND_USER: 'BACKEND_USER',
    ADMIN: 'ADMIN',
    SUPER_ADMIN: 'SUPER_ADMIN',
    $NEW_USER: '$newUser'
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {number} */
const StompStates = {
    '已关闭': 0,
    '正在重连': 1,
    '连接成功': 2,
    '已断开': 3,
};
StompStates[StompStates['已关闭']] = '已关闭';
StompStates[StompStates['正在重连']] = '正在重连';
StompStates[StompStates['连接成功']] = '连接成功';
StompStates[StompStates['已断开']] = '已断开';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const UiLandscape = {
    horizontal: 'horizontal',
    vertical: 'vertical',
    responsive: 'responsive',
    inline: 'inline',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const UiSize = {
    large: 'lg',
    middle: 'md',
    normal: 'md',
    small: 'sm',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const UiPosition = {
    leftTop: 'top-left',
    leftBottom: 'bottom-left',
    rightTop: 'top-right',
    rightBottom: 'bottom-right',
    centerTop: 'top-center',
    centerBottom: 'bottom-center',
    center: 'center',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const Widget = {
    INPUT: 'input',
    CHECKBOX: 'checkbox',
    RADIO: 'radio',
    SELECT: 'select',
    MULTI_SELECT: 'multi-select',
    DATA_PICKER: 'date-picker',
    TEXT: 'text-area',
    SWITCH: 'switch',
    FILE: 'file',
    AUTO_COMPLETE: 'typeahead',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const ContentType = {
    STRING: 'string',
    TEMPLATE_STR: 'templateStr',
    DATA: 'data',
    FUNCTION: 'function',
    TEMPLATE: 'template',
    COMPONENT: 'component',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const InputTypes = {
    text: 'text',
    checkbox: 'checkbox',
    radio: 'radio',
    password: 'password',
    button: 'button',
    file: 'file',
    color: 'color',
    date: 'date',
    local: 'datetime-local',
    email: 'email',
    month: 'month',
    number: 'number',
    range: 'range',
    search: 'search',
    tel: 'tel',
    time: 'time',
    url: 'url',
    week: 'week',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @enum {string} */
const UiTheme = {
    PRIMARY: 'primary',
    SECONDARY: 'secondary',
    SUCCESS: 'success',
    DANGER: 'danger',
    WARNING: 'warning',
    INFO: 'info',
    LIGHT: 'light',
    DARK: 'dark',
};
/** @type {?} */
const UiThemes = [
    UiTheme.SUCCESS,
    UiTheme.DANGER,
    UiTheme.WARNING,
    UiTheme.INFO,
    UiTheme.LIGHT,
    UiTheme.DARK
];
/** @enum {string} */
const UiGray = {
    G100: 'bg-gray-100',
    G200: 'bg-gray-200',
    G300: 'bg-gray-300',
    G400: 'bg-gray-400',
    G500: 'bg-gray-500',
    G600: 'bg-gray-600',
    G700: 'bg-gray-700',
    G800: 'bg-gray-800',
    G900: 'bg-gray-900',
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { AggMethods, AggMethodsProps, AggInterval, AggIntervalProps, ChartType, ContextNames, LifeCycleNames, UI_COLORS, THEME_COLORS, DialogType, MenuOrientation, DEFAULT_TREE_NODE_KEYS, ReadAs, DataType, FieldId, DataAttr, VarType, NO_OP, RegPatterns, DEFAULT_ES_QUERY_CONDITION, ES_QUERY_OPERATORS, EsQueryMethods, EsAggMethods, EsBulkAggMethods, NotifyType, NotifyLevel, NotifyMethod, Devices, LogLevel, OverlayType, StateNames, HttpMethod, HttpResponseType, HttpContentType, HttpRequestPayloadType, ApiServerType, DEFAULT_QUERY_CONDITION, Order, Roles, StompStates, UiLandscape, UiSize, UiPosition, Widget, ContentType, InputTypes, UiTheme, UiThemes, UiGray };

//# sourceMappingURL=er-types.js.map