import { EventEmitter } from '@angular/core';
import { ButtonProps } from '../button';
import { DynaContent } from '../dyna-content';
export declare enum DialogType {
    CONFIRM = "confirm",
    POPUP = "popup"
}
export interface DialogProp {
    header?: string;
    width?: number;
    height?: number;
    closeOnEscape?: boolean;
    context?: any;
}
export interface ConfirmDialogProp extends DialogProp {
    content?: string;
    icon?: string;
    key?: string;
    rtl?: boolean;
    closable?: boolean;
    responsive?: boolean;
    appendTo?: any;
    acceptLabel?: string;
    acceptIcon?: string;
    acceptVisible?: boolean;
    rejectLabel?: string;
    rejectIcon?: string;
    rejectVisible?: boolean;
    acceptButtonStyleClass?: string;
    rejectButtonStyleClass?: string;
    onAccept?: (context: any) => void;
    onReject?: (context: any) => void;
    acceptEvent?: EventEmitter<any>;
    rejectEvent?: EventEmitter<any>;
}
export interface PopupDialogProp extends DialogProp {
    content?: DynaContent;
    header?: string;
    draggable?: boolean;
    resizable?: boolean;
    minWidth?: number;
    minHeight?: number;
    contentMaxHeight?: number;
    contentMaxWidth?: number;
    contentWidth?: number;
    contentHeight?: number;
    contentStyle?: {};
    visible?: boolean;
    modal?: boolean;
    dismissableMask?: boolean;
    rtl?: boolean;
    closable?: boolean;
    responsive?: boolean;
    breakpoint?: number;
    appendTo?: any;
    style?: any;
    styleClass?: any;
    showHeader?: boolean;
    showFooter?: boolean;
    positionLeft?: number;
    positionTop?: number;
    baseZIndex?: number;
    autoZIndex?: boolean;
    ariaLabelledBy?: string;
    blockScroll?: boolean;
    maximizable?: boolean;
    closeLabel?: string;
    closeIcon?: string;
    onClose?: (context: any) => boolean;
    buttons?: ButtonProps[];
}
