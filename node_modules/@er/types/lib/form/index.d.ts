import { Observable } from 'rxjs';
import { ApiRequestOptions } from '../api';
import { ButtonProps } from '../button';
import { DataEntity } from '../data-entity';
import { DynaContent } from '../dyna-content';
import { UiLandscape } from '../landscape';
import { Props } from '../props';
export interface FormProps extends Props {
    entity?: DataEntity;
    apiEntry?: string;
    styleClass?: any;
    style?: any;
    formStyleClass?: any;
    formStyle?: any;
    header?: DynaContent;
    footer?: DynaContent;
    landscape?: UiLandscape;
    fields?: any[];
    options?: any;
    modelId?: any;
    model?: {};
    buttons?: ButtonProps[];
    submitRootKey?: string;
    submitExcludeKeys?: string | string[];
    resetKeys?: string | string[];
    resetAfterSubmit?: boolean;
    buttonsStyleClass?: any;
    submitBtnStyleClass?: any;
    resetBtnStyleClass?: any;
    backBtnStyleClass?: any;
    getModelRequestOptions?: ApiRequestOptions;
    submitRequestOptions?: ApiRequestOptions;
    beforeSubmit?: (ctx: any) => void | boolean | Observable<boolean>;
    afterSubmit?: (ctx: any) => void | {} | Observable<any>;
    valueChanges?: (ctx: any) => void;
    onSubmit?: (ctx: any) => void;
    onSubmitted?: (ctx: any) => void;
    onFormValueChanges?: (ctx: any) => void;
    $container?: any;
    panel?: {
        caption?: string | ((model: any) => string);
        showHeader?: boolean;
        icon?: string;
        collapsable?: boolean;
        collapsed?: boolean;
        closable?: boolean;
        panelStyleClass?: any;
        barStyleClass?: any;
        panelStyle?: any;
        footer?: string;
    };
}
