import { RequestBodySearch } from 'elastic-builder';
import { AggProps } from '../aggs';
import { HttpRequestOptions } from '../http';
import { Query } from '../query';
import { Sort } from '../sort';
export interface ApiParamsKeys {
    id?: string;
    ids?: string;
    data?: string;
    q?: string;
    query?: string;
    filter?: string;
    globalFiler?: string;
    page?: string;
    size?: string;
    sort?: string;
    order?: string;
    fields?: string;
    from?: string;
    to?: string;
}
export interface ApiPayload {
    id?: any;
    ids?: any | any[];
    data?: {};
    query?: Query | any[] | {} | RequestBodySearch;
    filter?: Query | any[] | {};
    aggs?: string | string[] | AggProps | AggProps[] | any;
    page?: number;
    size?: number;
    from?: number;
    to?: number;
    sort?: Sort;
    fields?: string | string[];
    script?: string;
    params?: {};
    [key: string]: any;
}
export declare enum ApiServerType {
    App = "app",
    ES = "es",
    ER = "er",
    MOCK = "mock",
    OTHER = "other"
}
export interface ApiRequestOptions extends HttpRequestOptions {
    paramsKeys?: ApiParamsKeys;
    uriResolver?: string | ((apiEntry: string, payload?: ApiPayload, options?: ApiRequestOptions) => string);
    payloadResolver?: (apiEntry: string, payload: (ApiPayload | string), options?: ApiRequestOptions) => {
        [key: string]: any;
    } | string;
    actions?: {
        login?: ApiRequestOptions;
        logout?: ApiRequestOptions;
        changePwd?: ApiRequestOptions;
        resetPwd?: ApiRequestOptions;
        register?: ApiRequestOptions;
        getById?: ApiRequestOptions;
        getByIds?: ApiRequestOptions;
        getByQuery?: ApiRequestOptions;
        create?: ApiRequestOptions;
        updateById?: ApiRequestOptions;
        patchById?: ApiRequestOptions;
        updateByQuery?: ApiRequestOptions;
        deleteById?: ApiRequestOptions;
        deleteByQuery?: ApiRequestOptions;
        batch?: ApiRequestOptions;
        getSuggests?: ApiRequestOptions;
        getFile?: ApiRequestOptions;
        deleteFile?: ApiRequestOptions;
    };
}
