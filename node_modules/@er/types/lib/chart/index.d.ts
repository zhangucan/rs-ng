import { ApiDataProps } from '../api-data/index';
import { DataItemProps } from '../data-item';
import { DataSource } from '../data-source/index';
import { Props } from '../props';
export declare enum ChartType {
    PIE = "pie",
    LINE = "line",
    BAR = "bar",
    RADAR = "radar",
    AREA = "polarArea",
    DOUGHNUT = "doughnut"
}
export interface ChartDimension {
    title?: string;
    dataSrcPath?: string;
    dataItemProps?: DataItemProps;
}
export interface ChartProps extends Props {
    type?: ChartType;
    data?: ChartDataProps;
    rawData?: {}[];
    options?: {};
    caption?: string;
    captionIcon?: string;
    width?: string;
    height?: string;
    switchable?: boolean;
    dataSource?: DataSource | ApiDataProps | ApiDataProps[];
    dimensions?: ChartDimension | ChartDimension[] | ((rawData: any) => ChartDataProps);
    dataItemProps?: DataItemProps;
    resolveDataSource?: {
        method: ((ds: DataSource) => DataSource);
    };
    resolveDimension?: {
        method: ((dimension: ChartDimension) => ChartDimension);
    };
    [key: string]: any;
}
export interface ChartDataProps {
    labels?: string[];
    datasets?: ChartDataSetsProps | ChartDataSetsProps[];
}
export interface ChartDataSetsProps {
    label?: string;
    data?: number[];
    [key: string]: any;
}
export interface LineChartOptions {
    showLines?: boolean;
    spanGaps?: boolean;
}
export interface LineChartDataSetProps extends ChartDataSetsProps {
    xAxisID?: string;
    yAxisID?: string;
    backgroundColor?: string;
    borderColor?: string;
    borderWidth?: number;
    borderDash?: number[];
    borderDashOffset?: number;
    borderCapStyle?: string;
    borderJoinStyle?: string;
    cubicInterpolationMode?: string;
    fill?: boolean | string;
    lineTension?: number;
    pointBackgroundColor?: string | string[];
    pointBorderColor?: string | string[];
    pointBorderWidth?: number | number[];
    pointRadius?: number | number[];
    pointStyle?: string | string[];
    pointRotation?: number | number[];
    pointHitRadius?: number | number[];
    pointHoverBackgroundColor?: string | string[];
    pointHoverBorderColor?: string | string[];
    pointHoverBorderWidth?: number | number[];
    pointHoverRadius?: number | number[];
    showLine?: boolean;
    spanGaps?: boolean;
    steppedLine?: boolean;
}
export interface BarChartOptions {
    barPercentage?: number;
    categoryPercentage?: number;
    barThickness?: number | string;
    maxBarThickness?: number;
}
export interface BarChartDataSetProps extends ChartDataSetsProps {
    xAxisID?: string;
    yAxisID?: string;
    backgroundColor?: string | string[];
    borderColor?: string | string[];
    borderWidth?: number | number[];
    borderSkipped?: string;
    hoverBackgroundColo?: string | string[];
    hoverBorderColor?: string | string[];
    hoverBorderWidth?: number | number[];
}
export interface RadarChartDataSetProps extends ChartDataSetsProps {
    backgroundColor?: string;
    borderColor?: string;
    borderWidth?: number;
    borderDash?: number[];
    borderDashOffset?: number;
    borderCapStyle?: string;
    borderJoinStyle?: string;
    fill?: boolean | string;
    lineTension?: number;
    pointBackgroundColor?: string | string[];
    pointBorderColor?: string | string[];
    pointBorderWidth?: number | number[];
    pointRadius?: number | number[];
    pointRotation?: number | number[];
    pointStyle?: 'circle' | 'cross' | 'crossRot' | 'dash' | 'line' | 'rect' | 'rectRounded' | 'rectRot' | 'star' | 'triangle';
    pointHitRadius?: number | number[];
    pointHoverBackgroundColor?: string | string[];
    pointHoverBorderColor?: string | string[];
    pointHoverBorderWidth?: number | number[];
    pointHoverRadius?: number | number[];
}
export interface PieChartOptions {
    cutoutPercentage?: number;
    rotation?: number;
    circumference?: number;
}
export interface PieChartDataSetProps extends ChartDataSetsProps {
    backgroundColor?: string[];
    borderColor?: string[];
    borderWidth?: number[];
    hoverBackgroundColor?: string[];
    hoverBorderColor?: string[];
    hoverBorderWidth?: number[];
}
export interface PolarAreaDataSetProps extends ChartDataSetsProps {
    backgroundColor?: string[];
    borderColor?: string[];
    borderWidth?: number[];
    hoverBackgroundColor?: string[];
    hoverBorderColor?: string[];
    hoverBorderWidth?: number[];
}
export interface PolarAreaOptions {
    startAngle?: number;
}
