import { TemplateRef, Type } from '@angular/core';
import { AttributesMap } from 'ng-dynamic-component';
import { Observable } from 'rxjs';
export interface Context {
    [key: string]: any;
}
export interface DynaDirective {
    type?: any;
    inputs?: {};
    outputs?: {};
}
export interface DynaComponent {
    type?: Type<any>;
    props?: {};
    directives?: DynaDirective | DynaDirective[];
    attrs?: AttributesMap;
}
export interface ContextedContent {
    content?: string | ((context: any) => any | Observable<any>) | TemplateRef<any>;
    context?: Context;
    styleClass?: any;
    style?: any;
}
export declare type DynaContent = string | {
    data: any;
} | ((context: any) => any | Observable<any>) | TemplateRef<any> | DynaComponent | ContextedContent;
export declare enum ContentType {
    STRING = "string",
    TEMPLATE_STR = "templateStr",
    DATA = "data",
    FUNCTION = "function",
    TEMPLATE = "template",
    COMPONENT = "component"
}
