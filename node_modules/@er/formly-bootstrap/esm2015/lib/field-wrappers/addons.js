/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { FieldWrapper } from '@ngx-formly/core';
export class BsAddonsWrapperComponent extends FieldWrapper {
    /**
     * @param {?} $event
     * @return {?}
     */
    addonRightClick($event) {
        if (this.to.addonRight.onClick) {
            this.to.addonRight.onClick(this.to, this, $event);
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    addonLeftClick($event) {
        if (this.to.addonLeft.onClick) {
            this.to.addonLeft.onClick(this.to, this, $event);
        }
    }
}
BsAddonsWrapperComponent.decorators = [
    { type: Component, args: [{
                template: `
    <div class="input-group">
      <div class="input-group-prepend"
        *ngIf="to['addonLeft']"
        [ngStyle]="{cursor: to.addonLeft.onClick ? 'pointer' : 'inherit'}"
        (click)="addonLeftClick($event)">
        <i class="input-group-text" [ngClass]="to['addonLeft'].class" *ngIf="to['addonLeft'].class"></i>
        <span *ngIf="to['addonLeft'].text" class="input-group-text">{{ to['addonLeft'].text }}</span>
      </div>
      <ng-template #fieldComponent></ng-template>
      <div class="input-group-append"
        *ngIf="to['addonRight']"
        [ngStyle]="{cursor: to['addonRight'].onClick ? 'pointer' : 'inherit'}"
        (click)="addonRightClick($event)">
        <i class="input-group-text" [ngClass]="to['addonRight'].class" *ngIf="to['addonRight'].class"></i>
        <span *ngIf="to['addonRight'].text" class="input-group-text">{{ to['addonRight'].text }}</span>
      </div>
    </div>
  `,
                styles: [`
    :host /deep/ .input-group>:not(:first-child)> .form-control {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
    :host /deep/ .input-group>:not(:last-child)> .form-control {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
  `]
            }] }
];
BsAddonsWrapperComponent.propDecorators = {
    fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]
};
if (false) {
    /** @type {?} */
    BsAddonsWrapperComponent.prototype.fieldComponent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkb25zLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL2Zvcm1seS1ib290c3RyYXAvIiwic291cmNlcyI6WyJsaWIvZmllbGQtd3JhcHBlcnMvYWRkb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNyRSxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sa0JBQWtCLENBQUM7QUFpQzlDLE1BQU0sT0FBTyx3QkFBeUIsU0FBUSxZQUFZOzs7OztJQUd4RCxlQUFlLENBQUMsTUFBVztRQUN6QixJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDLE9BQU8sRUFBRTtZQUM5QixJQUFJLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7U0FDbkQ7SUFDSCxDQUFDOzs7OztJQUVELGNBQWMsQ0FBQyxNQUFXO1FBQ3hCLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFO1lBQzdCLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztTQUNsRDtJQUNILENBQUM7OztZQTVDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FrQlQ7eUJBQ1E7Ozs7Ozs7OztHQVNSO2FBQ0Y7Ozs2QkFFRSxTQUFTLFNBQUMsZ0JBQWdCLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQWdCLEVBQUM7Ozs7SUFBckQsa0RBQXdGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIFZpZXdDaGlsZCwgVmlld0NvbnRhaW5lclJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0ZpZWxkV3JhcHBlcn0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgY2xhc3M9XCJpbnB1dC1ncm91cFwiPlxuICAgICAgPGRpdiBjbGFzcz1cImlucHV0LWdyb3VwLXByZXBlbmRcIlxuICAgICAgICAqbmdJZj1cInRvWydhZGRvbkxlZnQnXVwiXG4gICAgICAgIFtuZ1N0eWxlXT1cIntjdXJzb3I6IHRvLmFkZG9uTGVmdC5vbkNsaWNrID8gJ3BvaW50ZXInIDogJ2luaGVyaXQnfVwiXG4gICAgICAgIChjbGljayk9XCJhZGRvbkxlZnRDbGljaygkZXZlbnQpXCI+XG4gICAgICAgIDxpIGNsYXNzPVwiaW5wdXQtZ3JvdXAtdGV4dFwiIFtuZ0NsYXNzXT1cInRvWydhZGRvbkxlZnQnXS5jbGFzc1wiICpuZ0lmPVwidG9bJ2FkZG9uTGVmdCddLmNsYXNzXCI+PC9pPlxuICAgICAgICA8c3BhbiAqbmdJZj1cInRvWydhZGRvbkxlZnQnXS50ZXh0XCIgY2xhc3M9XCJpbnB1dC1ncm91cC10ZXh0XCI+e3sgdG9bJ2FkZG9uTGVmdCddLnRleHQgfX08L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxuZy10ZW1wbGF0ZSAjZmllbGRDb21wb25lbnQ+PC9uZy10ZW1wbGF0ZT5cbiAgICAgIDxkaXYgY2xhc3M9XCJpbnB1dC1ncm91cC1hcHBlbmRcIlxuICAgICAgICAqbmdJZj1cInRvWydhZGRvblJpZ2h0J11cIlxuICAgICAgICBbbmdTdHlsZV09XCJ7Y3Vyc29yOiB0b1snYWRkb25SaWdodCddLm9uQ2xpY2sgPyAncG9pbnRlcicgOiAnaW5oZXJpdCd9XCJcbiAgICAgICAgKGNsaWNrKT1cImFkZG9uUmlnaHRDbGljaygkZXZlbnQpXCI+XG4gICAgICAgIDxpIGNsYXNzPVwiaW5wdXQtZ3JvdXAtdGV4dFwiIFtuZ0NsYXNzXT1cInRvWydhZGRvblJpZ2h0J10uY2xhc3NcIiAqbmdJZj1cInRvWydhZGRvblJpZ2h0J10uY2xhc3NcIj48L2k+XG4gICAgICAgIDxzcGFuICpuZ0lmPVwidG9bJ2FkZG9uUmlnaHQnXS50ZXh0XCIgY2xhc3M9XCJpbnB1dC1ncm91cC10ZXh0XCI+e3sgdG9bJ2FkZG9uUmlnaHQnXS50ZXh0IH19PC9zcGFuPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIGAsXG4gIHN0eWxlczogW2BcbiAgICA6aG9zdCAvZGVlcC8gLmlucHV0LWdyb3VwPjpub3QoOmZpcnN0LWNoaWxkKT4gLmZvcm0tY29udHJvbCB7XG4gICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwO1xuICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDtcbiAgICB9XG4gICAgOmhvc3QgL2RlZXAvIC5pbnB1dC1ncm91cD46bm90KDpsYXN0LWNoaWxkKT4gLmZvcm0tY29udHJvbCB7XG4gICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcbiAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwO1xuICAgIH1cbiAgYF0sXG59KVxuZXhwb3J0IGNsYXNzIEJzQWRkb25zV3JhcHBlckNvbXBvbmVudCBleHRlbmRzIEZpZWxkV3JhcHBlciB7XG4gIEBWaWV3Q2hpbGQoJ2ZpZWxkQ29tcG9uZW50Jywge3JlYWQ6IFZpZXdDb250YWluZXJSZWZ9KSBmaWVsZENvbXBvbmVudDogVmlld0NvbnRhaW5lclJlZjtcblxuICBhZGRvblJpZ2h0Q2xpY2soJGV2ZW50OiBhbnkpIHtcbiAgICBpZiAodGhpcy50by5hZGRvblJpZ2h0Lm9uQ2xpY2spIHtcbiAgICAgIHRoaXMudG8uYWRkb25SaWdodC5vbkNsaWNrKHRoaXMudG8sIHRoaXMsICRldmVudCk7XG4gICAgfVxuICB9XG5cbiAgYWRkb25MZWZ0Q2xpY2soJGV2ZW50OiBhbnkpIHtcbiAgICBpZiAodGhpcy50by5hZGRvbkxlZnQub25DbGljaykge1xuICAgICAgdGhpcy50by5hZGRvbkxlZnQub25DbGljayh0aGlzLnRvLCB0aGlzLCAkZXZlbnQpO1xuICAgIH1cbiAgfVxufVxuIl19