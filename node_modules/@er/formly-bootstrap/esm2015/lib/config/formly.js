/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { FormlyWrappers } from '@er/formly';
import { BsArrayTypeComponent } from '../field-types/array/type';
import { BsCheckboxTypeComponent } from '../field-types/basic/checkbox';
import { BsInputTypeComponent } from '../field-types/basic/input';
import { BsMultiCheckboxTypeComponent } from '../field-types/basic/multicheckbox';
import { BsTextAreaTypeComponent } from '../field-types/basic/textarea';
import { BsButtonTypeComponent } from '../field-types/button/type';
import { BsSwitchTypeComponent } from '../field-types/switch/type';
import { BsAddonsWrapperComponent } from '../field-wrappers/addons';
import { TemplateAddons } from '../run/addon';
import { BsFormlyTypes } from '../types/field-types';
import { FormlyBsWrappers } from '../types/field-wrappers';
/** @type {?} */
export const BS_FORMLY_CONFIG = {
    types: [
        {
            name: BsFormlyTypes.input,
            component: BsInputTypeComponent,
            wrappers: [FormlyWrappers.vertical]
        },
        {
            name: BsFormlyTypes.checkbox,
            component: BsCheckboxTypeComponent,
            wrappers: [FormlyWrappers.vertical],
            defaultOptions: {
                templateOptions: {
                    indeterminate: true,
                    hideLabel: true
                }
            }
        },
        {
            name: BsFormlyTypes.textArea,
            component: BsTextAreaTypeComponent,
            wrappers: [FormlyWrappers.vertical],
            defaultOptions: {
                templateOptions: {
                    cols: 1,
                    rows: 1
                }
            }
        },
        {
            name: BsFormlyTypes.multiCheckbox,
            component: BsMultiCheckboxTypeComponent,
            wrappers: [FormlyWrappers.vertical],
            defaultOptions: {
                templateOptions: {
                    options: []
                }
            }
        },
        {
            name: BsFormlyTypes.switch,
            component: BsSwitchTypeComponent,
            wrappers: [FormlyWrappers.vertical]
        },
        {
            name: BsFormlyTypes.array,
            component: BsArrayTypeComponent,
            wrappers: [FormlyWrappers.vertical]
        },
        {
            name: BsFormlyTypes.button,
            component: BsButtonTypeComponent,
            wrappers: [FormlyWrappers.vertical]
        }
    ],
    wrappers: [
        { name: FormlyBsWrappers.addon, component: BsAddonsWrapperComponent }
    ],
    manipulators: [
        { class: TemplateAddons, method: 'run' }
    ]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWx5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL2Zvcm1seS1ib290c3RyYXAvIiwic291cmNlcyI6WyJsaWIvY29uZmlnL2Zvcm1seS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLFlBQVksQ0FBQztBQUUxQyxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUMvRCxPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQztBQUN0RSxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSw0QkFBNEIsQ0FBQztBQUNoRSxPQUFPLEVBQUMsNEJBQTRCLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUNoRixPQUFPLEVBQUMsdUJBQXVCLEVBQUMsTUFBTSwrQkFBK0IsQ0FBQztBQUN0RSxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSw0QkFBNEIsQ0FBQztBQUNqRSxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSw0QkFBNEIsQ0FBQztBQUNqRSxPQUFPLEVBQUMsd0JBQXdCLEVBQUMsTUFBTSwwQkFBMEIsQ0FBQztBQUNsRSxPQUFPLEVBQUMsY0FBYyxFQUFDLE1BQU0sY0FBYyxDQUFDO0FBQzVDLE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQztBQUNuRCxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSx5QkFBeUIsQ0FBQzs7QUFFekQsTUFBTSxPQUFPLGdCQUFnQixHQUFpQjtJQUM1QyxLQUFLLEVBQUU7UUFDTDtZQUNFLElBQUksRUFBRSxhQUFhLENBQUMsS0FBSztZQUN6QixTQUFTLEVBQUUsb0JBQW9CO1lBQy9CLFFBQVEsRUFBRSxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUM7U0FDcEM7UUFDRDtZQUNFLElBQUksRUFBRSxhQUFhLENBQUMsUUFBUTtZQUM1QixTQUFTLEVBQUUsdUJBQXVCO1lBQ2xDLFFBQVEsRUFBRSxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUM7WUFDbkMsY0FBYyxFQUFFO2dCQUNkLGVBQWUsRUFBRTtvQkFDZixhQUFhLEVBQUUsSUFBSTtvQkFDbkIsU0FBUyxFQUFFLElBQUk7aUJBQ2hCO2FBQ0Y7U0FDRjtRQUNEO1lBQ0UsSUFBSSxFQUFFLGFBQWEsQ0FBQyxRQUFRO1lBQzVCLFNBQVMsRUFBRSx1QkFBdUI7WUFDbEMsUUFBUSxFQUFFLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQztZQUNuQyxjQUFjLEVBQUU7Z0JBQ2QsZUFBZSxFQUFFO29CQUNmLElBQUksRUFBRSxDQUFDO29CQUNQLElBQUksRUFBRSxDQUFDO2lCQUNSO2FBQ0Y7U0FDRjtRQUNEO1lBQ0UsSUFBSSxFQUFFLGFBQWEsQ0FBQyxhQUFhO1lBQ2pDLFNBQVMsRUFBRSw0QkFBNEI7WUFDdkMsUUFBUSxFQUFFLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQztZQUNuQyxjQUFjLEVBQUU7Z0JBQ2QsZUFBZSxFQUFFO29CQUNmLE9BQU8sRUFBRSxFQUFFO2lCQUNaO2FBQ0Y7U0FDRjtRQUNEO1lBQ0UsSUFBSSxFQUFFLGFBQWEsQ0FBQyxNQUFNO1lBQzFCLFNBQVMsRUFBRSxxQkFBcUI7WUFDaEMsUUFBUSxFQUFFLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQztTQUNwQztRQUNEO1lBQ0UsSUFBSSxFQUFFLGFBQWEsQ0FBQyxLQUFLO1lBQ3pCLFNBQVMsRUFBRSxvQkFBb0I7WUFDL0IsUUFBUSxFQUFFLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQztTQUNwQztRQUNEO1lBQ0UsSUFBSSxFQUFFLGFBQWEsQ0FBQyxNQUFNO1lBQzFCLFNBQVMsRUFBRSxxQkFBcUI7WUFDaEMsUUFBUSxFQUFFLENBQUMsY0FBYyxDQUFDLFFBQVEsQ0FBQztTQUNwQztLQUNGO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsRUFBQyxJQUFJLEVBQUUsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLFNBQVMsRUFBRSx3QkFBd0IsRUFBQztLQUNwRTtJQUNELFlBQVksRUFBRTtRQUNaLEVBQUMsS0FBSyxFQUFFLGNBQWMsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFDO0tBQ3ZDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0Zvcm1seVdyYXBwZXJzfSBmcm9tICdAZXIvZm9ybWx5JztcbmltcG9ydCB7Q29uZmlnT3B0aW9ufSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcbmltcG9ydCB7QnNBcnJheVR5cGVDb21wb25lbnR9IGZyb20gJy4uL2ZpZWxkLXR5cGVzL2FycmF5L3R5cGUnO1xuaW1wb3J0IHtCc0NoZWNrYm94VHlwZUNvbXBvbmVudH0gZnJvbSAnLi4vZmllbGQtdHlwZXMvYmFzaWMvY2hlY2tib3gnO1xuaW1wb3J0IHtCc0lucHV0VHlwZUNvbXBvbmVudH0gZnJvbSAnLi4vZmllbGQtdHlwZXMvYmFzaWMvaW5wdXQnO1xuaW1wb3J0IHtCc011bHRpQ2hlY2tib3hUeXBlQ29tcG9uZW50fSBmcm9tICcuLi9maWVsZC10eXBlcy9iYXNpYy9tdWx0aWNoZWNrYm94JztcbmltcG9ydCB7QnNUZXh0QXJlYVR5cGVDb21wb25lbnR9IGZyb20gJy4uL2ZpZWxkLXR5cGVzL2Jhc2ljL3RleHRhcmVhJztcbmltcG9ydCB7QnNCdXR0b25UeXBlQ29tcG9uZW50fSBmcm9tICcuLi9maWVsZC10eXBlcy9idXR0b24vdHlwZSc7XG5pbXBvcnQge0JzU3dpdGNoVHlwZUNvbXBvbmVudH0gZnJvbSAnLi4vZmllbGQtdHlwZXMvc3dpdGNoL3R5cGUnO1xuaW1wb3J0IHtCc0FkZG9uc1dyYXBwZXJDb21wb25lbnR9IGZyb20gJy4uL2ZpZWxkLXdyYXBwZXJzL2FkZG9ucyc7XG5pbXBvcnQge1RlbXBsYXRlQWRkb25zfSBmcm9tICcuLi9ydW4vYWRkb24nO1xuaW1wb3J0IHtCc0Zvcm1seVR5cGVzfSBmcm9tICcuLi90eXBlcy9maWVsZC10eXBlcyc7XG5pbXBvcnQge0Zvcm1seUJzV3JhcHBlcnN9IGZyb20gJy4uL3R5cGVzL2ZpZWxkLXdyYXBwZXJzJztcblxuZXhwb3J0IGNvbnN0IEJTX0ZPUk1MWV9DT05GSUc6IENvbmZpZ09wdGlvbiA9IHtcbiAgdHlwZXM6IFtcbiAgICB7XG4gICAgICBuYW1lOiBCc0Zvcm1seVR5cGVzLmlucHV0LFxuICAgICAgY29tcG9uZW50OiBCc0lucHV0VHlwZUNvbXBvbmVudCxcbiAgICAgIHdyYXBwZXJzOiBbRm9ybWx5V3JhcHBlcnMudmVydGljYWxdXG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiBCc0Zvcm1seVR5cGVzLmNoZWNrYm94LFxuICAgICAgY29tcG9uZW50OiBCc0NoZWNrYm94VHlwZUNvbXBvbmVudCxcbiAgICAgIHdyYXBwZXJzOiBbRm9ybWx5V3JhcHBlcnMudmVydGljYWxdLFxuICAgICAgZGVmYXVsdE9wdGlvbnM6IHtcbiAgICAgICAgdGVtcGxhdGVPcHRpb25zOiB7XG4gICAgICAgICAgaW5kZXRlcm1pbmF0ZTogdHJ1ZSxcbiAgICAgICAgICBoaWRlTGFiZWw6IHRydWVcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogQnNGb3JtbHlUeXBlcy50ZXh0QXJlYSxcbiAgICAgIGNvbXBvbmVudDogQnNUZXh0QXJlYVR5cGVDb21wb25lbnQsXG4gICAgICB3cmFwcGVyczogW0Zvcm1seVdyYXBwZXJzLnZlcnRpY2FsXSxcbiAgICAgIGRlZmF1bHRPcHRpb25zOiB7XG4gICAgICAgIHRlbXBsYXRlT3B0aW9uczoge1xuICAgICAgICAgIGNvbHM6IDEsXG4gICAgICAgICAgcm93czogMVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICB7XG4gICAgICBuYW1lOiBCc0Zvcm1seVR5cGVzLm11bHRpQ2hlY2tib3gsXG4gICAgICBjb21wb25lbnQ6IEJzTXVsdGlDaGVja2JveFR5cGVDb21wb25lbnQsXG4gICAgICB3cmFwcGVyczogW0Zvcm1seVdyYXBwZXJzLnZlcnRpY2FsXSxcbiAgICAgIGRlZmF1bHRPcHRpb25zOiB7XG4gICAgICAgIHRlbXBsYXRlT3B0aW9uczoge1xuICAgICAgICAgIG9wdGlvbnM6IFtdXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6IEJzRm9ybWx5VHlwZXMuc3dpdGNoLFxuICAgICAgY29tcG9uZW50OiBCc1N3aXRjaFR5cGVDb21wb25lbnQsXG4gICAgICB3cmFwcGVyczogW0Zvcm1seVdyYXBwZXJzLnZlcnRpY2FsXVxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogQnNGb3JtbHlUeXBlcy5hcnJheSxcbiAgICAgIGNvbXBvbmVudDogQnNBcnJheVR5cGVDb21wb25lbnQsXG4gICAgICB3cmFwcGVyczogW0Zvcm1seVdyYXBwZXJzLnZlcnRpY2FsXVxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogQnNGb3JtbHlUeXBlcy5idXR0b24sXG4gICAgICBjb21wb25lbnQ6IEJzQnV0dG9uVHlwZUNvbXBvbmVudCxcbiAgICAgIHdyYXBwZXJzOiBbRm9ybWx5V3JhcHBlcnMudmVydGljYWxdXG4gICAgfVxuICBdLFxuICB3cmFwcGVyczogW1xuICAgIHtuYW1lOiBGb3JtbHlCc1dyYXBwZXJzLmFkZG9uLCBjb21wb25lbnQ6IEJzQWRkb25zV3JhcHBlckNvbXBvbmVudH1cbiAgXSxcbiAgbWFuaXB1bGF0b3JzOiBbXG4gICAge2NsYXNzOiBUZW1wbGF0ZUFkZG9ucywgbWV0aG9kOiAncnVuJ31cbiAgXVxufTtcbiJdfQ==