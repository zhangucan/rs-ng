{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@er/formly-bootstrap/lib/field-types/array/type.ts","ng://@er/formly-bootstrap/lib/field-types/basic/checkbox.ts","ng://@er/formly-bootstrap/lib/field-types/basic/multicheckbox.ts","ng://@er/formly-bootstrap/lib/field-types/basic/input.ts","ng://@er/formly-bootstrap/lib/field-types/basic/textarea.ts","ng://@er/formly-bootstrap/lib/field-types/button/type.ts","ng://@er/formly-bootstrap/lib/field-types/switch/type.ts","ng://@er/formly-bootstrap/lib/field-types/all.ts","ng://@er/formly-bootstrap/lib/field-wrappers/addons.ts","ng://@er/formly-bootstrap/lib/field-wrappers/all.ts","ng://@er/formly-bootstrap/lib/types/field-types.ts","ng://@er/formly-bootstrap/lib/types/field-wrappers.ts","ng://@er/formly-bootstrap/lib/run/addon.ts","ng://@er/formly-bootstrap/lib/config/formly.ts","ng://@er/formly-bootstrap/lib/er-formly-bootstrap.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","BsArrayTypeComponent","builder","_super","tslib_1.__extends","move","step","_a","model","splice","apply","_buildForm","Component","args","template","FormlyFormBuilder","FieldArrayType","BsCheckboxTypeComponent","FieldType","BsMultiCheckboxTypeComponent","createControl","field","templateOptions","options","Observable","Error","controls","reduce","obj","option","key","FormControl","undefined","FormGroup","validators","validation","asyncValidators","BsInputTypeComponent","defineProperty","to","type","addonLeft","addonRight","HostBinding","BsTextAreaTypeComponent","BsButtonTypeComponent","BsSwitchTypeComponent","BS_FORMLY_TYPES","basicTypes.BsTextAreaTypeComponent","basicTypes.BsInputTypeComponent","basicTypes.BsMultiCheckboxTypeComponent","basicTypes.BsCheckboxTypeComponent","BsAddonsWrapperComponent","addonRightClick","$event","onClick","addonLeftClick","ViewChild","read","ViewContainerRef","FieldWrapper","BS_FORMLY_WRAPPERS","BsFormlyTypes","input","checkbox","radio","select","switch","button","textArea","multiCheckbox","multiSelect","array","FormlyBsWrappers","addon","TemplateAddons","run","fc","templateManipulators","postWrapper","startsWith","BS_FORMLY_CONFIG","types","name","component","wrappers","FormlyWrappers","vertical","defaultOptions","indeterminate","hideLabel","cols","rows","manipulators","class","method","ErFormlyBootstrapModule","NgModule","imports","ReactiveFormsModule","ErCoreModule","ErFormlyModule","ErValidateModule","FormlyModule","forChild","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Component} from '@angular/core';\nimport {FieldArrayType, FormlyFormBuilder} from '@ngx-formly/core';\n\n@Component({\n  template: `\n    <div *ngFor=\"let field of field.fieldGroup; let i = index;\">\n      <formly-group\n        [model]=\"model[i]\"\n        [field]=\"field\"\n        [options]=\"options\"\n        [form]=\"formControl\">\n        <div class=\"col-sm-2 d-flex align-items-center\">\n          <button class=\"btn btn-danger\" type=\"button\" (click)=\"remove(i)\">Remove</button>\n        </div>\n      </formly-group>\n    </div>\n    <div style=\"margin:30px 0;\">\n      <button class=\"btn btn-primary\" type=\"button\" (click)=\"add()\"> Addd</button>\n    </div>\n    <!--<div *ngFor=\"let afield of field.fieldGroup; let i = index;\" class=\"d-flex align-items-center justify-content-around\">-->\n      <!--<formly-field class=\"d-flex align-items-center justify-content-between\" [field]=\"afield\"></formly-field>-->\n      <!--<div class=\"col-2\">-->\n        <!--<button *ngIf=\"model.length>0\" type=\"button\" class=\"mr-1 btn btn-danger btn-sm rounded-circle\"-->\n                <!--[title]=\"to['delBtnText'] || 'å é¤' \"-->\n                <!--(click)=\"remove(i)\">&#10005;-->\n        <!--</button>-->\n        <!--<button *ngIf=\"i>0\" type=\"button\" class=\"mr-1 btn btn-info btn-sm rounded-circle\"-->\n                <!--[title]=\"to['downBtnText'] || 'ä¸ç§»' \"-->\n                <!--(click)=\"move(i, -1)\">&#9650;-->\n        <!--</button>-->\n        <!--<button *ngIf=\"i<model.length-1\" type=\"button\" class=\"mr-1 btn btn-info btn-sm rounded-circle\"-->\n                <!--[title]=\"to['upBtnText'] || 'ä¸ç§»' \"-->\n                <!--(click)=\"move(i, 1)\">&#9660;-->\n        <!--</button>-->\n      <!--</div>-->\n    <!--</div>-->\n    <!--<div class=\"my-3\">-->\n      <!--<button class=\"btn btn-primary pull-right\" type=\"button\" (click)=\"add()\"><i-->\n        <!--class=\"fa fa-plus-circle\"></i> {{ to['addBtnText'] || 'å¢å '}}</button>-->\n    <!--</div>-->\n  `\n})\nexport class BsArrayTypeComponent extends FieldArrayType {\n  constructor(builder: FormlyFormBuilder) {\n    super(builder);\n  }\n\n  move(i, step) {\n    this.model.splice(i + step, 0, ...this.model.splice(i, 1));\n    (<any> this.options)._buildForm();\n  }\n}\n","import {Component} from '@angular/core';\nimport {FieldType} from '@ngx-formly/core';\n\n@Component({\n  template: `\n    <div class=\"custom-control custom-checkbox\">\n      <input class=\"custom-control-input\" type=\"checkbox\"\n        [class.is-invalid]=\"showError\"\n        [indeterminate]=\"to['indeterminate'] && field.formControl.value === null\"\n        [formControl]=\"formControl\"\n        [formlyAttributes]=\"field\">\n      <label class=\"custom-control-label\" [for]=\"id\">\n        {{ to.label }}\n        <span *ngIf=\"to.required && to['hideRequiredMarker'] !== true\">*</span>\n      </label>\n    </div>\n  `,\n})\nexport class BsCheckboxTypeComponent extends FieldType { }\n","import {Component} from '@angular/core';\nimport {AbstractControl, FormControl, FormGroup} from '@angular/forms';\nimport {FieldType, FormlyFieldConfig} from '@ngx-formly/core';\nimport {Observable} from 'rxjs';\n\n@Component({\n  template: `\n    <div class=\"custom-control custom-checkbox\" *ngFor=\"let option of to.options; let i = index;\">\n      <input class=\"custom-control-input\" type=\"checkbox\"\n        [id]=\"id + '_' + i\"\n        [value]=\"option.value\"\n        [formControl]=\"formControl.get(option.key)\"\n        [formlyAttributes]=\"field\">\n      <label class=\"custom-control-label\" [for]=\"id + '_' + i\">\n        {{ option.value }}\n      </label>\n    </div>\n  `,\n})\nexport class BsMultiCheckboxTypeComponent extends FieldType {\n\n  static createControl(model: any, field: FormlyFieldConfig): AbstractControl {\n    if (field.templateOptions.options instanceof Observable) {\n      throw new Error(`[Formly Error] You cannot pass an Observable to a multicheckbox yet.`);\n    }\n\n    const controls = field.templateOptions.options.reduce((obj, option) => {\n      obj[option.key] = new FormControl(model ? model[option.key] : undefined);\n      return obj;\n    }, {});\n\n    return new FormGroup(\n      controls,\n      field.validators ? field.validators.validation : undefined,\n      field.asyncValidators ? field.asyncValidators.validation : undefined,\n    );\n  }\n\n}\n","import {Component, HostBinding} from '@angular/core';\nimport {FieldType} from '@ngx-formly/core';\n\n@Component({\n  template: `\n    <input *ngIf=\"type !== 'number' else numberTpl\" [type]=\"type\" [formControl]=\"formControl\" class=\"form-control\" [formlyAttributes]=\"field\" [class.is-invalid]=\"showError\">\n    <ng-template #numberTpl>\n      <input type=\"number\" [formControl]=\"formControl\" class=\"form-control\" [formlyAttributes]=\"field\" [class.is-invalid]=\"showError\">\n    </ng-template>\n  `\n})\nexport class BsInputTypeComponent extends FieldType {\n  get type() {\n    return this.to.type || 'text';\n  }\n\n  @HostBinding('class.d-inline-flex')\n  get inLineFlex() {\n    return this.to.addonLeft || this.to.addonRight;\n  }\n\n  @HostBinding('class.custom-file')\n  get fileClass() {\n    return this.to.addonLeft || this.to.addonRight;\n  }\n}\n","import {Component} from '@angular/core';\nimport {FieldType} from '@ngx-formly/core';\n\n@Component({\n  template: `\n    <textarea [formControl]=\"formControl\" [cols]=\"to.cols\"\n      [rows]=\"to.rows\" class=\"form-control\" [class.is-invalid]=\"showError\"\n      [formlyAttributes]=\"field\">\n    </textarea>\n  `,\n})\nexport class BsTextAreaTypeComponent extends FieldType {\n}\n","import {Component} from '@angular/core';\nimport {FieldType} from '@ngx-formly/core';\n\n@Component({\n  template: `    \n    <er-button [context]=\"model\"></er-button>\n  `,\n})\nexport class BsButtonTypeComponent extends FieldType {\n}\n","import {Component} from '@angular/core';\nimport {FieldType} from '@ngx-formly/core';\n\n@Component({\n  template: `\n      <div class=\"d-block\">\n          <label class=\"switch switch-text switch-pill switch-lg\">\n              <input type=\"checkbox\" class='switch-input' [formControl]=\"formControl\" [formlyAttributes]=\"field\">\n              <span class=\"switch-label\" [attr.data-on]=\"to['onTitle']\" [attr.data-off]=\"to['offTitle']\"></span>\n              <span class=\"switch-handle\"></span>\n          </label>\n      </div>`,\n})\nexport class BsSwitchTypeComponent extends FieldType {\n\n}\n\n","import {BsArrayTypeComponent} from './array/type';\nimport * as basicTypes from './basic/all';\nimport {BsButtonTypeComponent} from './button/type';\nimport {BsSwitchTypeComponent} from './switch/type';\n\nexport * from './basic/all';\n\nexport const BS_FORMLY_TYPES = [\n  basicTypes.BsTextAreaTypeComponent,\n  basicTypes.BsInputTypeComponent,\n  basicTypes.BsMultiCheckboxTypeComponent,\n  basicTypes.BsCheckboxTypeComponent,\n  BsArrayTypeComponent,\n  BsButtonTypeComponent,\n  BsSwitchTypeComponent,\n];\n","import {Component, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FieldWrapper} from '@ngx-formly/core';\n\n@Component({\n  template: `\n    <div class=\"input-group\">\n      <div class=\"input-group-prepend\"\n        *ngIf=\"to['addonLeft']\"\n        [ngStyle]=\"{cursor: to.addonLeft.onClick ? 'pointer' : 'inherit'}\"\n        (click)=\"addonLeftClick($event)\">\n        <i class=\"input-group-text\" [ngClass]=\"to['addonLeft'].class\" *ngIf=\"to['addonLeft'].class\"></i>\n        <span *ngIf=\"to['addonLeft'].text\" class=\"input-group-text\">{{ to['addonLeft'].text }}</span>\n      </div>\n      <ng-template #fieldComponent></ng-template>\n      <div class=\"input-group-append\"\n        *ngIf=\"to['addonRight']\"\n        [ngStyle]=\"{cursor: to['addonRight'].onClick ? 'pointer' : 'inherit'}\"\n        (click)=\"addonRightClick($event)\">\n        <i class=\"input-group-text\" [ngClass]=\"to['addonRight'].class\" *ngIf=\"to['addonRight'].class\"></i>\n        <span *ngIf=\"to['addonRight'].text\" class=\"input-group-text\">{{ to['addonRight'].text }}</span>\n      </div>\n    </div>\n  `,\n  styles: [`\n    :host /deep/ .input-group>:not(:first-child)> .form-control {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n    :host /deep/ .input-group>:not(:last-child)> .form-control {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  `],\n})\nexport class BsAddonsWrapperComponent extends FieldWrapper {\n  @ViewChild('fieldComponent', {read: ViewContainerRef}) fieldComponent: ViewContainerRef;\n\n  addonRightClick($event: any) {\n    if (this.to.addonRight.onClick) {\n      this.to.addonRight.onClick(this.to, this, $event);\n    }\n  }\n\n  addonLeftClick($event: any) {\n    if (this.to.addonLeft.onClick) {\n      this.to.addonLeft.onClick(this.to, this, $event);\n    }\n  }\n}\n","import {BsAddonsWrapperComponent} from './addons';\n\nexport {BsAddonsWrapperComponent} from './addons';\n\nexport const BS_FORMLY_WRAPPERS = [\n  BsAddonsWrapperComponent\n];\n","export const BsFormlyTypes = {\n  input: 'bsInput',\n  checkbox: 'bsCheckbox',\n  radio: 'bsRadio',\n  select: 'bsSelect',\n  switch: 'bsSwitch',\n  button: 'bsButton',\n  textArea: 'bsTextArea',\n  multiCheckbox: 'bsMultiCheckbox',\n  multiSelect: 'bsMultiSelect',\n  array: 'bsArray',\n};\n","export const FormlyBsWrappers = {\n  field: 'bsFieldWrapper',\n  addon: 'bsAddonWrapper'\n};\n","import {FormlyConfig} from '@ngx-formly/core';\nimport {FormlyBsWrappers} from '../types/field-wrappers';\n\nexport class TemplateAddons {\n  run(fc: FormlyConfig) {\n    fc.templateManipulators.postWrapper.push((field) => {\n      if (field && field.type && field.type.startsWith('bs') &&\n        field.templateOptions && (field.templateOptions.addonLeft || field.templateOptions.addonRight)) {\n        return FormlyBsWrappers.addon;\n      }\n    });\n  }\n}\n","import {FormlyWrappers} from '@er/formly';\nimport {ConfigOption} from '@ngx-formly/core';\nimport {BsArrayTypeComponent} from '../field-types/array/type';\nimport {BsCheckboxTypeComponent} from '../field-types/basic/checkbox';\nimport {BsInputTypeComponent} from '../field-types/basic/input';\nimport {BsMultiCheckboxTypeComponent} from '../field-types/basic/multicheckbox';\nimport {BsTextAreaTypeComponent} from '../field-types/basic/textarea';\nimport {BsButtonTypeComponent} from '../field-types/button/type';\nimport {BsSwitchTypeComponent} from '../field-types/switch/type';\nimport {BsAddonsWrapperComponent} from '../field-wrappers/addons';\nimport {TemplateAddons} from '../run/addon';\nimport {BsFormlyTypes} from '../types/field-types';\nimport {FormlyBsWrappers} from '../types/field-wrappers';\n\nexport const BS_FORMLY_CONFIG: ConfigOption = {\n  types: [\n    {\n      name: BsFormlyTypes.input,\n      component: BsInputTypeComponent,\n      wrappers: [FormlyWrappers.vertical]\n    },\n    {\n      name: BsFormlyTypes.checkbox,\n      component: BsCheckboxTypeComponent,\n      wrappers: [FormlyWrappers.vertical],\n      defaultOptions: {\n        templateOptions: {\n          indeterminate: true,\n          hideLabel: true\n        }\n      }\n    },\n    {\n      name: BsFormlyTypes.textArea,\n      component: BsTextAreaTypeComponent,\n      wrappers: [FormlyWrappers.vertical],\n      defaultOptions: {\n        templateOptions: {\n          cols: 1,\n          rows: 1\n        }\n      }\n    },\n    {\n      name: BsFormlyTypes.multiCheckbox,\n      component: BsMultiCheckboxTypeComponent,\n      wrappers: [FormlyWrappers.vertical],\n      defaultOptions: {\n        templateOptions: {\n          options: []\n        }\n      }\n    },\n    {\n      name: BsFormlyTypes.switch,\n      component: BsSwitchTypeComponent,\n      wrappers: [FormlyWrappers.vertical]\n    },\n    {\n      name: BsFormlyTypes.array,\n      component: BsArrayTypeComponent,\n      wrappers: [FormlyWrappers.vertical]\n    },\n    {\n      name: BsFormlyTypes.button,\n      component: BsButtonTypeComponent,\n      wrappers: [FormlyWrappers.vertical]\n    }\n  ],\n  wrappers: [\n    {name: FormlyBsWrappers.addon, component: BsAddonsWrapperComponent}\n  ],\n  manipulators: [\n    {class: TemplateAddons, method: 'run'}\n  ]\n};\n","import {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {ErCoreModule} from '@er/core';\nimport {ErFormlyModule} from '@er/formly';\nimport {ErValidateModule} from '@er/validate';\nimport {FormlyModule} from '@ngx-formly/core';\nimport {BS_FORMLY_CONFIG} from './config/formly';\nimport {BS_FORMLY_TYPES} from './field-types/all';\nimport {BS_FORMLY_WRAPPERS} from './field-wrappers/all';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    ErCoreModule,\n    ErFormlyModule,\n    ErValidateModule,\n    FormlyModule.forChild(BS_FORMLY_CONFIG)\n  ],\n  declarations: [\n    ...BS_FORMLY_TYPES,\n    ...BS_FORMLY_WRAPPERS\n  ],\n  exports: [\n    FormlyModule\n  ]\n})\nexport class ErFormlyBootstrapModule {\n\n}\n"]}