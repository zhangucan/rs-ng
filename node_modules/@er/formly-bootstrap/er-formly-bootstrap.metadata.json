{"__symbolic":"module","version":4,"metadata":{"BS_FORMLY_TYPES":[{"__symbolic":"reference","name":"BsTextAreaTypeComponent"},{"__symbolic":"reference","name":"BsInputTypeComponent"},{"__symbolic":"reference","name":"BsMultiCheckboxTypeComponent"},{"__symbolic":"reference","name":"BsCheckboxTypeComponent"},{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"}],"BsCheckboxTypeComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldType","line":18,"character":45},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"template":"\n    <div class=\"custom-control custom-checkbox\">\n      <input class=\"custom-control-input\" type=\"checkbox\"\n        [class.is-invalid]=\"showError\"\n        [indeterminate]=\"to['indeterminate'] && field.formControl.value === null\"\n        [formControl]=\"formControl\"\n        [formlyAttributes]=\"field\">\n      <label class=\"custom-control-label\" [for]=\"id\">\n        {{ to.label }}\n        <span *ngIf=\"to.required && to['hideRequiredMarker'] !== true\">*</span>\n      </label>\n    </div>\n  "}]}],"members":{}},"BsMultiCheckboxTypeComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldType","line":19,"character":50},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"template":"\n    <div class=\"custom-control custom-checkbox\" *ngFor=\"let option of to.options; let i = index;\">\n      <input class=\"custom-control-input\" type=\"checkbox\"\n        [id]=\"id + '_' + i\"\n        [value]=\"option.value\"\n        [formControl]=\"formControl.get(option.key)\"\n        [formlyAttributes]=\"field\">\n      <label class=\"custom-control-label\" [for]=\"id + '_' + i\">\n        {{ option.value }}\n      </label>\n    </div>\n  "}]}],"members":{}},"BsInputTypeComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldType","line":11,"character":42},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"template":"\n    <input *ngIf=\"type !== 'number' else numberTpl\" [type]=\"type\" [formControl]=\"formControl\" class=\"form-control\" [formlyAttributes]=\"field\" [class.is-invalid]=\"showError\">\n    <ng-template #numberTpl>\n      <input type=\"number\" [formControl]=\"formControl\" class=\"form-control\" [formlyAttributes]=\"field\" [class.is-invalid]=\"showError\">\n    </ng-template>\n  "}]}],"members":{"inLineFlex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":16,"character":3},"arguments":["class.d-inline-flex"]}]}],"fileClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":21,"character":3},"arguments":["class.custom-file"]}]}]}},"BsTextAreaTypeComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldType","line":11,"character":45},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"template":"\n    <textarea [formControl]=\"formControl\" [cols]=\"to.cols\"\n      [rows]=\"to.rows\" class=\"form-control\" [class.is-invalid]=\"showError\"\n      [formlyAttributes]=\"field\">\n    </textarea>\n  "}]}],"members":{}},"BS_FORMLY_WRAPPERS":[{"__symbolic":"reference","name":"BsAddonsWrapperComponent"}],"BsAddonsWrapperComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldWrapper","line":34,"character":46},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"template":"\n    <div class=\"input-group\">\n      <div class=\"input-group-prepend\"\n        *ngIf=\"to['addonLeft']\"\n        [ngStyle]=\"{cursor: to.addonLeft.onClick ? 'pointer' : 'inherit'}\"\n        (click)=\"addonLeftClick($event)\">\n        <i class=\"input-group-text\" [ngClass]=\"to['addonLeft'].class\" *ngIf=\"to['addonLeft'].class\"></i>\n        <span *ngIf=\"to['addonLeft'].text\" class=\"input-group-text\">{{ to['addonLeft'].text }}</span>\n      </div>\n      <ng-template #fieldComponent></ng-template>\n      <div class=\"input-group-append\"\n        *ngIf=\"to['addonRight']\"\n        [ngStyle]=\"{cursor: to['addonRight'].onClick ? 'pointer' : 'inherit'}\"\n        (click)=\"addonRightClick($event)\">\n        <i class=\"input-group-text\" [ngClass]=\"to['addonRight'].class\" *ngIf=\"to['addonRight'].class\"></i>\n        <span *ngIf=\"to['addonRight'].text\" class=\"input-group-text\">{{ to['addonRight'].text }}</span>\n      </div>\n    </div>\n  ","styles":["\n    :host /deep/ .input-group>:not(:first-child)> .form-control {\n      border-top-left-radius: 0;\n      border-bottom-left-radius: 0;\n    }\n    :host /deep/ .input-group>:not(:last-child)> .form-control {\n      border-top-right-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  "]}]}],"members":{"fieldComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":35,"character":3},"arguments":["fieldComponent",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":35,"character":38}}]}]}],"addonRightClick":[{"__symbolic":"method"}],"addonLeftClick":[{"__symbolic":"method"}]}},"BsFormlyTypes":{"input":"bsInput","checkbox":"bsCheckbox","radio":"bsRadio","select":"bsSelect","switch":"bsSwitch","button":"bsButton","textArea":"bsTextArea","multiCheckbox":"bsMultiCheckbox","multiSelect":"bsMultiSelect","array":"bsArray"},"FormlyBsWrappers":{"field":"bsFieldWrapper","addon":"bsAddonWrapper"},"ErFormlyBootstrapModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":10,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":12,"character":4},{"__symbolic":"reference","module":"@er/core","name":"ErCoreModule","line":13,"character":4},{"__symbolic":"reference","module":"@er/formly","name":"ErFormlyModule","line":14,"character":4},{"__symbolic":"reference","module":"@er/validate","name":"ErValidateModule","line":15,"character":4},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FormlyModule","line":16,"character":4},"member":"forChild"},"arguments":[{"__symbolic":"reference","name":"ɵd"}]}],"declarations":[{"__symbolic":"spread","expression":{"__symbolic":"reference","name":"BS_FORMLY_TYPES"}},{"__symbolic":"spread","expression":{"__symbolic":"reference","name":"BS_FORMLY_WRAPPERS"}}],"exports":[{"__symbolic":"reference","module":"@ngx-formly/core","name":"FormlyModule","line":23,"character":4}]}]}],"members":{}},"ɵa":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldArrayType","line":42,"character":42},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"template":"\n    <div *ngFor=\"let field of field.fieldGroup; let i = index;\">\n      <formly-group\n        [model]=\"model[i]\"\n        [field]=\"field\"\n        [options]=\"options\"\n        [form]=\"formControl\">\n        <div class=\"col-sm-2 d-flex align-items-center\">\n          <button class=\"btn btn-danger\" type=\"button\" (click)=\"remove(i)\">Remove</button>\n        </div>\n      </formly-group>\n    </div>\n    <div style=\"margin:30px 0;\">\n      <button class=\"btn btn-primary\" type=\"button\" (click)=\"add()\"> Addd</button>\n    </div>\n    <!--<div *ngFor=\"let afield of field.fieldGroup; let i = index;\" class=\"d-flex align-items-center justify-content-around\">-->\n      <!--<formly-field class=\"d-flex align-items-center justify-content-between\" [field]=\"afield\"></formly-field>-->\n      <!--<div class=\"col-2\">-->\n        <!--<button *ngIf=\"model.length>0\" type=\"button\" class=\"mr-1 btn btn-danger btn-sm rounded-circle\"-->\n                <!--[title]=\"to['delBtnText'] || '删除' \"-->\n                <!--(click)=\"remove(i)\">&#10005;-->\n        <!--</button>-->\n        <!--<button *ngIf=\"i>0\" type=\"button\" class=\"mr-1 btn btn-info btn-sm rounded-circle\"-->\n                <!--[title]=\"to['downBtnText'] || '下移' \"-->\n                <!--(click)=\"move(i, -1)\">&#9650;-->\n        <!--</button>-->\n        <!--<button *ngIf=\"i<model.length-1\" type=\"button\" class=\"mr-1 btn btn-info btn-sm rounded-circle\"-->\n                <!--[title]=\"to['upBtnText'] || '上移' \"-->\n                <!--(click)=\"move(i, 1)\">&#9660;-->\n        <!--</button>-->\n      <!--</div>-->\n    <!--</div>-->\n    <!--<div class=\"my-3\">-->\n      <!--<button class=\"btn btn-primary pull-right\" type=\"button\" (click)=\"add()\"><i-->\n        <!--class=\"fa fa-plus-circle\"></i> {{ to['addBtnText'] || '增加'}}</button>-->\n    <!--</div>-->\n  "}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@ngx-formly/core","name":"FormlyFormBuilder","line":43,"character":23}]}],"move":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldType","line":8,"character":43},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"template":"    \n    <er-button [context]=\"model\"></er-button>\n  "}]}],"members":{}},"ɵc":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@ngx-formly/core","name":"FieldType","line":13,"character":43},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"template":"\n      <div class=\"d-block\">\n          <label class=\"switch switch-text switch-pill switch-lg\">\n              <input type=\"checkbox\" class='switch-input' [formControl]=\"formControl\" [formlyAttributes]=\"field\">\n              <span class=\"switch-label\" [attr.data-on]=\"to['onTitle']\" [attr.data-off]=\"to['offTitle']\"></span>\n              <span class=\"switch-handle\"></span>\n          </label>\n      </div>"}]}],"members":{}},"ɵd":{"types":[{"name":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"BsFormlyTypes"},"member":"input"},"component":{"__symbolic":"reference","name":"BsInputTypeComponent"},"wrappers":[{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@er/formly","name":"FormlyWrappers","line":19,"character":17},"member":"vertical"}]},{"name":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"BsFormlyTypes"},"member":"checkbox"},"component":{"__symbolic":"reference","name":"BsCheckboxTypeComponent"},"wrappers":[{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@er/formly","name":"FormlyWrappers","line":24,"character":17},"member":"vertical"}],"defaultOptions":{"templateOptions":{"indeterminate":true,"hideLabel":true}}},{"name":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"BsFormlyTypes"},"member":"textArea"},"component":{"__symbolic":"reference","name":"BsTextAreaTypeComponent"},"wrappers":[{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@er/formly","name":"FormlyWrappers","line":35,"character":17},"member":"vertical"}],"defaultOptions":{"templateOptions":{"cols":1,"rows":1}}},{"name":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"BsFormlyTypes"},"member":"multiCheckbox"},"component":{"__symbolic":"reference","name":"BsMultiCheckboxTypeComponent"},"wrappers":[{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@er/formly","name":"FormlyWrappers","line":46,"character":17},"member":"vertical"}],"defaultOptions":{"templateOptions":{"options":[]}}},{"name":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"BsFormlyTypes"},"member":"switch"},"component":{"__symbolic":"reference","name":"ɵc"},"wrappers":[{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@er/formly","name":"FormlyWrappers","line":56,"character":17},"member":"vertical"}]},{"name":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"BsFormlyTypes"},"member":"array"},"component":{"__symbolic":"reference","name":"ɵa"},"wrappers":[{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@er/formly","name":"FormlyWrappers","line":61,"character":17},"member":"vertical"}]},{"name":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"BsFormlyTypes"},"member":"button"},"component":{"__symbolic":"reference","name":"ɵb"},"wrappers":[{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@er/formly","name":"FormlyWrappers","line":66,"character":17},"member":"vertical"}]}],"wrappers":[{"name":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"FormlyBsWrappers"},"member":"addon"},"component":{"__symbolic":"reference","name":"BsAddonsWrapperComponent"}}],"manipulators":[{"class":{"__symbolic":"reference","name":"ɵe"},"method":"run"}]},"ɵe":{"__symbolic":"class","members":{"run":[{"__symbolic":"method"}]}}},"origins":{"BS_FORMLY_TYPES":"./lib/field-types/all","BsCheckboxTypeComponent":"./lib/field-types/basic/checkbox","BsMultiCheckboxTypeComponent":"./lib/field-types/basic/multicheckbox","BsInputTypeComponent":"./lib/field-types/basic/input","BsTextAreaTypeComponent":"./lib/field-types/basic/textarea","BS_FORMLY_WRAPPERS":"./lib/field-wrappers/all","BsAddonsWrapperComponent":"./lib/field-wrappers/addons","BsFormlyTypes":"./lib/types/field-types","FormlyBsWrappers":"./lib/types/field-wrappers","ErFormlyBootstrapModule":"./lib/er-formly-bootstrap.module","ɵa":"./lib/field-types/array/type","ɵb":"./lib/field-types/button/type","ɵc":"./lib/field-types/switch/type","ɵd":"./lib/config/formly","ɵe":"./lib/run/addon"},"importAs":"@er/formly-bootstrap"}