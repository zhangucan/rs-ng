/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, HostBinding } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
var BsInputTypeComponent = /** @class */ (function (_super) {
    tslib_1.__extends(BsInputTypeComponent, _super);
    function BsInputTypeComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(BsInputTypeComponent.prototype, "type", {
        get: /**
         * @return {?}
         */
        function () {
            return this.to.type || 'text';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BsInputTypeComponent.prototype, "inLineFlex", {
        get: /**
         * @return {?}
         */
        function () {
            return this.to.addonLeft || this.to.addonRight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BsInputTypeComponent.prototype, "fileClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this.to.addonLeft || this.to.addonRight;
        },
        enumerable: true,
        configurable: true
    });
    BsInputTypeComponent.decorators = [
        { type: Component, args: [{
                    template: "\n    <input *ngIf=\"type !== 'number' else numberTpl\" [type]=\"type\" [formControl]=\"formControl\" class=\"form-control\" [formlyAttributes]=\"field\" [class.is-invalid]=\"showError\">\n    <ng-template #numberTpl>\n      <input type=\"number\" [formControl]=\"formControl\" class=\"form-control\" [formlyAttributes]=\"field\" [class.is-invalid]=\"showError\">\n    </ng-template>\n  "
                }] }
    ];
    BsInputTypeComponent.propDecorators = {
        inLineFlex: [{ type: HostBinding, args: ['class.d-inline-flex',] }],
        fileClass: [{ type: HostBinding, args: ['class.custom-file',] }]
    };
    return BsInputTypeComponent;
}(FieldType));
export { BsInputTypeComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZXIvZm9ybWx5LWJvb3RzdHJhcC8iLCJzb3VyY2VzIjpbImxpYi9maWVsZC10eXBlcy9iYXNpYy9pbnB1dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsV0FBVyxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUUzQztJQVEwQyxnREFBUztJQVJuRDs7SUFzQkEsQ0FBQztJQWJDLHNCQUFJLHNDQUFJOzs7O1FBQVI7WUFDRSxPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxJQUFJLE1BQU0sQ0FBQztRQUNoQyxDQUFDOzs7T0FBQTtJQUVELHNCQUNJLDRDQUFVOzs7O1FBRGQ7WUFFRSxPQUFPLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsVUFBVSxDQUFDO1FBQ2pELENBQUM7OztPQUFBO0lBRUQsc0JBQ0ksMkNBQVM7Ozs7UUFEYjtZQUVFLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQyxVQUFVLENBQUM7UUFDakQsQ0FBQzs7O09BQUE7O2dCQXJCRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLHFZQUtUO2lCQUNGOzs7NkJBTUUsV0FBVyxTQUFDLHFCQUFxQjs0QkFLakMsV0FBVyxTQUFDLG1CQUFtQjs7SUFJbEMsMkJBQUM7Q0FBQSxBQXRCRCxDQVEwQyxTQUFTLEdBY2xEO1NBZFksb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEhvc3RCaW5kaW5nfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7RmllbGRUeXBlfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlOiBgXG4gICAgPGlucHV0ICpuZ0lmPVwidHlwZSAhPT0gJ251bWJlcicgZWxzZSBudW1iZXJUcGxcIiBbdHlwZV09XCJ0eXBlXCIgW2Zvcm1Db250cm9sXT1cImZvcm1Db250cm9sXCIgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIiBbZm9ybWx5QXR0cmlidXRlc109XCJmaWVsZFwiIFtjbGFzcy5pcy1pbnZhbGlkXT1cInNob3dFcnJvclwiPlxuICAgIDxuZy10ZW1wbGF0ZSAjbnVtYmVyVHBsPlxuICAgICAgPGlucHV0IHR5cGU9XCJudW1iZXJcIiBbZm9ybUNvbnRyb2xdPVwiZm9ybUNvbnRyb2xcIiBjbGFzcz1cImZvcm0tY29udHJvbFwiIFtmb3JtbHlBdHRyaWJ1dGVzXT1cImZpZWxkXCIgW2NsYXNzLmlzLWludmFsaWRdPVwic2hvd0Vycm9yXCI+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBCc0lucHV0VHlwZUNvbXBvbmVudCBleHRlbmRzIEZpZWxkVHlwZSB7XG4gIGdldCB0eXBlKCkge1xuICAgIHJldHVybiB0aGlzLnRvLnR5cGUgfHwgJ3RleHQnO1xuICB9XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5kLWlubGluZS1mbGV4JylcbiAgZ2V0IGluTGluZUZsZXgoKSB7XG4gICAgcmV0dXJuIHRoaXMudG8uYWRkb25MZWZ0IHx8IHRoaXMudG8uYWRkb25SaWdodDtcbiAgfVxuXG4gIEBIb3N0QmluZGluZygnY2xhc3MuY3VzdG9tLWZpbGUnKVxuICBnZXQgZmlsZUNsYXNzKCkge1xuICAgIHJldHVybiB0aGlzLnRvLmFkZG9uTGVmdCB8fCB0aGlzLnRvLmFkZG9uUmlnaHQ7XG4gIH1cbn1cbiJdfQ==