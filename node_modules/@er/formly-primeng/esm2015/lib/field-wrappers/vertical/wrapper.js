/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { ErFormlyFieldWrapper } from '@er/formly';
export class PngFormlyVerticalWrapperComponent extends ErFormlyFieldWrapper {
}
PngFormlyVerticalWrapperComponent.decorators = [
    { type: Component, args: [{
                template: `
   <div class="fieldset w-100"> 
    <div class="fieldset-{{field.key}}-vertical" [ngClass]="field.fieldSetStyleClass || 'm-2 p-2'"
         [ngStyle]="field.fieldSetStyle">
      <div class="row flex-column align-items-center">

        <div *ngIf="to.label && to['hideLabel'] !== true && to['floatLabel'] !== true" class="field-label-vertical label-{{field.key}}">
          <label [attr.for]="id" style="font-weight: bold">
            <span *ngIf="to.required && to['hideRequiredMarker'] !== true" style="color: red" title="必填内容">*</span> {{ to.label }}
          </label>
        </div>

        <ng-container *ngIf="to['before'] && to['before'].content">
          <er-dyna-content [content]="to['before'].content" [context]="to['before'].context"></er-dyna-content>
        </ng-container>

        <div class="ui-fluid w-100 p-1 field-control-vertical field-{{field.key}}"
             [ngClass]="field.fieldStyleClass" [ngStyle]="field.fieldStyle">
          <ng-template #fieldComponent></ng-template>
        </div>

        <div *ngIf="field.showErrors" class="invalid-feedback d-block" [ngClass]="field.validationStyleClass"
             [ngStyle]="field.validationStyle">
          <er-validate-messages [formlyField]="field"></er-validate-messages>
        </div>

        <ng-container *ngIf="to.description">
          <div class="field-description-vertical field-{{field.key}}">
            <small class="form-text text-muted">
              <i class="text-primary fa fa-info-circle"></i>&nbsp;
              <er-dyna-content styleClass="d-inline" [content]="to.description" [context]="field"></er-dyna-content>
            </small>
          </div>
        </ng-container>

        <ng-container *ngIf="to['after'] && to['after'].content">
          <er-dyna-content [content]="to['after'].content" [context]="to['after'].context"></er-dyna-content>
        </ng-container>
      </div>
    </div>
   </div>
  `,
                styles: [""]
            }] }
];
PngFormlyVerticalWrapperComponent.propDecorators = {
    fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]
};
if (false) {
    /** @type {?} */
    PngFormlyVerticalWrapperComponent.prototype.fieldComponent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JhcHBlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Blci9mb3JtbHktcHJpbWVuZy8iLCJzb3VyY2VzIjpbImxpYi9maWVsZC13cmFwcGVycy92ZXJ0aWNhbC93cmFwcGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNyRSxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSxZQUFZLENBQUM7QUErQ2hELE1BQU0sT0FBTyxpQ0FBa0MsU0FBUSxvQkFBb0I7OztZQTdDMUUsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F5Q1Q7O2FBRUY7Ozs2QkFFRSxTQUFTLFNBQUMsZ0JBQWdCLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQWdCLEVBQUM7Ozs7SUFBckQsMkRBQXdGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIFZpZXdDaGlsZCwgVmlld0NvbnRhaW5lclJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0VyRm9ybWx5RmllbGRXcmFwcGVyfSBmcm9tICdAZXIvZm9ybWx5JztcblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlOiBgXG4gICA8ZGl2IGNsYXNzPVwiZmllbGRzZXQgdy0xMDBcIj4gXG4gICAgPGRpdiBjbGFzcz1cImZpZWxkc2V0LXt7ZmllbGQua2V5fX0tdmVydGljYWxcIiBbbmdDbGFzc109XCJmaWVsZC5maWVsZFNldFN0eWxlQ2xhc3MgfHwgJ20tMiBwLTInXCJcbiAgICAgICAgIFtuZ1N0eWxlXT1cImZpZWxkLmZpZWxkU2V0U3R5bGVcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJyb3cgZmxleC1jb2x1bW4gYWxpZ24taXRlbXMtY2VudGVyXCI+XG5cbiAgICAgICAgPGRpdiAqbmdJZj1cInRvLmxhYmVsICYmIHRvWydoaWRlTGFiZWwnXSAhPT0gdHJ1ZSAmJiB0b1snZmxvYXRMYWJlbCddICE9PSB0cnVlXCIgY2xhc3M9XCJmaWVsZC1sYWJlbC12ZXJ0aWNhbCBsYWJlbC17e2ZpZWxkLmtleX19XCI+XG4gICAgICAgICAgPGxhYmVsIFthdHRyLmZvcl09XCJpZFwiIHN0eWxlPVwiZm9udC13ZWlnaHQ6IGJvbGRcIj5cbiAgICAgICAgICAgIDxzcGFuICpuZ0lmPVwidG8ucmVxdWlyZWQgJiYgdG9bJ2hpZGVSZXF1aXJlZE1hcmtlciddICE9PSB0cnVlXCIgc3R5bGU9XCJjb2xvcjogcmVkXCIgdGl0bGU9XCLlv4XloavlhoXlrrlcIj4qPC9zcGFuPiB7eyB0by5sYWJlbCB9fVxuICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJ0b1snYmVmb3JlJ10gJiYgdG9bJ2JlZm9yZSddLmNvbnRlbnRcIj5cbiAgICAgICAgICA8ZXItZHluYS1jb250ZW50IFtjb250ZW50XT1cInRvWydiZWZvcmUnXS5jb250ZW50XCIgW2NvbnRleHRdPVwidG9bJ2JlZm9yZSddLmNvbnRleHRcIj48L2VyLWR5bmEtY29udGVudD5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG5cbiAgICAgICAgPGRpdiBjbGFzcz1cInVpLWZsdWlkIHctMTAwIHAtMSBmaWVsZC1jb250cm9sLXZlcnRpY2FsIGZpZWxkLXt7ZmllbGQua2V5fX1cIlxuICAgICAgICAgICAgIFtuZ0NsYXNzXT1cImZpZWxkLmZpZWxkU3R5bGVDbGFzc1wiIFtuZ1N0eWxlXT1cImZpZWxkLmZpZWxkU3R5bGVcIj5cbiAgICAgICAgICA8bmctdGVtcGxhdGUgI2ZpZWxkQ29tcG9uZW50PjwvbmctdGVtcGxhdGU+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxkaXYgKm5nSWY9XCJmaWVsZC5zaG93RXJyb3JzXCIgY2xhc3M9XCJpbnZhbGlkLWZlZWRiYWNrIGQtYmxvY2tcIiBbbmdDbGFzc109XCJmaWVsZC52YWxpZGF0aW9uU3R5bGVDbGFzc1wiXG4gICAgICAgICAgICAgW25nU3R5bGVdPVwiZmllbGQudmFsaWRhdGlvblN0eWxlXCI+XG4gICAgICAgICAgPGVyLXZhbGlkYXRlLW1lc3NhZ2VzIFtmb3JtbHlGaWVsZF09XCJmaWVsZFwiPjwvZXItdmFsaWRhdGUtbWVzc2FnZXM+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJ0by5kZXNjcmlwdGlvblwiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJmaWVsZC1kZXNjcmlwdGlvbi12ZXJ0aWNhbCBmaWVsZC17e2ZpZWxkLmtleX19XCI+XG4gICAgICAgICAgICA8c21hbGwgY2xhc3M9XCJmb3JtLXRleHQgdGV4dC1tdXRlZFwiPlxuICAgICAgICAgICAgICA8aSBjbGFzcz1cInRleHQtcHJpbWFyeSBmYSBmYS1pbmZvLWNpcmNsZVwiPjwvaT4mbmJzcDtcbiAgICAgICAgICAgICAgPGVyLWR5bmEtY29udGVudCBzdHlsZUNsYXNzPVwiZC1pbmxpbmVcIiBbY29udGVudF09XCJ0by5kZXNjcmlwdGlvblwiIFtjb250ZXh0XT1cImZpZWxkXCI+PC9lci1keW5hLWNvbnRlbnQ+XG4gICAgICAgICAgICA8L3NtYWxsPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L25nLWNvbnRhaW5lcj5cblxuICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwidG9bJ2FmdGVyJ10gJiYgdG9bJ2FmdGVyJ10uY29udGVudFwiPlxuICAgICAgICAgIDxlci1keW5hLWNvbnRlbnQgW2NvbnRlbnRdPVwidG9bJ2FmdGVyJ10uY29udGVudFwiIFtjb250ZXh0XT1cInRvWydhZnRlciddLmNvbnRleHRcIj48L2VyLWR5bmEtY29udGVudD5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgIDwvZGl2PlxuICBgLFxuICBzdHlsZVVybHM6IFsnc3R5bGVzLnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBQbmdGb3JtbHlWZXJ0aWNhbFdyYXBwZXJDb21wb25lbnQgZXh0ZW5kcyBFckZvcm1seUZpZWxkV3JhcHBlciB7XG4gIEBWaWV3Q2hpbGQoJ2ZpZWxkQ29tcG9uZW50Jywge3JlYWQ6IFZpZXdDb250YWluZXJSZWZ9KSBmaWVsZENvbXBvbmVudDogVmlld0NvbnRhaW5lclJlZjtcbn1cbiJdfQ==