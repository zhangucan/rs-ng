/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { FieldWrapper } from '@ngx-formly/core';
/**
 * @record
 */
export function PngFieldSetWrapperProps() { }
if (false) {
    /** @type {?} */
    PngFieldSetWrapperProps.prototype.fieldSet;
}
var PngFieldSetWrapperComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PngFieldSetWrapperComponent, _super);
    function PngFieldSetWrapperComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PngFieldSetWrapperComponent.decorators = [
        { type: Component, args: [{
                    template: "\n    <p-fieldset [collapsed]=\"to['fieldSet']?.collapsed\"\n                [legend]=\"to['fieldSet']?.legend\"\n                [styleClass]=\"to['fieldSet']?.styleClass\"\n                [style]=\"to['fieldSet']?.style\"\n                [toggleable]=\"to['fieldSet']?.toggleable || true\">\n      <ng-container #fieldComponent></ng-container>\n    </p-fieldset>\n  ",
                    styles: ["/deep/ legend{font-size:1.2rem!important}"]
                }] }
    ];
    PngFieldSetWrapperComponent.propDecorators = {
        fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]
    };
    return PngFieldSetWrapperComponent;
}(FieldWrapper));
export { PngFieldSetWrapperComponent };
if (false) {
    /** @type {?} */
    PngFieldSetWrapperComponent.prototype.fieldComponent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JhcHBlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Blci9mb3JtbHktcHJpbWVuZy8iLCJzb3VyY2VzIjpbImxpYi9maWVsZC13cmFwcGVycy9maWVsZC1zZXQvd3JhcHBlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQ3JFLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQzs7OztBQUU5Qyw2Q0FPQzs7O0lBTkMsMkNBS0M7O0FBR0g7SUFZaUQsdURBQVk7SUFaN0Q7O0lBY0EsQ0FBQzs7Z0JBZEEsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxvWEFRVDs7aUJBRUY7OztpQ0FFRSxTQUFTLFNBQUMsZ0JBQWdCLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQWdCLEVBQUM7O0lBQ3ZELGtDQUFDO0NBQUEsQUFkRCxDQVlpRCxZQUFZLEdBRTVEO1NBRlksMkJBQTJCOzs7SUFDdEMscURBQXdGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIFZpZXdDaGlsZCwgVmlld0NvbnRhaW5lclJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0ZpZWxkV3JhcHBlcn0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUG5nRmllbGRTZXRXcmFwcGVyUHJvcHMge1xuICBmaWVsZFNldDoge1xuICAgIGxlZ2VuZD86IHN0cmluZztcbiAgICB0b2dnbGVhYmxlPzogYm9vbGVhbjtcbiAgICBzdHlsZUNsYXNzPzogYW55O1xuICAgIHN0eWxlPzogYW55XG4gIH1cbn1cblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlOiBgXG4gICAgPHAtZmllbGRzZXQgW2NvbGxhcHNlZF09XCJ0b1snZmllbGRTZXQnXT8uY29sbGFwc2VkXCJcbiAgICAgICAgICAgICAgICBbbGVnZW5kXT1cInRvWydmaWVsZFNldCddPy5sZWdlbmRcIlxuICAgICAgICAgICAgICAgIFtzdHlsZUNsYXNzXT1cInRvWydmaWVsZFNldCddPy5zdHlsZUNsYXNzXCJcbiAgICAgICAgICAgICAgICBbc3R5bGVdPVwidG9bJ2ZpZWxkU2V0J10/LnN0eWxlXCJcbiAgICAgICAgICAgICAgICBbdG9nZ2xlYWJsZV09XCJ0b1snZmllbGRTZXQnXT8udG9nZ2xlYWJsZSB8fCB0cnVlXCI+XG4gICAgICA8bmctY29udGFpbmVyICNmaWVsZENvbXBvbmVudD48L25nLWNvbnRhaW5lcj5cbiAgICA8L3AtZmllbGRzZXQ+XG4gIGAsXG4gIHN0eWxlVXJsczogWydzdHlsZXMuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIFBuZ0ZpZWxkU2V0V3JhcHBlckNvbXBvbmVudCBleHRlbmRzIEZpZWxkV3JhcHBlciB7XG4gIEBWaWV3Q2hpbGQoJ2ZpZWxkQ29tcG9uZW50Jywge3JlYWQ6IFZpZXdDb250YWluZXJSZWZ9KSBmaWVsZENvbXBvbmVudDogVmlld0NvbnRhaW5lclJlZjtcbn1cbiJdfQ==