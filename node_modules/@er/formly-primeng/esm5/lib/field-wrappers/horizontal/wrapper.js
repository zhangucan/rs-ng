/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { ErFormlyFieldWrapper } from '@er/formly';
import { CommonsUtils } from '@er/utils';
var PngFormlyHorizontalWrapperComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PngFormlyHorizontalWrapperComponent, _super);
    function PngFormlyHorizontalWrapperComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(PngFormlyHorizontalWrapperComponent.prototype, "description", {
        get: /**
         * @return {?}
         */
        function () {
            return CommonsUtils.getValue(this.to.description, this.field);
        },
        enumerable: true,
        configurable: true
    });
    PngFormlyHorizontalWrapperComponent.decorators = [
        { type: Component, args: [{
                    template: "\n    <div class=\"fieldset w-100\">\n      <div class=\"fieldset-{{field.key}}-horizontal py-2\" [ngClass]=\"field.fieldSetStyleClass || 'm-2'\"\n           [ngStyle]=\"field.fieldSetStyle\">\n        <div class=\"row align-items-center\">\n          <div class=\"field-label-horizontal label-{{field.key}}\" [ngClass]=\"field.labelStyleClass || 'col-3 pull-right'\">\n            <label *ngIf=\"to.label && to['hideLabel'] !== true\" [attr.for]=\"id\" style=\"float:right;font-weight: bold\">\n              <span *ngIf=\"to.required && to['hideRequiredMarker'] !== true\" style=\"color: red\" title=\"\u5FC5\u586B\u5185\u5BB9\">*</span> {{ to.label }}\n            </label>\n          </div>\n          <div [ngClass]=\"field.fieldStyleClass || 'col-9 pull-left'\">\n            <div class=\"d-flex flex-column align-items-start\">\n\n              <ng-container *ngIf=\"to['before'] && to['before'].content\">\n                <er-dyna-content [content]=\"to['before'].content\" [context]=\"field\"></er-dyna-content>\n              </ng-container>\n\n              <div class=\"ui-fluid w-100 mr-2 pr-2 field-control-horizontal field-{{field.key}}\"\n                   [ngClass]=\"field.fieldStyleClass\" [ngStyle]=\"field.fieldStyle\">\n                <ng-template #fieldComponent></ng-template>\n              </div>\n\n              <div *ngIf=\"field.showErrors !== false\" class=\"invalid-feedback d-block\" [ngClass]=\"field.validationStyleClass\"\n                   [ngStyle]=\"field.validationStyle\">\n                <er-validate-messages [formlyField]=\"field\"></er-validate-messages>\n              </div>\n\n              <ng-container *ngIf=\"to.description\">\n                <div class=\"field-description-horizontal field-{{field.key}}-description\">\n                  <small class=\"form-text text-muted\">\n                    <i class=\"text-primary fa fa-info-circle\"></i>&nbsp;\n                    <span [innerHTML]=\"description\"></span>\n                  </small>\n                </div>\n              </ng-container>\n\n              <ng-container *ngIf=\"to['after'] && to['after'].content\">\n                <er-dyna-content [content]=\"to['after'].content\" [context]=\"field\"></er-dyna-content>\n              </ng-container>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  ",
                    styles: [""]
                }] }
    ];
    PngFormlyHorizontalWrapperComponent.propDecorators = {
        fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]
    };
    return PngFormlyHorizontalWrapperComponent;
}(ErFormlyFieldWrapper));
export { PngFormlyHorizontalWrapperComponent };
if (false) {
    /** @type {?} */
    PngFormlyHorizontalWrapperComponent.prototype.fieldComponent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JhcHBlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Blci9mb3JtbHktcHJpbWVuZy8iLCJzb3VyY2VzIjpbImxpYi9maWVsZC13cmFwcGVycy9ob3Jpem9udGFsL3dyYXBwZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNyRSxPQUFPLEVBQUMsb0JBQW9CLEVBQUMsTUFBTSxZQUFZLENBQUM7QUFDaEQsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUV2QztJQWlEeUQsK0RBQW9CO0lBakQ3RTs7SUF1REEsQ0FBQztJQUhDLHNCQUFJLDREQUFXOzs7O1FBQWY7WUFDRSxPQUFPLFlBQVksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2hFLENBQUM7OztPQUFBOztnQkF0REYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx3ekVBNkNUOztpQkFFRjs7O2lDQUVFLFNBQVMsU0FBQyxnQkFBZ0IsRUFBRSxFQUFDLElBQUksRUFBRSxnQkFBZ0IsRUFBQzs7SUFLdkQsMENBQUM7Q0FBQSxBQXZERCxDQWlEeUQsb0JBQW9CLEdBTTVFO1NBTlksbUNBQW1DOzs7SUFDOUMsNkRBQXdGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIFZpZXdDaGlsZCwgVmlld0NvbnRhaW5lclJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0VyRm9ybWx5RmllbGRXcmFwcGVyfSBmcm9tICdAZXIvZm9ybWx5JztcbmltcG9ydCB7Q29tbW9uc1V0aWxzfSBmcm9tICdAZXIvdXRpbHMnO1xuXG5AQ29tcG9uZW50KHtcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiZmllbGRzZXQgdy0xMDBcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJmaWVsZHNldC17e2ZpZWxkLmtleX19LWhvcml6b250YWwgcHktMlwiIFtuZ0NsYXNzXT1cImZpZWxkLmZpZWxkU2V0U3R5bGVDbGFzcyB8fCAnbS0yJ1wiXG4gICAgICAgICAgIFtuZ1N0eWxlXT1cImZpZWxkLmZpZWxkU2V0U3R5bGVcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInJvdyBhbGlnbi1pdGVtcy1jZW50ZXJcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmllbGQtbGFiZWwtaG9yaXpvbnRhbCBsYWJlbC17e2ZpZWxkLmtleX19XCIgW25nQ2xhc3NdPVwiZmllbGQubGFiZWxTdHlsZUNsYXNzIHx8ICdjb2wtMyBwdWxsLXJpZ2h0J1wiPlxuICAgICAgICAgICAgPGxhYmVsICpuZ0lmPVwidG8ubGFiZWwgJiYgdG9bJ2hpZGVMYWJlbCddICE9PSB0cnVlXCIgW2F0dHIuZm9yXT1cImlkXCIgc3R5bGU9XCJmbG9hdDpyaWdodDtmb250LXdlaWdodDogYm9sZFwiPlxuICAgICAgICAgICAgICA8c3BhbiAqbmdJZj1cInRvLnJlcXVpcmVkICYmIHRvWydoaWRlUmVxdWlyZWRNYXJrZXInXSAhPT0gdHJ1ZVwiIHN0eWxlPVwiY29sb3I6IHJlZFwiIHRpdGxlPVwi5b+F5aGr5YaF5a65XCI+Kjwvc3Bhbj4ge3sgdG8ubGFiZWwgfX1cbiAgICAgICAgICAgIDwvbGFiZWw+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBbbmdDbGFzc109XCJmaWVsZC5maWVsZFN0eWxlQ2xhc3MgfHwgJ2NvbC05IHB1bGwtbGVmdCdcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJkLWZsZXggZmxleC1jb2x1bW4gYWxpZ24taXRlbXMtc3RhcnRcIj5cblxuICAgICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwidG9bJ2JlZm9yZSddICYmIHRvWydiZWZvcmUnXS5jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgPGVyLWR5bmEtY29udGVudCBbY29udGVudF09XCJ0b1snYmVmb3JlJ10uY29udGVudFwiIFtjb250ZXh0XT1cImZpZWxkXCI+PC9lci1keW5hLWNvbnRlbnQ+XG4gICAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuXG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJ1aS1mbHVpZCB3LTEwMCBtci0yIHByLTIgZmllbGQtY29udHJvbC1ob3Jpem9udGFsIGZpZWxkLXt7ZmllbGQua2V5fX1cIlxuICAgICAgICAgICAgICAgICAgIFtuZ0NsYXNzXT1cImZpZWxkLmZpZWxkU3R5bGVDbGFzc1wiIFtuZ1N0eWxlXT1cImZpZWxkLmZpZWxkU3R5bGVcIj5cbiAgICAgICAgICAgICAgICA8bmctdGVtcGxhdGUgI2ZpZWxkQ29tcG9uZW50PjwvbmctdGVtcGxhdGU+XG4gICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgIDxkaXYgKm5nSWY9XCJmaWVsZC5zaG93RXJyb3JzICE9PSBmYWxzZVwiIGNsYXNzPVwiaW52YWxpZC1mZWVkYmFjayBkLWJsb2NrXCIgW25nQ2xhc3NdPVwiZmllbGQudmFsaWRhdGlvblN0eWxlQ2xhc3NcIlxuICAgICAgICAgICAgICAgICAgIFtuZ1N0eWxlXT1cImZpZWxkLnZhbGlkYXRpb25TdHlsZVwiPlxuICAgICAgICAgICAgICAgIDxlci12YWxpZGF0ZS1tZXNzYWdlcyBbZm9ybWx5RmllbGRdPVwiZmllbGRcIj48L2VyLXZhbGlkYXRlLW1lc3NhZ2VzPlxuICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwidG8uZGVzY3JpcHRpb25cIj5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZmllbGQtZGVzY3JpcHRpb24taG9yaXpvbnRhbCBmaWVsZC17e2ZpZWxkLmtleX19LWRlc2NyaXB0aW9uXCI+XG4gICAgICAgICAgICAgICAgICA8c21hbGwgY2xhc3M9XCJmb3JtLXRleHQgdGV4dC1tdXRlZFwiPlxuICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz1cInRleHQtcHJpbWFyeSBmYSBmYS1pbmZvLWNpcmNsZVwiPjwvaT4mbmJzcDtcbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gW2lubmVySFRNTF09XCJkZXNjcmlwdGlvblwiPjwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgIDwvc21hbGw+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvbmctY29udGFpbmVyPlxuXG4gICAgICAgICAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJ0b1snYWZ0ZXInXSAmJiB0b1snYWZ0ZXInXS5jb250ZW50XCI+XG4gICAgICAgICAgICAgICAgPGVyLWR5bmEtY29udGVudCBbY29udGVudF09XCJ0b1snYWZ0ZXInXS5jb250ZW50XCIgW2NvbnRleHRdPVwiZmllbGRcIj48L2VyLWR5bmEtY29udGVudD5cbiAgICAgICAgICAgICAgPC9uZy1jb250YWluZXI+XG5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICBgLFxuICBzdHlsZVVybHM6IFsnc3R5bGVzLnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBQbmdGb3JtbHlIb3Jpem9udGFsV3JhcHBlckNvbXBvbmVudCBleHRlbmRzIEVyRm9ybWx5RmllbGRXcmFwcGVyIHtcbiAgQFZpZXdDaGlsZCgnZmllbGRDb21wb25lbnQnLCB7cmVhZDogVmlld0NvbnRhaW5lclJlZn0pIGZpZWxkQ29tcG9uZW50OiBWaWV3Q29udGFpbmVyUmVmO1xuXG4gIGdldCBkZXNjcmlwdGlvbigpIHtcbiAgICByZXR1cm4gQ29tbW9uc1V0aWxzLmdldFZhbHVlKHRoaXMudG8uZGVzY3JpcHRpb24sIHRoaXMuZmllbGQpO1xuICB9XG59XG4iXX0=