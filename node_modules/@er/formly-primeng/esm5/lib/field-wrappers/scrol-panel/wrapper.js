/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { FieldWrapper } from '@ngx-formly/core';
/**
 * @record
 */
export function PngScrollPanelWrapperProps() { }
if (false) {
    /** @type {?|undefined} */
    PngScrollPanelWrapperProps.prototype.style;
    /** @type {?|undefined} */
    PngScrollPanelWrapperProps.prototype.styleClass;
}
var PngScrollPanelWrapperComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PngScrollPanelWrapperComponent, _super);
    function PngScrollPanelWrapperComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PngScrollPanelWrapperComponent.decorators = [
        { type: Component, args: [{
                    template: "\n    <p-scrollPanel [style]=\"to['scroll']?.style\" [styleClass]=\"to['scroll']?.styleClass\">\n      <ng-container #fieldComponent></ng-container>\n    </p-scrollPanel >\n  "
                }] }
    ];
    PngScrollPanelWrapperComponent.propDecorators = {
        fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]
    };
    return PngScrollPanelWrapperComponent;
}(FieldWrapper));
export { PngScrollPanelWrapperComponent };
if (false) {
    /** @type {?} */
    PngScrollPanelWrapperComponent.prototype.fieldComponent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JhcHBlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Blci9mb3JtbHktcHJpbWVuZy8iLCJzb3VyY2VzIjpbImxpYi9maWVsZC13cmFwcGVycy9zY3JvbC1wYW5lbC93cmFwcGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDckUsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGtCQUFrQixDQUFDOzs7O0FBRTlDLGdEQUdDOzs7SUFGQywyQ0FBWTs7SUFDWixnREFBaUI7O0FBR25CO0lBT29ELDBEQUFZO0lBUGhFOztJQVNBLENBQUM7O2dCQVRBLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsaUxBSVQ7aUJBQ0Y7OztpQ0FFRSxTQUFTLFNBQUMsZ0JBQWdCLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQWdCLEVBQUM7O0lBQ3ZELHFDQUFDO0NBQUEsQUFURCxDQU9vRCxZQUFZLEdBRS9EO1NBRlksOEJBQThCOzs7SUFDekMsd0RBQXdGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIFZpZXdDaGlsZCwgVmlld0NvbnRhaW5lclJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0ZpZWxkV3JhcHBlcn0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUG5nU2Nyb2xsUGFuZWxXcmFwcGVyUHJvcHMge1xuICBzdHlsZT86IGFueTtcbiAgc3R5bGVDbGFzcz86IGFueTtcbn1cblxuQENvbXBvbmVudCh7XG4gIHRlbXBsYXRlOiBgXG4gICAgPHAtc2Nyb2xsUGFuZWwgW3N0eWxlXT1cInRvWydzY3JvbGwnXT8uc3R5bGVcIiBbc3R5bGVDbGFzc109XCJ0b1snc2Nyb2xsJ10/LnN0eWxlQ2xhc3NcIj5cbiAgICAgIDxuZy1jb250YWluZXIgI2ZpZWxkQ29tcG9uZW50PjwvbmctY29udGFpbmVyPlxuICAgIDwvcC1zY3JvbGxQYW5lbCA+XG4gIGBcbn0pXG5leHBvcnQgY2xhc3MgUG5nU2Nyb2xsUGFuZWxXcmFwcGVyQ29tcG9uZW50IGV4dGVuZHMgRmllbGRXcmFwcGVyIHtcbiAgQFZpZXdDaGlsZCgnZmllbGRDb21wb25lbnQnLCB7cmVhZDogVmlld0NvbnRhaW5lclJlZn0pIGZpZWxkQ29tcG9uZW50OiBWaWV3Q29udGFpbmVyUmVmO1xufVxuIl19