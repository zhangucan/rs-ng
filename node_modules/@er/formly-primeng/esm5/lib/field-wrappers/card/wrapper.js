/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { FieldWrapper } from '@ngx-formly/core';
/**
 * @record
 */
export function PngCardWrapperProps() { }
if (false) {
    /** @type {?} */
    PngCardWrapperProps.prototype.card;
}
var PngCardWrapperComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PngCardWrapperComponent, _super);
    function PngCardWrapperComponent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    PngCardWrapperComponent.decorators = [
        { type: Component, args: [{
                    template: "\n    <div class=\"card\" [ngClass]=\"to['card']?.styleClass\" [ngStyle]=\"to['card']?.style\">\n      <h3 class=\"card-header\"><i [ngClass]=\"to['card']?.icon\"></i> <span [innerHTML]=\"to['card']?.header\"></span></h3>\n      <div class=\"card-body\">\n        <ng-container #fieldComponent></ng-container>\n      </div>\n    </div>\n  "
                }] }
    ];
    PngCardWrapperComponent.propDecorators = {
        fieldComponent: [{ type: ViewChild, args: ['fieldComponent', { read: ViewContainerRef },] }]
    };
    return PngCardWrapperComponent;
}(FieldWrapper));
export { PngCardWrapperComponent };
if (false) {
    /** @type {?} */
    PngCardWrapperComponent.prototype.fieldComponent;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JhcHBlci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Blci9mb3JtbHktcHJpbWVuZy8iLCJzb3VyY2VzIjpbImxpYi9maWVsZC13cmFwcGVycy9jYXJkL3dyYXBwZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxnQkFBZ0IsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNyRSxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sa0JBQWtCLENBQUM7Ozs7QUFFOUMseUNBT0M7OztJQU5DLG1DQUtFOztBQUdKO0lBVTZDLG1EQUFZO0lBVnpEOztJQVlBLENBQUM7O2dCQVpBLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUscVZBT1Q7aUJBQ0Y7OztpQ0FFRSxTQUFTLFNBQUMsZ0JBQWdCLEVBQUUsRUFBQyxJQUFJLEVBQUUsZ0JBQWdCLEVBQUM7O0lBQ3ZELDhCQUFDO0NBQUEsQUFaRCxDQVU2QyxZQUFZLEdBRXhEO1NBRlksdUJBQXVCOzs7SUFDbEMsaURBQXdGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIFZpZXdDaGlsZCwgVmlld0NvbnRhaW5lclJlZn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge0ZpZWxkV3JhcHBlcn0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUG5nQ2FyZFdyYXBwZXJQcm9wcyB7XG4gIGNhcmQ6IHtcbiAgICBpY29uPzogc3RyaW5nO1xuICAgIGhlYWRlcj86IHN0cmluZztcbiAgICBzdHlsZUNsYXNzPzogYW55O1xuICAgIHN0eWxlPzogYW55O1xuICB9O1xufVxuXG5AQ29tcG9uZW50KHtcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IGNsYXNzPVwiY2FyZFwiIFtuZ0NsYXNzXT1cInRvWydjYXJkJ10/LnN0eWxlQ2xhc3NcIiBbbmdTdHlsZV09XCJ0b1snY2FyZCddPy5zdHlsZVwiPlxuICAgICAgPGgzIGNsYXNzPVwiY2FyZC1oZWFkZXJcIj48aSBbbmdDbGFzc109XCJ0b1snY2FyZCddPy5pY29uXCI+PC9pPiA8c3BhbiBbaW5uZXJIVE1MXT1cInRvWydjYXJkJ10/LmhlYWRlclwiPjwvc3Bhbj48L2gzPlxuICAgICAgPGRpdiBjbGFzcz1cImNhcmQtYm9keVwiPlxuICAgICAgICA8bmctY29udGFpbmVyICNmaWVsZENvbXBvbmVudD48L25nLWNvbnRhaW5lcj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICBgXG59KVxuZXhwb3J0IGNsYXNzIFBuZ0NhcmRXcmFwcGVyQ29tcG9uZW50IGV4dGVuZHMgRmllbGRXcmFwcGVyIHtcbiAgQFZpZXdDaGlsZCgnZmllbGRDb21wb25lbnQnLCB7cmVhZDogVmlld0NvbnRhaW5lclJlZn0pIGZpZWxkQ29tcG9uZW50OiBWaWV3Q29udGFpbmVyUmVmO1xufVxuIl19