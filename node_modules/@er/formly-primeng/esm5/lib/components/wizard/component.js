/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectionStrategy, Component, EventEmitter, Output } from '@angular/core';
import { FormArray, FormGroup } from '@angular/forms';
import { LogUtils } from '@er/core';
import { PngFormlyUtils } from '../../utils';
import { PngFormlyFormComponent } from '../form/component';
var PngFormlyWizardFormComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PngFormlyWizardFormComponent, _super);
    function PngFormlyWizardFormComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.stepChange = new EventEmitter();
        return _this;
    }
    /**
     * @param {?} formProps
     * @return {?}
     */
    PngFormlyWizardFormComponent.prototype.resolveFormFields = /**
     * @param {?} formProps
     * @return {?}
     */
    function (formProps) {
        var _this = this;
        if (!formProps || !formProps['steps']) {
            LogUtils.error(this, '没有定义steps', formProps);
        }
        if (formProps.steps) {
            formProps.steps.forEach(function (step) {
                step.fields.forEach(function (field) {
                    PngFormlyUtils.resolveField(formProps, field, _this);
                });
            });
            this.formArray = new FormArray(formProps.steps.map(function () { return new FormGroup({}); }));
            this.stepFormlyOptions = formProps.steps.map(function (step) {
                return tslib_1.__assign({}, formProps.options || {}, step.options || {});
            });
        }
        this.currentStepIndex = formProps.activeIndex || 0;
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PngFormlyWizardFormComponent.prototype.onStepChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.currentStepIndex = event;
        this.stepChange.emit(event);
    };
    PngFormlyWizardFormComponent.decorators = [
        { type: Component, args: [{
                    selector: 'png-formly-wizard',
                    template: "\n    <png-panel [header]=\"formProps.header\" [footer]=\"formProps.footer\" [icon]=\"formProps.icon\" [toggleable]=\"formProps.collapsable\">\n      <png-wizard [(activeIndex)]=\"currentStepIndex\"\n                  (stepChange)=\"onStepChange($event)\"\n                  [styleClass]=\"formProps.styleClass\"\n                  [style]=\"formProps.style\"\n                  [stepStyleClass]=\"formProps['stepStyleClass']\"\n                  [stepStyle]=\"formProps['stepStyle']\"\n      >\n        <ng-container *ngFor=\"let step of formProps['steps']; let i = index;\">\n          <png-step\n            [label]=\"step.label\"\n            [styleClass]=\"step.styleClass\"\n            [style]=\"step.style\"\n          >\n            <formly-form\n              [form]=\"formArray.at(i)\"\n              [(model)]=\"formProps.model\"\n              [fields]=\"step.fields\"\n              [options]=\"stepFormlyOptions[i]\">\n            </formly-form>\n          </png-step>\n        </ng-container>\n        <ng-template erTypedTemplate=\"footer\">\n          <button pButton type=\"button\" *ngIf=\"currentStepIndex+1 === formProps['steps'].length\"\n                  class=\"pull-right\" icon=\"fa fa-save\" iconPos=\"right\" label=\"\u63D0\u4EA4\"></button>\n        </ng-template>\n      </png-wizard>\n    </png-panel>\n    <!--<png-form-debug [model]=\"formModel\"-->\n    <!--[debugFormProps]=\"debugFormProps\"-->\n    <!--[runtimeFormProps]=\"formProps\">-->\n    <!--</png-form-debug>-->\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush
                }] }
    ];
    PngFormlyWizardFormComponent.propDecorators = {
        stepChange: [{ type: Output }]
    };
    return PngFormlyWizardFormComponent;
}(PngFormlyFormComponent));
export { PngFormlyWizardFormComponent };
if (false) {
    /** @type {?} */
    PngFormlyWizardFormComponent.prototype.formArray;
    /** @type {?} */
    PngFormlyWizardFormComponent.prototype.stepFormlyOptions;
    /** @type {?} */
    PngFormlyWizardFormComponent.prototype.currentStepIndex;
    /** @type {?} */
    PngFormlyWizardFormComponent.prototype.stepChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL2Zvcm1seS1wcmltZW5nLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvd2l6YXJkL2NvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN2RixPQUFPLEVBQUMsU0FBUyxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3BELE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxVQUFVLENBQUM7QUFFbEMsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUMzQyxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUl6RDtJQXVDa0Qsd0RBQXNCO0lBdkN4RTtRQUFBLHFFQTJFQztRQTVCVyxnQkFBVSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7O0lBNEI1QyxDQUFDOzs7OztJQTFCQyx3REFBaUI7Ozs7SUFBakIsVUFBa0IsU0FBMEI7UUFBNUMsaUJBbUJDO1FBbEJDLElBQUksQ0FBQyxTQUFTLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDckMsUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsV0FBVyxFQUFFLFNBQVMsQ0FBQyxDQUFDO1NBQzlDO1FBQ0QsSUFBSSxTQUFTLENBQUMsS0FBSyxFQUFFO1lBQ25CLFNBQVMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFVBQUEsSUFBSTtnQkFDMUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBQSxLQUFLO29CQUN2QixjQUFjLENBQUMsWUFBWSxDQUFDLFNBQVMsRUFBRSxLQUFLLEVBQUUsS0FBSSxDQUFDLENBQUM7Z0JBQ3RELENBQUMsQ0FBQyxDQUFDO1lBQ0wsQ0FBQyxDQUFDLENBQUM7WUFDSCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksU0FBUyxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLGNBQU0sT0FBQSxJQUFJLFNBQVMsQ0FBQyxFQUFFLENBQUMsRUFBakIsQ0FBaUIsQ0FBQyxDQUFDLENBQUM7WUFDN0UsSUFBSSxDQUFDLGlCQUFpQixHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLFVBQUMsSUFBSTtnQkFDaEQsNEJBQ0ssU0FBUyxDQUFDLE9BQU8sSUFBSSxFQUFFLEVBQ3ZCLElBQUksQ0FBQyxPQUFPLElBQUksRUFBRSxFQUNyQjtZQUNKLENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFDRCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsU0FBUyxDQUFDLFdBQVcsSUFBSSxDQUFDLENBQUM7SUFDckQsQ0FBQzs7Ozs7SUFFRCxtREFBWTs7OztJQUFaLFVBQWEsS0FBSztRQUNoQixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsS0FBSyxDQUFDO1FBQzlCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzlCLENBQUM7O2dCQXpFRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG1CQUFtQjtvQkFDN0IsUUFBUSxFQUFFLDArQ0FpQ1Q7b0JBQ0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEOzs7NkJBVUUsTUFBTTs7SUE0QlQsbUNBQUM7Q0FBQSxBQTNFRCxDQXVDa0Qsc0JBQXNCLEdBb0N2RTtTQXBDWSw0QkFBNEI7OztJQUV2QyxpREFBcUI7O0lBRXJCLHlEQUF1Qzs7SUFFdkMsd0RBQXlCOztJQUV6QixrREFBMEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Rm9ybUFycmF5LCBGb3JtR3JvdXB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7TG9nVXRpbHN9IGZyb20gJ0Blci9jb3JlJztcbmltcG9ydCB7Rm9ybWx5Rm9ybU9wdGlvbnN9IGZyb20gJ0BuZ3gtZm9ybWx5L2NvcmUnO1xuaW1wb3J0IHtQbmdGb3JtbHlVdGlsc30gZnJvbSAnLi4vLi4vdXRpbHMnO1xuaW1wb3J0IHtQbmdGb3JtbHlGb3JtQ29tcG9uZW50fSBmcm9tICcuLi9mb3JtL2NvbXBvbmVudCc7XG5pbXBvcnQge1dpemFyZEZvcm1Qcm9wc30gZnJvbSAnLi90eXBlJztcblxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwbmctZm9ybWx5LXdpemFyZCcsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHBuZy1wYW5lbCBbaGVhZGVyXT1cImZvcm1Qcm9wcy5oZWFkZXJcIiBbZm9vdGVyXT1cImZvcm1Qcm9wcy5mb290ZXJcIiBbaWNvbl09XCJmb3JtUHJvcHMuaWNvblwiIFt0b2dnbGVhYmxlXT1cImZvcm1Qcm9wcy5jb2xsYXBzYWJsZVwiPlxuICAgICAgPHBuZy13aXphcmQgWyhhY3RpdmVJbmRleCldPVwiY3VycmVudFN0ZXBJbmRleFwiXG4gICAgICAgICAgICAgICAgICAoc3RlcENoYW5nZSk9XCJvblN0ZXBDaGFuZ2UoJGV2ZW50KVwiXG4gICAgICAgICAgICAgICAgICBbc3R5bGVDbGFzc109XCJmb3JtUHJvcHMuc3R5bGVDbGFzc1wiXG4gICAgICAgICAgICAgICAgICBbc3R5bGVdPVwiZm9ybVByb3BzLnN0eWxlXCJcbiAgICAgICAgICAgICAgICAgIFtzdGVwU3R5bGVDbGFzc109XCJmb3JtUHJvcHNbJ3N0ZXBTdHlsZUNsYXNzJ11cIlxuICAgICAgICAgICAgICAgICAgW3N0ZXBTdHlsZV09XCJmb3JtUHJvcHNbJ3N0ZXBTdHlsZSddXCJcbiAgICAgID5cbiAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgc3RlcCBvZiBmb3JtUHJvcHNbJ3N0ZXBzJ107IGxldCBpID0gaW5kZXg7XCI+XG4gICAgICAgICAgPHBuZy1zdGVwXG4gICAgICAgICAgICBbbGFiZWxdPVwic3RlcC5sYWJlbFwiXG4gICAgICAgICAgICBbc3R5bGVDbGFzc109XCJzdGVwLnN0eWxlQ2xhc3NcIlxuICAgICAgICAgICAgW3N0eWxlXT1cInN0ZXAuc3R5bGVcIlxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxmb3JtbHktZm9ybVxuICAgICAgICAgICAgICBbZm9ybV09XCJmb3JtQXJyYXkuYXQoaSlcIlxuICAgICAgICAgICAgICBbKG1vZGVsKV09XCJmb3JtUHJvcHMubW9kZWxcIlxuICAgICAgICAgICAgICBbZmllbGRzXT1cInN0ZXAuZmllbGRzXCJcbiAgICAgICAgICAgICAgW29wdGlvbnNdPVwic3RlcEZvcm1seU9wdGlvbnNbaV1cIj5cbiAgICAgICAgICAgIDwvZm9ybWx5LWZvcm0+XG4gICAgICAgICAgPC9wbmctc3RlcD5cbiAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICAgIDxuZy10ZW1wbGF0ZSBlclR5cGVkVGVtcGxhdGU9XCJmb290ZXJcIj5cbiAgICAgICAgICA8YnV0dG9uIHBCdXR0b24gdHlwZT1cImJ1dHRvblwiICpuZ0lmPVwiY3VycmVudFN0ZXBJbmRleCsxID09PSBmb3JtUHJvcHNbJ3N0ZXBzJ10ubGVuZ3RoXCJcbiAgICAgICAgICAgICAgICAgIGNsYXNzPVwicHVsbC1yaWdodFwiIGljb249XCJmYSBmYS1zYXZlXCIgaWNvblBvcz1cInJpZ2h0XCIgbGFiZWw9XCLmj5DkuqRcIj48L2J1dHRvbj5cbiAgICAgICAgPC9uZy10ZW1wbGF0ZT5cbiAgICAgIDwvcG5nLXdpemFyZD5cbiAgICA8L3BuZy1wYW5lbD5cbiAgICA8IS0tPHBuZy1mb3JtLWRlYnVnIFttb2RlbF09XCJmb3JtTW9kZWxcIi0tPlxuICAgIDwhLS1bZGVidWdGb3JtUHJvcHNdPVwiZGVidWdGb3JtUHJvcHNcIi0tPlxuICAgIDwhLS1bcnVudGltZUZvcm1Qcm9wc109XCJmb3JtUHJvcHNcIj4tLT5cbiAgICA8IS0tPC9wbmctZm9ybS1kZWJ1Zz4tLT5cbiAgYCxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5cbmV4cG9ydCBjbGFzcyBQbmdGb3JtbHlXaXphcmRGb3JtQ29tcG9uZW50IGV4dGVuZHMgUG5nRm9ybWx5Rm9ybUNvbXBvbmVudCB7XG5cbiAgZm9ybUFycmF5OiBGb3JtQXJyYXk7XG5cbiAgc3RlcEZvcm1seU9wdGlvbnM6IEZvcm1seUZvcm1PcHRpb25zW107XG5cbiAgY3VycmVudFN0ZXBJbmRleDogbnVtYmVyO1xuXG4gIEBPdXRwdXQoKSBzdGVwQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIHJlc29sdmVGb3JtRmllbGRzKGZvcm1Qcm9wczogV2l6YXJkRm9ybVByb3BzKSB7XG4gICAgaWYgKCFmb3JtUHJvcHMgfHwgIWZvcm1Qcm9wc1snc3RlcHMnXSkge1xuICAgICAgTG9nVXRpbHMuZXJyb3IodGhpcywgJ+ayoeacieWumuS5iXN0ZXBzJywgZm9ybVByb3BzKTtcbiAgICB9XG4gICAgaWYgKGZvcm1Qcm9wcy5zdGVwcykge1xuICAgICAgZm9ybVByb3BzLnN0ZXBzLmZvckVhY2goc3RlcCA9PiB7XG4gICAgICAgIHN0ZXAuZmllbGRzLmZvckVhY2goZmllbGQgPT4ge1xuICAgICAgICAgIFBuZ0Zvcm1seVV0aWxzLnJlc29sdmVGaWVsZChmb3JtUHJvcHMsIGZpZWxkLCB0aGlzKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuZm9ybUFycmF5ID0gbmV3IEZvcm1BcnJheShmb3JtUHJvcHMuc3RlcHMubWFwKCgpID0+IG5ldyBGb3JtR3JvdXAoe30pKSk7XG4gICAgICB0aGlzLnN0ZXBGb3JtbHlPcHRpb25zID0gZm9ybVByb3BzLnN0ZXBzLm1hcCgoc3RlcCkgPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC4uLmZvcm1Qcm9wcy5vcHRpb25zIHx8IHt9LFxuICAgICAgICAgIC4uLnN0ZXAub3B0aW9ucyB8fCB7fVxuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfVxuICAgIHRoaXMuY3VycmVudFN0ZXBJbmRleCA9IGZvcm1Qcm9wcy5hY3RpdmVJbmRleCB8fCAwO1xuICB9XG5cbiAgb25TdGVwQ2hhbmdlKGV2ZW50KSB7XG4gICAgdGhpcy5jdXJyZW50U3RlcEluZGV4ID0gZXZlbnQ7XG4gICAgdGhpcy5zdGVwQ2hhbmdlLmVtaXQoZXZlbnQpO1xuICB9XG5cbn1cbiJdfQ==