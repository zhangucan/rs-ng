/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, EventEmitter, Output } from '@angular/core';
import { FormArray, FormGroup } from '@angular/forms';
import { LogUtils } from '@er/core';
import { PngFormlyUtils } from '../../utils';
import { PngFormlyFormComponent } from '../form/component';
var PngFormlyTabsFormComponent = /** @class */ (function (_super) {
    tslib_1.__extends(PngFormlyTabsFormComponent, _super);
    function PngFormlyTabsFormComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onTabChange = new EventEmitter();
        _this.onTabClose = new EventEmitter();
        return _this;
    }
    /**
     * @param {?} formProps
     * @return {?}
     */
    PngFormlyTabsFormComponent.prototype.resolveFormFields = /**
     * @param {?} formProps
     * @return {?}
     */
    function (formProps) {
        var _this = this;
        if (!formProps || !formProps['tabs']) {
            LogUtils.error(this, '没有定义tabs', formProps);
        }
        if (formProps.tabs) {
            formProps.tabs.forEach(function (tab) {
                tab.fields.forEach(function (field) {
                    PngFormlyUtils.resolveField(_this._formProps, field, _this);
                });
            });
            this.formArray = new FormArray(formProps.tabs.map(function () { return new FormGroup({}); }));
            this.tabFormlyOptions = formProps.tabs.map(function (tab) {
                return tslib_1.__assign({}, formProps.options || {}, tab.options || {});
            });
        }
        this.currentTabIndex = formProps.activeIndex || 0;
    };
    /**
     * @return {?}
     */
    PngFormlyTabsFormComponent.prototype.afterPropsInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PngFormlyTabsFormComponent.prototype.tabChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.currentTabIndex = event;
        this.onTabChange.emit(event);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    PngFormlyTabsFormComponent.prototype.tabClose = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.onTabClose.emit(event);
    };
    PngFormlyTabsFormComponent.decorators = [
        { type: Component, args: [{
                    selector: 'png-formly-tab',
                    template: "\n    <png-panel [header]=\"formProps.caption\" [footer]=\"formProps.footer\" [icon]=\"formProps.icon\" [toggleable]=\"formProps.collapsable\">\n      <p-tabView [activeIndex]=\"formProps['activeIndex']\"\n                 [styleClass]=\"formProps.styleClass\"\n                 [style]=\"formProps.style\"\n                 [orientation]=\"formProps['tabOrientation']\"\n                 (onChange)=\"tabChange($event)\"\n                 (onClose)=\"tabClose($event)\"\n      >\n        <ng-container>\n          <p-tabPanel *ngFor=\"let tab of formProps['tabs']; let i = index\"\n                      [header]=\"tab.caption\"\n                      [headerStyle]=\"tab.style\"\n                      [headerStyleClass]=\"tab.styleClass\"\n                      [leftIcon]=\"tab.leftIcon\"\n                      [rightIcon]=\"tab.rightIcon\"\n          >\n            <formly-form\n              [form]=\"formArray.at(i)\"\n              [(model)]=\"formProps.model\"\n              [fields]=\"tab.fields\"\n              [options]=\"tabFormlyOptions[i]\">\n            </formly-form>\n          </p-tabPanel>\n        </ng-container>\n      </p-tabView>\n    </png-panel>\n\n    <div [ngClass]=\"formProps.buttonsStyleClass\">\n      <er-button [stateKey]=\"formProps.$id\"\n                 icon=\"fa fa-save\"\n                 label=\"\u63D0&nbsp;&nbsp;&nbsp;\u4EA4\"\n                 title=\"\u4FDD\u7559\u6570\u636E\u5230\u670D\u52A1\u7AEF\"\n                 class=\"mr-2\"\n                 type=\"button\"\n                 (onClick)=\"formlyForm.submit()\"\n                 [styleClass]=\"formProps.submitBtnStyleClass\"\n      ></er-button>\n      <er-button icon=\"fa fa-circle-o\"\n                 class=\"mr-2\"\n                 label=\"\u91CD&nbsp;&nbsp;&nbsp;\u586B\"\n                 title=\"\u6062\u590D\u5230\u4FEE\u6539\u524D\u7684\u72B6\u6001\"\n                 [styleClass]=\"formProps.resetBtnStyleClass\"\n                 (onClick)=\"formlyForm.resetModel()\">\n      </er-button>\n\n      <ng-container *ngFor=\"let btn of formProps.buttons\">\n        <er-button erPropsBind [props]=\"btn\" [context]=\"btn.context\"></er-button>\n      </ng-container>\n    </div>\n\n    <!--<png-form-debug [model]=\"formModel\"-->\n    <!--[debugFormProps]=\"props\"-->\n    <!--[runtimeFormProps]=\"formProps\">-->\n    <!--</png-form-debug>-->\n  ",
                    styles: [":host::ng-deep .ui-tabview .ui-state-active{background-color:transparent!important}:host::ng-deep .ui-tabview .ui-tabview-panel{margin:10px}:host::ng-deep .ui-tabview .ui-tabview-selected{border-left:5px solid #3bdc06}"]
                }] }
    ];
    PngFormlyTabsFormComponent.propDecorators = {
        onTabChange: [{ type: Output }],
        onTabClose: [{ type: Output }]
    };
    return PngFormlyTabsFormComponent;
}(PngFormlyFormComponent));
export { PngFormlyTabsFormComponent };
if (false) {
    /** @type {?} */
    PngFormlyTabsFormComponent.prototype.formArray;
    /** @type {?} */
    PngFormlyTabsFormComponent.prototype.tabFormlyOptions;
    /** @type {?} */
    PngFormlyTabsFormComponent.prototype.currentTabIndex;
    /** @type {?} */
    PngFormlyTabsFormComponent.prototype.onTabChange;
    /** @type {?} */
    PngFormlyTabsFormComponent.prototype.onTabClose;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVyL2Zvcm1seS1wcmltZW5nLyIsInNvdXJjZXMiOlsibGliL2NvbXBvbmVudHMvdGFiL2NvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUMsU0FBUyxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3BELE9BQU8sRUFBQyxRQUFRLEVBQUMsTUFBTSxVQUFVLENBQUM7QUFFbEMsT0FBTyxFQUFDLGNBQWMsRUFBQyxNQUFNLGFBQWEsQ0FBQztBQUMzQyxPQUFPLEVBQUMsc0JBQXNCLEVBQUMsTUFBTSxtQkFBbUIsQ0FBQztBQUd6RDtJQTZEZ0Qsc0RBQXNCO0lBN0R0RTtRQUFBLHFFQTBHQztRQXJDVyxpQkFBVyxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFakMsZ0JBQVUsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDOztJQW1DNUMsQ0FBQzs7Ozs7SUFqQ0Msc0RBQWlCOzs7O0lBQWpCLFVBQWtCLFNBQXVCO1FBQXpDLGlCQW1CQztRQWxCQyxJQUFJLENBQUMsU0FBUyxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1lBQ3BDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLFVBQVUsRUFBRSxTQUFTLENBQUMsQ0FBQztTQUM3QztRQUNELElBQUksU0FBUyxDQUFDLElBQUksRUFBRTtZQUNsQixTQUFTLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFBLEdBQUc7Z0JBQ3hCLEdBQUcsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFVBQUEsS0FBSztvQkFDdEIsY0FBYyxDQUFDLFlBQVksQ0FBQyxLQUFJLENBQUMsVUFBVSxFQUFFLEtBQUssRUFBRSxLQUFJLENBQUMsQ0FBQztnQkFDNUQsQ0FBQyxDQUFDLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztZQUNILElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxTQUFTLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsY0FBTSxPQUFBLElBQUksU0FBUyxDQUFDLEVBQUUsQ0FBQyxFQUFqQixDQUFpQixDQUFDLENBQUMsQ0FBQztZQUM1RSxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsVUFBQyxHQUFHO2dCQUM3Qyw0QkFDSyxTQUFTLENBQUMsT0FBTyxJQUFJLEVBQUUsRUFDdkIsR0FBRyxDQUFDLE9BQU8sSUFBSSxFQUFFLEVBQ3BCO1lBQ0osQ0FBQyxDQUFDLENBQUM7U0FDSjtRQUNELElBQUksQ0FBQyxlQUFlLEdBQUcsU0FBUyxDQUFDLFdBQVcsSUFBSSxDQUFDLENBQUM7SUFDcEQsQ0FBQzs7OztJQUVELG1EQUFjOzs7SUFBZDtJQUNBLENBQUM7Ozs7O0lBRUQsOENBQVM7Ozs7SUFBVCxVQUFVLEtBQUs7UUFDYixJQUFJLENBQUMsZUFBZSxHQUFHLEtBQUssQ0FBQztRQUM3QixJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMvQixDQUFDOzs7OztJQUVELDZDQUFROzs7O0lBQVIsVUFBUyxLQUFLO1FBQ1osSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDOUIsQ0FBQzs7Z0JBeEdGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixRQUFRLEVBQUUsczBFQXVEVDs7aUJBRUY7Ozs4QkFVRSxNQUFNOzZCQUVOLE1BQU07O0lBbUNULGlDQUFDO0NBQUEsQUExR0QsQ0E2RGdELHNCQUFzQixHQTZDckU7U0E3Q1ksMEJBQTBCOzs7SUFFckMsK0NBQXFCOztJQUVyQixzREFBc0M7O0lBRXRDLHFEQUF3Qjs7SUFFeEIsaURBQTJDOztJQUUzQyxnREFBMEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtGb3JtQXJyYXksIEZvcm1Hcm91cH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtMb2dVdGlsc30gZnJvbSAnQGVyL2NvcmUnO1xuaW1wb3J0IHtGb3JtbHlGb3JtT3B0aW9uc30gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5pbXBvcnQge1BuZ0Zvcm1seVV0aWxzfSBmcm9tICcuLi8uLi91dGlscyc7XG5pbXBvcnQge1BuZ0Zvcm1seUZvcm1Db21wb25lbnR9IGZyb20gJy4uL2Zvcm0vY29tcG9uZW50JztcbmltcG9ydCB7VGFiRm9ybVByb3BzfSBmcm9tICcuL3R5cGUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwbmctZm9ybWx5LXRhYicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHBuZy1wYW5lbCBbaGVhZGVyXT1cImZvcm1Qcm9wcy5jYXB0aW9uXCIgW2Zvb3Rlcl09XCJmb3JtUHJvcHMuZm9vdGVyXCIgW2ljb25dPVwiZm9ybVByb3BzLmljb25cIiBbdG9nZ2xlYWJsZV09XCJmb3JtUHJvcHMuY29sbGFwc2FibGVcIj5cbiAgICAgIDxwLXRhYlZpZXcgW2FjdGl2ZUluZGV4XT1cImZvcm1Qcm9wc1snYWN0aXZlSW5kZXgnXVwiXG4gICAgICAgICAgICAgICAgIFtzdHlsZUNsYXNzXT1cImZvcm1Qcm9wcy5zdHlsZUNsYXNzXCJcbiAgICAgICAgICAgICAgICAgW3N0eWxlXT1cImZvcm1Qcm9wcy5zdHlsZVwiXG4gICAgICAgICAgICAgICAgIFtvcmllbnRhdGlvbl09XCJmb3JtUHJvcHNbJ3RhYk9yaWVudGF0aW9uJ11cIlxuICAgICAgICAgICAgICAgICAob25DaGFuZ2UpPVwidGFiQ2hhbmdlKCRldmVudClcIlxuICAgICAgICAgICAgICAgICAob25DbG9zZSk9XCJ0YWJDbG9zZSgkZXZlbnQpXCJcbiAgICAgID5cbiAgICAgICAgPG5nLWNvbnRhaW5lcj5cbiAgICAgICAgICA8cC10YWJQYW5lbCAqbmdGb3I9XCJsZXQgdGFiIG9mIGZvcm1Qcm9wc1sndGFicyddOyBsZXQgaSA9IGluZGV4XCJcbiAgICAgICAgICAgICAgICAgICAgICBbaGVhZGVyXT1cInRhYi5jYXB0aW9uXCJcbiAgICAgICAgICAgICAgICAgICAgICBbaGVhZGVyU3R5bGVdPVwidGFiLnN0eWxlXCJcbiAgICAgICAgICAgICAgICAgICAgICBbaGVhZGVyU3R5bGVDbGFzc109XCJ0YWIuc3R5bGVDbGFzc1wiXG4gICAgICAgICAgICAgICAgICAgICAgW2xlZnRJY29uXT1cInRhYi5sZWZ0SWNvblwiXG4gICAgICAgICAgICAgICAgICAgICAgW3JpZ2h0SWNvbl09XCJ0YWIucmlnaHRJY29uXCJcbiAgICAgICAgICA+XG4gICAgICAgICAgICA8Zm9ybWx5LWZvcm1cbiAgICAgICAgICAgICAgW2Zvcm1dPVwiZm9ybUFycmF5LmF0KGkpXCJcbiAgICAgICAgICAgICAgWyhtb2RlbCldPVwiZm9ybVByb3BzLm1vZGVsXCJcbiAgICAgICAgICAgICAgW2ZpZWxkc109XCJ0YWIuZmllbGRzXCJcbiAgICAgICAgICAgICAgW29wdGlvbnNdPVwidGFiRm9ybWx5T3B0aW9uc1tpXVwiPlxuICAgICAgICAgICAgPC9mb3JtbHktZm9ybT5cbiAgICAgICAgICA8L3AtdGFiUGFuZWw+XG4gICAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgPC9wLXRhYlZpZXc+XG4gICAgPC9wbmctcGFuZWw+XG5cbiAgICA8ZGl2IFtuZ0NsYXNzXT1cImZvcm1Qcm9wcy5idXR0b25zU3R5bGVDbGFzc1wiPlxuICAgICAgPGVyLWJ1dHRvbiBbc3RhdGVLZXldPVwiZm9ybVByb3BzLiRpZFwiXG4gICAgICAgICAgICAgICAgIGljb249XCJmYSBmYS1zYXZlXCJcbiAgICAgICAgICAgICAgICAgbGFiZWw9XCLmj5AmbmJzcDsmbmJzcDsmbmJzcDvkuqRcIlxuICAgICAgICAgICAgICAgICB0aXRsZT1cIuS/neeVmeaVsOaNruWIsOacjeWKoeerr1wiXG4gICAgICAgICAgICAgICAgIGNsYXNzPVwibXItMlwiXG4gICAgICAgICAgICAgICAgIHR5cGU9XCJidXR0b25cIlxuICAgICAgICAgICAgICAgICAob25DbGljayk9XCJmb3JtbHlGb3JtLnN1Ym1pdCgpXCJcbiAgICAgICAgICAgICAgICAgW3N0eWxlQ2xhc3NdPVwiZm9ybVByb3BzLnN1Ym1pdEJ0blN0eWxlQ2xhc3NcIlxuICAgICAgPjwvZXItYnV0dG9uPlxuICAgICAgPGVyLWJ1dHRvbiBpY29uPVwiZmEgZmEtY2lyY2xlLW9cIlxuICAgICAgICAgICAgICAgICBjbGFzcz1cIm1yLTJcIlxuICAgICAgICAgICAgICAgICBsYWJlbD1cIumHjSZuYnNwOyZuYnNwOyZuYnNwO+Whq1wiXG4gICAgICAgICAgICAgICAgIHRpdGxlPVwi5oGi5aSN5Yiw5L+u5pS55YmN55qE54q25oCBXCJcbiAgICAgICAgICAgICAgICAgW3N0eWxlQ2xhc3NdPVwiZm9ybVByb3BzLnJlc2V0QnRuU3R5bGVDbGFzc1wiXG4gICAgICAgICAgICAgICAgIChvbkNsaWNrKT1cImZvcm1seUZvcm0ucmVzZXRNb2RlbCgpXCI+XG4gICAgICA8L2VyLWJ1dHRvbj5cblxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgYnRuIG9mIGZvcm1Qcm9wcy5idXR0b25zXCI+XG4gICAgICAgIDxlci1idXR0b24gZXJQcm9wc0JpbmQgW3Byb3BzXT1cImJ0blwiIFtjb250ZXh0XT1cImJ0bi5jb250ZXh0XCI+PC9lci1idXR0b24+XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8L2Rpdj5cblxuICAgIDwhLS08cG5nLWZvcm0tZGVidWcgW21vZGVsXT1cImZvcm1Nb2RlbFwiLS0+XG4gICAgPCEtLVtkZWJ1Z0Zvcm1Qcm9wc109XCJwcm9wc1wiLS0+XG4gICAgPCEtLVtydW50aW1lRm9ybVByb3BzXT1cImZvcm1Qcm9wc1wiPi0tPlxuICAgIDwhLS08L3BuZy1mb3JtLWRlYnVnPi0tPlxuICBgLFxuICBzdHlsZVVybHM6IFsnc3R5bGVzLnNjc3MnXVxufSlcblxuZXhwb3J0IGNsYXNzIFBuZ0Zvcm1seVRhYnNGb3JtQ29tcG9uZW50IGV4dGVuZHMgUG5nRm9ybWx5Rm9ybUNvbXBvbmVudCB7XG5cbiAgZm9ybUFycmF5OiBGb3JtQXJyYXk7XG5cbiAgdGFiRm9ybWx5T3B0aW9uczogRm9ybWx5Rm9ybU9wdGlvbnNbXTtcblxuICBjdXJyZW50VGFiSW5kZXg6IG51bWJlcjtcblxuICBAT3V0cHV0KCkgb25UYWJDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgQE91dHB1dCgpIG9uVGFiQ2xvc2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgcmVzb2x2ZUZvcm1GaWVsZHMoZm9ybVByb3BzOiBUYWJGb3JtUHJvcHMpIHtcbiAgICBpZiAoIWZvcm1Qcm9wcyB8fCAhZm9ybVByb3BzWyd0YWJzJ10pIHtcbiAgICAgIExvZ1V0aWxzLmVycm9yKHRoaXMsICfmsqHmnInlrprkuYl0YWJzJywgZm9ybVByb3BzKTtcbiAgICB9XG4gICAgaWYgKGZvcm1Qcm9wcy50YWJzKSB7XG4gICAgICBmb3JtUHJvcHMudGFicy5mb3JFYWNoKHRhYiA9PiB7XG4gICAgICAgIHRhYi5maWVsZHMuZm9yRWFjaChmaWVsZCA9PiB7XG4gICAgICAgICAgUG5nRm9ybWx5VXRpbHMucmVzb2x2ZUZpZWxkKHRoaXMuX2Zvcm1Qcm9wcywgZmllbGQsIHRoaXMpO1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5mb3JtQXJyYXkgPSBuZXcgRm9ybUFycmF5KGZvcm1Qcm9wcy50YWJzLm1hcCgoKSA9PiBuZXcgRm9ybUdyb3VwKHt9KSkpO1xuICAgICAgdGhpcy50YWJGb3JtbHlPcHRpb25zID0gZm9ybVByb3BzLnRhYnMubWFwKCh0YWIpID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5mb3JtUHJvcHMub3B0aW9ucyB8fCB7fSxcbiAgICAgICAgICAuLi50YWIub3B0aW9ucyB8fCB7fVxuICAgICAgICB9O1xuICAgICAgfSk7XG4gICAgfVxuICAgIHRoaXMuY3VycmVudFRhYkluZGV4ID0gZm9ybVByb3BzLmFjdGl2ZUluZGV4IHx8IDA7XG4gIH1cblxuICBhZnRlclByb3BzSW5pdCgpIHtcbiAgfVxuXG4gIHRhYkNoYW5nZShldmVudCkge1xuICAgIHRoaXMuY3VycmVudFRhYkluZGV4ID0gZXZlbnQ7XG4gICAgdGhpcy5vblRhYkNoYW5nZS5lbWl0KGV2ZW50KTtcbiAgfVxuXG4gIHRhYkNsb3NlKGV2ZW50KSB7XG4gICAgdGhpcy5vblRhYkNsb3NlLmVtaXQoZXZlbnQpO1xuICB9XG5cbn1cbiJdfQ==