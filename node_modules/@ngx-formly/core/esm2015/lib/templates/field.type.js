/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc
 */
import { Input } from '@angular/core';
/**
 * @abstract
 * @template F
 */
export class FieldType {
    /**
     * @return {?}
     */
    get model() { return this.field.model; }
    /**
     * @param {?} m
     * @return {?}
     */
    set model(m) { console.warn(`NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }
    /**
     * @return {?}
     */
    get form() { return (/** @type {?} */ (this.field.parent.formControl)); }
    /**
     * @param {?} form
     * @return {?}
     */
    set form(form) { console.warn(`NgxFormly: passing 'form' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }
    /**
     * @return {?}
     */
    get options() { return this.field.options; }
    /**
     * @param {?} options
     * @return {?}
     */
    set options(options) { console.warn(`NgxFormly: passing 'options' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }
    /**
     * @return {?}
     */
    get key() { return this.field.key; }
    /**
     * @return {?}
     */
    get formControl() { return this.field.formControl; }
    /**
     * @return {?}
     */
    get to() { return this.field.templateOptions; }
    /**
     * @return {?}
     */
    get showError() { return this.options.showError(this); }
    /**
     * @return {?}
     */
    get id() { return this.field.id; }
    /**
     * @return {?}
     */
    get formState() { return this.options.formState || {}; }
}
FieldType.propDecorators = {
    field: [{ type: Input }],
    model: [{ type: Input }],
    form: [{ type: Input }],
    options: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    FieldType.prototype.field;
    /** @type {?} */
    FieldType.prototype.defaultOptions;
}
/**
 * @deprecated use `FieldType` instead
 * @abstract
 */
export class Field extends FieldType {
    constructor() {
        super();
        console.warn(`NgxFormly: 'Field' has been renamed to 'FieldType', extend 'FieldType' instead.`);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmllbGQudHlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZ3gtZm9ybWx5L2NvcmUvIiwic291cmNlcyI6WyJsaWIvdGVtcGxhdGVzL2ZpZWxkLnR5cGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7O0FBSXRDLE1BQU0sT0FBZ0IsU0FBUzs7OztJQUk3QixJQUNJLEtBQUssS0FBSyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQzs7Ozs7SUFDeEMsSUFBSSxLQUFLLENBQUMsQ0FBTSxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsd0NBQXdDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSx5REFBeUQsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7OztJQUUzSixJQUNJLElBQUksS0FBSyxPQUFPLG1CQUFZLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBQSxDQUFDLENBQUMsQ0FBQzs7Ozs7SUFDaEUsSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsdUNBQXVDLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSx5REFBeUQsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7OztJQUV2SixJQUNJLE9BQU8sS0FBbUIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7Ozs7O0lBQzFELElBQUksT0FBTyxDQUFDLE9BQXFCLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQywwQ0FBMEMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLHlEQUF5RCxDQUFDLENBQUMsQ0FBQyxDQUFDOzs7O0lBRTlLLElBQUksR0FBRyxLQUFLLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDOzs7O0lBRXBDLElBQUksV0FBVyxLQUF1QixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQzs7OztJQUV0RSxJQUFJLEVBQUUsS0FBMkIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLGVBQWUsQ0FBQyxDQUFDLENBQUM7Ozs7SUFFckUsSUFBSSxTQUFTLEtBQWMsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7Ozs7SUFFakUsSUFBSSxFQUFFLEtBQWEsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7Ozs7SUFFMUMsSUFBSSxTQUFTLEtBQUssT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDOzs7b0JBekJ2RCxLQUFLO29CQUdMLEtBQUs7bUJBSUwsS0FBSztzQkFJTCxLQUFLOzs7O0lBWE4sMEJBQWtCOztJQUNsQixtQ0FBbUI7Ozs7OztBQThCckIsTUFBTSxPQUFnQixLQUFNLFNBQVEsU0FBUztJQUMzQztRQUNFLEtBQUssRUFBRSxDQUFDO1FBQ1IsT0FBTyxDQUFDLElBQUksQ0FBQyxpRkFBaUYsQ0FBQyxDQUFDO0lBQ2xHLENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBGb3JtbHlGaWVsZENvbmZpZyB9IGZyb20gJy4uL2NvbXBvbmVudHMvZm9ybWx5LmZpZWxkLmNvbmZpZyc7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBGaWVsZFR5cGU8RiBleHRlbmRzIEZvcm1seUZpZWxkQ29uZmlnID0gRm9ybWx5RmllbGRDb25maWc+IHtcbiAgQElucHV0KCkgZmllbGQ6IEY7XG4gIGRlZmF1bHRPcHRpb25zPzogRjtcblxuICBASW5wdXQoKVxuICBnZXQgbW9kZWwoKSB7IHJldHVybiB0aGlzLmZpZWxkLm1vZGVsOyB9XG4gIHNldCBtb2RlbChtOiBhbnkpIHsgY29uc29sZS53YXJuKGBOZ3hGb3JtbHk6IHBhc3NpbmcgJ21vZGVsJyBpbnB1dCB0byAnJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9JyBjb21wb25lbnQgaXMgbm90IHJlcXVpcmVkIGFueW1vcmUsIHlvdSBtYXkgcmVtb3ZlIGl0IWApOyB9XG5cbiAgQElucHV0KClcbiAgZ2V0IGZvcm0oKSB7IHJldHVybiA8Rm9ybUdyb3VwPiB0aGlzLmZpZWxkLnBhcmVudC5mb3JtQ29udHJvbDsgfVxuICBzZXQgZm9ybShmb3JtKSB7IGNvbnNvbGUud2FybihgTmd4Rm9ybWx5OiBwYXNzaW5nICdmb3JtJyBpbnB1dCB0byAnJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9JyBjb21wb25lbnQgaXMgbm90IHJlcXVpcmVkIGFueW1vcmUsIHlvdSBtYXkgcmVtb3ZlIGl0IWApOyB9XG5cbiAgQElucHV0KClcbiAgZ2V0IG9wdGlvbnMoKTogRlsnb3B0aW9ucyddIHsgcmV0dXJuIHRoaXMuZmllbGQub3B0aW9uczsgfVxuICBzZXQgb3B0aW9ucyhvcHRpb25zOiBGWydvcHRpb25zJ10pIHsgY29uc29sZS53YXJuKGBOZ3hGb3JtbHk6IHBhc3NpbmcgJ29wdGlvbnMnIGlucHV0IHRvICcke3RoaXMuY29uc3RydWN0b3IubmFtZX0nIGNvbXBvbmVudCBpcyBub3QgcmVxdWlyZWQgYW55bW9yZSwgeW91IG1heSByZW1vdmUgaXQhYCk7IH1cblxuICBnZXQga2V5KCkgeyByZXR1cm4gdGhpcy5maWVsZC5rZXk7IH1cblxuICBnZXQgZm9ybUNvbnRyb2woKTogRlsnZm9ybUNvbnRyb2wnXSB7IHJldHVybiB0aGlzLmZpZWxkLmZvcm1Db250cm9sOyB9XG5cbiAgZ2V0IHRvKCk6IEZbJ3RlbXBsYXRlT3B0aW9ucyddIHsgcmV0dXJuIHRoaXMuZmllbGQudGVtcGxhdGVPcHRpb25zOyB9XG5cbiAgZ2V0IHNob3dFcnJvcigpOiBib29sZWFuIHsgcmV0dXJuIHRoaXMub3B0aW9ucy5zaG93RXJyb3IodGhpcyk7IH1cblxuICBnZXQgaWQoKTogc3RyaW5nIHsgcmV0dXJuIHRoaXMuZmllbGQuaWQ7IH1cblxuICBnZXQgZm9ybVN0YXRlKCkgeyByZXR1cm4gdGhpcy5vcHRpb25zLmZvcm1TdGF0ZSB8fCB7fTsgfVxufVxuXG4vKipcbiAqIEBkZXByZWNhdGVkIHVzZSBgRmllbGRUeXBlYCBpbnN0ZWFkXG4gKi9cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBGaWVsZCBleHRlbmRzIEZpZWxkVHlwZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKCk7XG4gICAgY29uc29sZS53YXJuKGBOZ3hGb3JtbHk6ICdGaWVsZCcgaGFzIGJlZW4gcmVuYW1lZCB0byAnRmllbGRUeXBlJywgZXh0ZW5kICdGaWVsZFR5cGUnIGluc3RlYWQuYCk7XG4gIH1cbn1cbiJdfQ==