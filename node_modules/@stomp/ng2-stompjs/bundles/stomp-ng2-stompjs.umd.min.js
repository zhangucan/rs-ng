!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("rxjs/operators"),require("@angular/core"),require("rxjs"),require("@stomp/stompjs")):"function"==typeof define&&define.amd?define("@stomp/ng2-stompjs",["exports","rxjs/operators","@angular/core","rxjs","@stomp/stompjs"],t):t((e.stomp=e.stomp||{},e.stomp["ng2-stompjs"]={}),e.Rx.Observable.prototype,e.ng.core,e.rxjs,e.stompjs)}(this,function(e,r,t,n,i){"use strict";var o=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};var c={CLOSED:0,TRYING:1,CONNECTED:2,DISCONNECTING:3};c[c.CLOSED]="CLOSED",c[c.TRYING]="TRYING",c[c.CONNECTED]="CONNECTED",c[c.DISCONNECTING]="DISCONNECTING";var s=function(){function e(){var t=this;this.queuedMessages=[],this.debug=function(e){console.log(new Date,e)},this.on_connect=function(e){t.debug("Connected"),t._serverHeadersBehaviourSubject.next(e.headers),t.state.next(c.CONNECTED)},this.on_error=function(e){t.errorSubject.next(e),"object"==typeof e&&(e=e.body),t.debug("Error: "+e),t.client.connected||t.state.next(c.CLOSED)},this.state=new n.BehaviorSubject(c.CLOSED),this.connectObservable=this.state.pipe(r.filter(function(e){return e===c.CONNECTED})),this.connectObservable.subscribe(function(){t.sendQueuedMessages()}),this._serverHeadersBehaviourSubject=new n.BehaviorSubject(null),this.serverHeadersObservable=this._serverHeadersBehaviourSubject.pipe(r.filter(function(e){return null!==e})),this.errorSubject=new n.Subject}return Object.defineProperty(e.prototype,"config",{set:function(e){this._config=e},enumerable:!0,configurable:!0}),e.prototype.initStompClient=function(){this.disconnect(),"string"==typeof this._config.url?this.client=i.client(this._config.url):this.client=i.over(this._config.url),this.client.heartbeat.incoming=this._config.heartbeat_in,this.client.heartbeat.outgoing=this._config.heartbeat_out,this.client.reconnect_delay=this._config.reconnect_delay,this._config.debug||(this.debug=function(){}),this.client.debug=this.debug,this.setupOnReceive(),this.setupReceipts()},e.prototype.initAndConnect=function(){this.initStompClient(),this._config.headers||(this._config.headers={}),this.client.connect(this._config.headers,this.on_connect,this.on_error),this.debug("Connecting..."),this.state.next(c.TRYING)},e.prototype.disconnect=function(){var e=this;if(this.client){if(!this.client.connected)return void this.state.next(c.CLOSED);this.state.next(c.DISCONNECTING),this.client.disconnect(function(){return e.state.next(c.CLOSED)})}},e.prototype.connected=function(){return this.state.getValue()===c.CONNECTED},e.prototype.publish=function(e,t,n){void 0===n&&(n={}),this.connected()?this.client.send(e,n,t):(this.debug("Not connected, queueing "+t),this.queuedMessages.push({queueName:e,message:t,headers:n}))},e.prototype.sendQueuedMessages=function(){var e,t,n=this.queuedMessages;this.queuedMessages=[],this.debug("Will try sending queued messages "+n);try{for(var i=function(e){var t="function"==typeof Symbol&&e[Symbol.iterator],n=0;return t?t.call(e):{next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}}}(n),o=i.next();!o.done;o=i.next()){var s=o.value;this.debug("Attempting to send "+s),this.publish(s.queueName,s.message,s.headers)}}catch(r){e={error:r}}finally{try{o&&!o.done&&(t=i["return"])&&t.call(i)}finally{if(e)throw e.error}}},e.prototype.subscribe=function(i,o){var s=this;return void 0===o&&(o={}),this.debug("Request to subscribe "+i),o.ack||(o.ack="auto"),n.Observable.create(function(t){var e,n;return n=s.connectObservable.subscribe(function(){s.debug("Will subscribe to "+i),e=s.client.subscribe(i,function(e){t.next(e)},o)}),function(){s.debug("Stop watching connection state (for "+i+")"),n.unsubscribe(),s.state.getValue()===c.CONNECTED?(s.debug("Will unsubscribe from "+i+" at Stomp"),e.unsubscribe()):s.debug("Stomp not connected, no need to unsubscribe from "+i+" at Stomp")}}).pipe(r.share())},e.prototype.setupOnReceive=function(){var t=this;this.defaultMessagesObservable=new n.Subject,this.client.onreceive=function(e){t.defaultMessagesObservable.next(e)}},e.prototype.setupReceipts=function(){var t=this;this.receiptsObservable=new n.Subject,this.client.onreceipt=function(e){t.receiptsObservable.next(e)}},e.prototype.waitForReceipt=function(t,n){this.receiptsObservable.pipe(r.filter(function(e){return e.headers["receipt-id"]===t}),r.first()).subscribe(function(e){n(e)})},e}();s.decorators=[{type:t.Injectable}],s.ctorParameters=function(){return[]};var u=function(){};u.decorators=[{type:t.Injectable}];var a=function(n){function e(e){var t=n.call(this)||this;return t.config=e,t.initAndConnect(),t}return function(e,t){function n(){this.constructor=e}o(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}(e,n),e}(s);a.decorators=[{type:t.Injectable}],a.ctorParameters=function(){return[{type:u}]},e.StompRService=s,e.StompService=a,e.StompState=c,e.StompConfig=u,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=stomp-ng2-stompjs.umd.min.js.map
